(function(d,p){typeof exports=="object"&&typeof module<"u"?p(exports,require("apache-arrow")):typeof define=="function"&&define.amd?define(["exports","apache-arrow"],p):(d=typeof globalThis<"u"?globalThis:d||self,p(d.DataPrism={},d.Arrow))})(this,function(d,p){"use strict";var qe=Object.defineProperty;var Ve=(d,p,f)=>p in d?qe(d,p,{enumerable:!0,configurable:!0,writable:!0,value:f}):d[p]=f;var o=(d,p,f)=>Ve(d,typeof p!="symbol"?p+"":p,f);var f=typeof document<"u"?document.currentScript:null;function te(s){const e=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(s){for(const t in s)if(t!=="default"){const i=Object.getOwnPropertyDescriptor(s,t);Object.defineProperty(e,t,i.get?i:{enumerable:!0,get:()=>s[t]})}}return e.default=s,Object.freeze(e)}const l=te(p),E=class E{constructor(){o(this,"errorLog",[])}static getInstance(){return E.instance||(E.instance=new E),E.instance}handleError(e,t){const i={message:e instanceof Error?e.message:String(e),code:this.generateErrorCode(t),source:t};return this.errorLog.push(i),console.error(`DataPrism Error [${t}]:`,i),i}generateErrorCode(e){const t=Date.now();return`${e.toUpperCase().slice(0,3)}_${t}`}getErrorHistory(){return[...this.errorLog]}clearErrorHistory(){this.errorLog=[]}};o(E,"instance");let P=E;typeof window<"u"&&window.addEventListener("unhandledrejection",s=>{P.getInstance().handleError(s.reason,"orchestration")});var ie=Object.create,z=Object.defineProperty,se=Object.getOwnPropertyDescriptor,re=Object.getOwnPropertyNames,ne=Object.getPrototypeOf,ae=Object.prototype.hasOwnProperty,oe=(s,e)=>()=>(e||s((e={exports:{}}).exports,e),e.exports),ce=(s,e,t,i)=>{if(e&&typeof e=="object"||typeof e=="function")for(let r of re(e))!ae.call(s,r)&&r!==t&&z(s,r,{get:()=>e[r],enumerable:!(i=se(e,r))||i.enumerable});return s},le=(s,e,t)=>(t=s!=null?ie(ne(s)):{},ce(!s||!s.__esModule?z(t,"default",{value:s,enumerable:!0}):t,s)),de=oe((s,e)=>{e.exports=Worker}),ue=(s=>(s[s.UNDEFINED=0]="UNDEFINED",s[s.AUTOMATIC=1]="AUTOMATIC",s[s.READ_ONLY=2]="READ_ONLY",s[s.READ_WRITE=3]="READ_WRITE",s))(ue||{}),he=(s=>(s[s.IDENTIFIER=0]="IDENTIFIER",s[s.NUMERIC_CONSTANT=1]="NUMERIC_CONSTANT",s[s.STRING_CONSTANT=2]="STRING_CONSTANT",s[s.OPERATOR=3]="OPERATOR",s[s.KEYWORD=4]="KEYWORD",s[s.COMMENT=5]="COMMENT",s))(he||{}),ge=(s=>(s[s.NONE=0]="NONE",s[s.DEBUG=1]="DEBUG",s[s.INFO=2]="INFO",s[s.WARNING=3]="WARNING",s[s.ERROR=4]="ERROR",s))(ge||{}),pe=(s=>(s[s.NONE=0]="NONE",s[s.CONNECT=1]="CONNECT",s[s.DISCONNECT=2]="DISCONNECT",s[s.OPEN=3]="OPEN",s[s.QUERY=4]="QUERY",s[s.INSTANTIATE=5]="INSTANTIATE",s))(pe||{}),ye=(s=>(s[s.NONE=0]="NONE",s[s.OK=1]="OK",s[s.ERROR=2]="ERROR",s[s.START=3]="START",s[s.RUN=4]="RUN",s[s.CAPTURE=5]="CAPTURE",s))(ye||{}),me=(s=>(s[s.NONE=0]="NONE",s[s.WEB_WORKER=1]="WEB_WORKER",s[s.NODE_WORKER=2]="NODE_WORKER",s[s.BINDINGS=3]="BINDINGS",s[s.ASYNC_DUCKDB=4]="ASYNC_DUCKDB",s))(me||{}),fe=class{constructor(s=2){this.level=s}log(s){s.level>=this.level&&console.log(s)}},we=(s=>(s[s.SUCCESS=0]="SUCCESS",s))(we||{}),Ee=class{constructor(s,e){this._bindings=s,this._conn=e}get bindings(){return this._bindings}async close(){return this._bindings.disconnect(this._conn)}useUnsafe(s){return s(this._bindings,this._conn)}async query(s){this._bindings.logger.log({timestamp:new Date,level:2,origin:4,topic:4,event:4,value:s});let e=await this._bindings.runQuery(this._conn,s),t=l.RecordBatchReader.from(e);return console.assert(t.isSync(),"Reader is not sync"),console.assert(t.isFile(),"Reader is not file"),new l.Table(t)}async send(s,e=!1){this._bindings.logger.log({timestamp:new Date,level:2,origin:4,topic:4,event:4,value:s});let t=await this._bindings.startPendingQuery(this._conn,s,e);for(;t==null;)t=await this._bindings.pollPendingQuery(this._conn);let i=new B(this._bindings,this._conn,t),r=await l.RecordBatchReader.from(i);return console.assert(r.isAsync()),console.assert(r.isStream()),r}async cancelSent(){return await this._bindings.cancelPendingQuery(this._conn)}async getTableNames(s){return await this._bindings.getTableNames(this._conn,s)}async prepare(s){let e=await this._bindings.createPrepared(this._conn,s);return new Re(this._bindings,this._conn,e)}async insertArrowTable(s,e){let t=l.tableToIPC(s,"stream");await this.insertArrowFromIPCStream(t,e)}async insertArrowFromIPCStream(s,e){await this._bindings.insertArrowFromIPCStream(this._conn,s,e)}async insertCSVFromPath(s,e){await this._bindings.insertCSVFromPath(this._conn,s,e)}async insertJSONFromPath(s,e){await this._bindings.insertJSONFromPath(this._conn,s,e)}},B=class{constructor(s,e,t){this.db=s,this.conn=e,this.header=t,this._first=!0,this._depleted=!1,this._inFlight=null}async next(){if(this._first)return this._first=!1,{done:!1,value:this.header};if(this._depleted)return{done:!0,value:null};let s;return this._inFlight!=null?(s=await this._inFlight,this._inFlight=null):s=await this.db.fetchQueryResults(this.conn),this._depleted=s.length==0,this._depleted||(this._inFlight=this.db.fetchQueryResults(this.conn)),{done:this._depleted,value:s}}[Symbol.asyncIterator](){return this}},Re=class{constructor(s,e,t){this.bindings=s,this.connectionId=e,this.statementId=t}async close(){await this.bindings.closePrepared(this.connectionId,this.statementId)}async query(...s){let e=await this.bindings.runPrepared(this.connectionId,this.statementId,s),t=l.RecordBatchReader.from(e);return console.assert(t.isSync()),console.assert(t.isFile()),new l.Table(t)}async send(...s){let e=await this.bindings.sendPrepared(this.connectionId,this.statementId,s),t=new B(this.bindings,this.connectionId,e),i=await l.RecordBatchReader.from(t);return console.assert(i.isAsync()),console.assert(i.isStream()),i}},Te=(s=>(s.CANCEL_PENDING_QUERY="CANCEL_PENDING_QUERY",s.CLOSE_PREPARED="CLOSE_PREPARED",s.COLLECT_FILE_STATISTICS="COLLECT_FILE_STATISTICS",s.REGISTER_OPFS_FILE_NAME="REGISTER_OPFS_FILE_NAME",s.CONNECT="CONNECT",s.COPY_FILE_TO_BUFFER="COPY_FILE_TO_BUFFER",s.COPY_FILE_TO_PATH="COPY_FILE_TO_PATH",s.CREATE_PREPARED="CREATE_PREPARED",s.DISCONNECT="DISCONNECT",s.DROP_FILE="DROP_FILE",s.DROP_FILES="DROP_FILES",s.EXPORT_FILE_STATISTICS="EXPORT_FILE_STATISTICS",s.FETCH_QUERY_RESULTS="FETCH_QUERY_RESULTS",s.FLUSH_FILES="FLUSH_FILES",s.GET_FEATURE_FLAGS="GET_FEATURE_FLAGS",s.GET_TABLE_NAMES="GET_TABLE_NAMES",s.GET_VERSION="GET_VERSION",s.GLOB_FILE_INFOS="GLOB_FILE_INFOS",s.INSERT_ARROW_FROM_IPC_STREAM="INSERT_ARROW_FROM_IPC_STREAM",s.INSERT_CSV_FROM_PATH="IMPORT_CSV_FROM_PATH",s.INSERT_JSON_FROM_PATH="IMPORT_JSON_FROM_PATH",s.INSTANTIATE="INSTANTIATE",s.OPEN="OPEN",s.PING="PING",s.POLL_PENDING_QUERY="POLL_PENDING_QUERY",s.REGISTER_FILE_BUFFER="REGISTER_FILE_BUFFER",s.REGISTER_FILE_HANDLE="REGISTER_FILE_HANDLE",s.REGISTER_FILE_URL="REGISTER_FILE_URL",s.RESET="RESET",s.RUN_PREPARED="RUN_PREPARED",s.RUN_QUERY="RUN_QUERY",s.SEND_PREPARED="SEND_PREPARED",s.START_PENDING_QUERY="START_PENDING_QUERY",s.TOKENIZE="TOKENIZE",s))(Te||{}),ve=(s=>(s.CONNECTION_INFO="CONNECTION_INFO",s.ERROR="ERROR",s.FEATURE_FLAGS="FEATURE_FLAGS",s.FILE_BUFFER="FILE_BUFFER",s.FILE_INFOS="FILE_INFOS",s.FILE_SIZE="FILE_SIZE",s.FILE_STATISTICS="FILE_STATISTICS",s.INSTANTIATE_PROGRESS="INSTANTIATE_PROGRESS",s.LOG="LOG",s.PROGRESS_UPDATE="PROGRESS_UPDATE",s.OK="OK",s.PREPARED_STATEMENT_ID="PREPARED_STATEMENT_ID",s.QUERY_PLAN="QUERY_PLAN",s.QUERY_RESULT="QUERY_RESULT",s.QUERY_RESULT_CHUNK="QUERY_RESULT_CHUNK",s.QUERY_RESULT_HEADER="QUERY_RESULT_HEADER",s.QUERY_RESULT_HEADER_OR_NULL="QUERY_RESULT_HEADER_OR_NULL",s.REGISTERED_FILE="REGISTERED_FILE",s.SCRIPT_TOKENS="SCRIPT_TOKENS",s.SUCCESS="SUCCESS",s.TABLE_NAMES="TABLE_NAMES",s.VERSION_STRING="VERSION_STRING",s))(ve||{}),h=class{constructor(s,e){this.promiseResolver=()=>{},this.promiseRejecter=()=>{},this.type=s,this.data=e,this.promise=new Promise((t,i)=>{this.promiseResolver=t,this.promiseRejecter=i})}};function _(s){switch(s.typeId){case l.Type.Binary:return{sqlType:"binary"};case l.Type.Bool:return{sqlType:"bool"};case l.Type.Date:return{sqlType:"date"};case l.Type.DateDay:return{sqlType:"date32[d]"};case l.Type.DateMillisecond:return{sqlType:"date64[ms]"};case l.Type.Decimal:{let e=s;return{sqlType:"decimal",precision:e.precision,scale:e.scale}}case l.Type.Float:return{sqlType:"float"};case l.Type.Float16:return{sqlType:"float16"};case l.Type.Float32:return{sqlType:"float32"};case l.Type.Float64:return{sqlType:"float64"};case l.Type.Int:return{sqlType:"int32"};case l.Type.Int16:return{sqlType:"int16"};case l.Type.Int32:return{sqlType:"int32"};case l.Type.Int64:return{sqlType:"int64"};case l.Type.Uint16:return{sqlType:"uint16"};case l.Type.Uint32:return{sqlType:"uint32"};case l.Type.Uint64:return{sqlType:"uint64"};case l.Type.Uint8:return{sqlType:"uint8"};case l.Type.IntervalDayTime:return{sqlType:"interval[dt]"};case l.Type.IntervalYearMonth:return{sqlType:"interval[m]"};case l.Type.List:return{sqlType:"list",valueType:_(s.valueType)};case l.Type.FixedSizeBinary:return{sqlType:"fixedsizebinary",byteWidth:s.byteWidth};case l.Type.Null:return{sqlType:"null"};case l.Type.Utf8:return{sqlType:"utf8"};case l.Type.Struct:return{sqlType:"struct",fields:s.children.map(e=>M(e.name,e.type))};case l.Type.Map:{let e=s;return{sqlType:"map",keyType:_(e.keyType),valueType:_(e.valueType)}}case l.Type.Time:return{sqlType:"time[s]"};case l.Type.TimeMicrosecond:return{sqlType:"time[us]"};case l.Type.TimeMillisecond:return{sqlType:"time[ms]"};case l.Type.TimeNanosecond:return{sqlType:"time[ns]"};case l.Type.TimeSecond:return{sqlType:"time[s]"};case l.Type.Timestamp:return{sqlType:"timestamp",timezone:s.timezone||void 0};case l.Type.TimestampSecond:return{sqlType:"timestamp[s]",timezone:s.timezone||void 0};case l.Type.TimestampMicrosecond:return{sqlType:"timestamp[us]",timezone:s.timezone||void 0};case l.Type.TimestampNanosecond:return{sqlType:"timestamp[ns]",timezone:s.timezone||void 0};case l.Type.TimestampMillisecond:return{sqlType:"timestamp[ms]",timezone:s.timezone||void 0}}throw new Error("unsupported arrow type: ".concat(s.toString()))}function M(s,e){let t=_(e);return t.name=s,t}var Se=new TextEncoder,Pe=class{constructor(s,e=null){this._onInstantiationProgress=[],this._onExecutionProgress=[],this._worker=null,this._workerShutdownPromise=null,this._workerShutdownResolver=()=>{},this._nextMessageId=0,this._pendingRequests=new Map,this._logger=s,this._onMessageHandler=this.onMessage.bind(this),this._onErrorHandler=this.onError.bind(this),this._onCloseHandler=this.onClose.bind(this),e!=null&&this.attach(e)}get logger(){return this._logger}attach(s){this._worker=s,this._worker.addEventListener("message",this._onMessageHandler),this._worker.addEventListener("error",this._onErrorHandler),this._worker.addEventListener("close",this._onCloseHandler),this._workerShutdownPromise=new Promise((e,t)=>{this._workerShutdownResolver=e})}detach(){this._worker&&(this._worker.removeEventListener("message",this._onMessageHandler),this._worker.removeEventListener("error",this._onErrorHandler),this._worker.removeEventListener("close",this._onCloseHandler),this._worker=null,this._workerShutdownResolver(null),this._workerShutdownPromise=null,this._workerShutdownResolver=()=>{})}async terminate(){this._worker&&(this._worker.terminate(),this._worker=null,this._workerShutdownPromise=null,this._workerShutdownResolver=()=>{})}async postTask(s,e=[]){if(!this._worker){console.error("cannot send a message since the worker is not set!");return}let t=this._nextMessageId++;return this._pendingRequests.set(t,s),this._worker.postMessage({messageId:t,type:s.type,data:s.data},e),await s.promise}onMessage(s){var e;let t=s.data;switch(t.type){case"PROGRESS_UPDATE":{for(let r of this._onExecutionProgress)r(t.data);return}case"LOG":{this._logger.log(t.data);return}case"INSTANTIATE_PROGRESS":{for(let r of this._onInstantiationProgress)r(t.data);return}}let i=this._pendingRequests.get(t.requestId);if(!i){console.warn("unassociated response: [".concat(t.requestId,", ").concat(t.type.toString(),"]"));return}if(this._pendingRequests.delete(t.requestId),t.type=="ERROR"){let r=new Error(t.data.message);r.name=t.data.name,(e=Object.getOwnPropertyDescriptor(r,"stack"))!=null&&e.writable&&(r.stack=t.data.stack),i.promiseRejecter(r);return}switch(i.type){case"CLOSE_PREPARED":case"COLLECT_FILE_STATISTICS":case"REGISTER_OPFS_FILE_NAME":case"COPY_FILE_TO_PATH":case"DISCONNECT":case"DROP_FILE":case"DROP_FILES":case"FLUSH_FILES":case"INSERT_ARROW_FROM_IPC_STREAM":case"IMPORT_CSV_FROM_PATH":case"IMPORT_JSON_FROM_PATH":case"OPEN":case"PING":case"REGISTER_FILE_BUFFER":case"REGISTER_FILE_HANDLE":case"REGISTER_FILE_URL":case"RESET":if(t.type=="OK"){i.promiseResolver(t.data);return}break;case"INSTANTIATE":if(this._onInstantiationProgress=[],t.type=="OK"){i.promiseResolver(t.data);return}break;case"GLOB_FILE_INFOS":if(t.type=="FILE_INFOS"){i.promiseResolver(t.data);return}break;case"GET_VERSION":if(t.type=="VERSION_STRING"){i.promiseResolver(t.data);return}break;case"GET_FEATURE_FLAGS":if(t.type=="FEATURE_FLAGS"){i.promiseResolver(t.data);return}break;case"GET_TABLE_NAMES":if(t.type=="TABLE_NAMES"){i.promiseResolver(t.data);return}break;case"TOKENIZE":if(t.type=="SCRIPT_TOKENS"){i.promiseResolver(t.data);return}break;case"COPY_FILE_TO_BUFFER":if(t.type=="FILE_BUFFER"){i.promiseResolver(t.data);return}break;case"EXPORT_FILE_STATISTICS":if(t.type=="FILE_STATISTICS"){i.promiseResolver(t.data);return}break;case"CONNECT":if(t.type=="CONNECTION_INFO"){i.promiseResolver(t.data);return}break;case"RUN_PREPARED":case"RUN_QUERY":if(t.type=="QUERY_RESULT"){i.promiseResolver(t.data);return}break;case"SEND_PREPARED":if(t.type=="QUERY_RESULT_HEADER"){i.promiseResolver(t.data);return}break;case"START_PENDING_QUERY":if(t.type=="QUERY_RESULT_HEADER_OR_NULL"){i.promiseResolver(t.data);return}break;case"POLL_PENDING_QUERY":if(t.type=="QUERY_RESULT_HEADER_OR_NULL"){i.promiseResolver(t.data);return}break;case"CANCEL_PENDING_QUERY":if(this._onInstantiationProgress=[],t.type=="SUCCESS"){i.promiseResolver(t.data);return}break;case"FETCH_QUERY_RESULTS":if(t.type=="QUERY_RESULT_CHUNK"){i.promiseResolver(t.data);return}break;case"CREATE_PREPARED":if(t.type=="PREPARED_STATEMENT_ID"){i.promiseResolver(t.data);return}break}i.promiseRejecter(new Error("unexpected response type: ".concat(t.type.toString())))}onError(s){console.error(s),console.error("error in duckdb worker: ".concat(s.message)),this._pendingRequests.clear()}onClose(){if(this._workerShutdownResolver(null),this._pendingRequests.size!=0){console.warn("worker terminated with ".concat(this._pendingRequests.size," pending requests"));return}this._pendingRequests.clear()}async reset(){let s=new h("RESET",null);return await this.postTask(s)}async ping(){let s=new h("PING",null);await this.postTask(s)}async dropFile(s){let e=new h("DROP_FILE",s);return await this.postTask(e)}async dropFiles(){let s=new h("DROP_FILES",null);return await this.postTask(s)}async flushFiles(){let s=new h("FLUSH_FILES",null);return await this.postTask(s)}async instantiate(s,e=null,t=i=>{}){this._onInstantiationProgress.push(t);let i=new h("INSTANTIATE",[s,e]);return await this.postTask(i)}async getVersion(){let s=new h("GET_VERSION",null);return await this.postTask(s)}async getFeatureFlags(){let s=new h("GET_FEATURE_FLAGS",null);return await this.postTask(s)}async open(s){let e=new h("OPEN",s);await this.postTask(e)}async tokenize(s){let e=new h("TOKENIZE",s);return await this.postTask(e)}async connectInternal(){let s=new h("CONNECT",null);return await this.postTask(s)}async connect(){let s=await this.connectInternal();return new Ee(this,s)}async disconnect(s){let e=new h("DISCONNECT",s);await this.postTask(e)}async runQuery(s,e){let t=new h("RUN_QUERY",[s,e]);return await this.postTask(t)}async startPendingQuery(s,e,t=!1){let i=new h("START_PENDING_QUERY",[s,e,t]);return await this.postTask(i)}async pollPendingQuery(s){let e=new h("POLL_PENDING_QUERY",s);return await this.postTask(e)}async cancelPendingQuery(s){let e=new h("CANCEL_PENDING_QUERY",s);return await this.postTask(e)}async fetchQueryResults(s){let e=new h("FETCH_QUERY_RESULTS",s);return await this.postTask(e)}async getTableNames(s,e){let t=new h("GET_TABLE_NAMES",[s,e]);return await this.postTask(t)}async createPrepared(s,e){let t=new h("CREATE_PREPARED",[s,e]);return await this.postTask(t)}async closePrepared(s,e){let t=new h("CLOSE_PREPARED",[s,e]);await this.postTask(t)}async runPrepared(s,e,t){let i=new h("RUN_PREPARED",[s,e,t]);return await this.postTask(i)}async sendPrepared(s,e,t){let i=new h("SEND_PREPARED",[s,e,t]);return await this.postTask(i)}async globFiles(s){let e=new h("GLOB_FILE_INFOS",s);return await this.postTask(e)}async registerFileText(s,e){let t=Se.encode(e);await this.registerFileBuffer(s,t)}async registerFileURL(s,e,t,i){e===void 0&&(e=s);let r=new h("REGISTER_FILE_URL",[s,e,t,i]);await this.postTask(r)}async registerEmptyFileBuffer(s){}async registerFileBuffer(s,e){let t=new h("REGISTER_FILE_BUFFER",[s,e]);await this.postTask(t,[e.buffer])}async registerFileHandle(s,e,t,i){let r=new h("REGISTER_FILE_HANDLE",[s,e,t,i]);await this.postTask(r,[])}async registerOPFSFileName(s){let e=new h("REGISTER_OPFS_FILE_NAME",[s]);await this.postTask(e,[])}async collectFileStatistics(s,e){let t=new h("COLLECT_FILE_STATISTICS",[s,e]);await this.postTask(t,[])}async exportFileStatistics(s){let e=new h("EXPORT_FILE_STATISTICS",s);return await this.postTask(e,[])}async copyFileToBuffer(s){let e=new h("COPY_FILE_TO_BUFFER",s);return await this.postTask(e)}async copyFileToPath(s,e){let t=new h("COPY_FILE_TO_PATH",[s,e]);await this.postTask(t)}async insertArrowFromIPCStream(s,e,t){if(e.length==0)return;let i=new h("INSERT_ARROW_FROM_IPC_STREAM",[s,e,t]);await this.postTask(i,[e.buffer])}async insertCSVFromPath(s,e,t){if(t.columns!==void 0){let r=[];for(let n in t.columns){let a=t.columns[n];r.push(M(n,a))}t.columnsFlat=r,delete t.columns}let i=new h("IMPORT_CSV_FROM_PATH",[s,e,t]);await this.postTask(i)}async insertJSONFromPath(s,e,t){if(t.columns!==void 0){let r=[];for(let n in t.columns){let a=t.columns[n];r.push(M(n,a))}t.columnsFlat=r,delete t.columns}let i=new h("IMPORT_JSON_FROM_PATH",[s,e,t]);await this.postTask(i)}};function _e(){let s=new TextDecoder;return e=>(typeof SharedArrayBuffer<"u"&&e.buffer instanceof SharedArrayBuffer&&(e=new Uint8Array(e)),s.decode(e))}_e();var be=(s=>(s[s.BUFFER=0]="BUFFER",s[s.NODE_FS=1]="NODE_FS",s[s.BROWSER_FILEREADER=2]="BROWSER_FILEREADER",s[s.BROWSER_FSACCESS=3]="BROWSER_FSACCESS",s[s.HTTP=4]="HTTP",s[s.S3=5]="S3",s))(be||{}),Me=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,3,1,0,1,10,14,1,12,0,65,0,65,0,65,0,252,10,0,0,11])),Ie=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,8,1,6,0,6,64,25,11,11])),Ae=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11])),Ce=()=>(async s=>{try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(s)}catch{return!1}})(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])),$={name:"@duckdb/duckdb-wasm",version:"1.29.1-dev132.0"},De=$.name,ke=$.version,Le=()=>typeof navigator>"u";function x(){let s="https://cdn.jsdelivr.net/npm/".concat(De,"@").concat(ke,"/dist/");return{mvp:{mainModule:"".concat(s,"duckdb-mvp.wasm"),mainWorker:"".concat(s,"duckdb-browser-mvp.worker.js")},eh:{mainModule:"".concat(s,"duckdb-eh.wasm"),mainWorker:"".concat(s,"duckdb-browser-eh.worker.js")}}}var I=null,A=null,C=null,D=null,k=null;async function Oe(){return I==null&&(I=typeof BigInt64Array<"u"),A==null&&(A=await Ie()),C==null&&(C=await Ce()),D==null&&(D=await Ae()),k==null&&(k=await Me()),{bigInt64Array:I,crossOriginIsolated:Le()||globalThis.crossOriginIsolated||!1,wasmExceptions:A,wasmSIMD:D,wasmThreads:C,wasmBulkMemory:k}}async function Fe(s){let e=await Oe();if(e.wasmExceptions){if(e.wasmSIMD&&e.wasmThreads&&e.crossOriginIsolated&&s.coi)return{mainModule:s.coi.mainModule,mainWorker:s.coi.mainWorker,pthreadWorker:s.coi.pthreadWorker};if(s.eh)return{mainModule:s.eh.mainModule,mainWorker:s.eh.mainWorker,pthreadWorker:null}}return{mainModule:s.mvp.mainModule,mainWorker:s.mvp.mainWorker,pthreadWorker:null}}le(de());class Ne{constructor(e){o(this,"config",null);o(this,"baseUrl");this.baseUrl=e||this.detectCDNBaseUrl()}detectCDNBaseUrl(){if(typeof window>"u")return"";const t=Array.from(document.getElementsByTagName("script")).find(i=>i.src&&i.src.includes("dataprism"));if(t){const i=new URL(t.src);return`${i.protocol}//${i.host}${i.pathname.replace(/\/[^\/]*$/,"")}`}return""}async loadConfig(){if(this.config)return this.config;try{const e=`${this.baseUrl}/duckdb-config.json`,t=await fetch(e);if(!t.ok)throw new Error(`Failed to load DuckDB config: ${t.status}`);return this.config=await t.json(),this.config}catch(e){throw console.warn("Failed to load DuckDB config from CDN, using fallback"),e}}async getBundles(){try{const e=await this.loadConfig();if(e.hybrid)return console.log("Using hybrid DuckDB loading (JSDelivr WASM + CDN workers)"),x();if(e.bundles)return Object.entries(e.bundles).map(([i,r])=>({name:i,mainModule:`${this.baseUrl}/${r.mainModule}`,mainWorker:`${this.baseUrl}/${r.mainWorker}`,pthreadWorker:r.pthreadWorker?`${this.baseUrl}/${r.pthreadWorker}`:void 0}));throw new Error("Invalid CDN configuration")}catch{return console.log("Using JSDelivr fallback for DuckDB"),x()}}async selectBundle(e){try{return Array.isArray(e)&&e.length>0?typeof SharedArrayBuffer<"u"&&e.find(t=>t.name==="coi")?e.find(t=>t.name==="coi"):e.find(t=>t.name==="eh")?e.find(t=>t.name==="eh"):e.find(t=>t.name==="mvp")||e[0]:await Fe(e)}catch(t){throw console.error("Bundle selection failed:",t),t}}async createDuckDB(){const e=await this.getBundles(),t=await this.selectBundle(e),i=URL.createObjectURL(new Blob([`importScripts("${t.mainWorker}");`],{type:"text/javascript"})),r=new Worker(i),n=new fe,a=new Pe(n,r);return await a.instantiate(t.mainModule,t.pthreadWorker),a}}class H{constructor(e){o(this,"db",null);o(this,"connection",null);o(this,"initialized",!1);o(this,"errorHandler",P.getInstance());o(this,"cdnLoader");this.cdnLoader=new Ne(e)}async initialize(){if(!this.initialized)try{this.db=await this.cdnLoader.createDuckDB(),this.connection=await this.db.connect(),this.initialized=!0,console.log("DuckDB initialized successfully")}catch(e){const t=this.errorHandler.handleError(e,"duckdb");throw new Error(`DuckDB initialization failed: ${t.message}`)}}async query(e){if(!this.connection)throw new Error("DuckDB not initialized");const t=performance.now();try{const i=await this.connection.query(e),r=performance.now(),n=i.toArray().map(a=>a.toJSON());return{data:n,metadata:{rowCount:n.length,executionTime:r-t,memoryUsage:this.getMemoryUsage()}}}catch(i){const r=performance.now(),n=this.errorHandler.handleError(i,"duckdb");return{data:[],metadata:{rowCount:0,executionTime:r-t,memoryUsage:this.getMemoryUsage()},error:n}}}async insertData(e,t){if(!this.connection)throw new Error("DuckDB not initialized");try{await this.connection.query(`DROP TABLE IF EXISTS ${e}`),await this.db.registerFileText(`${e}.json`,JSON.stringify(t)),await this.connection.query(`
        CREATE TABLE ${e} AS 
        SELECT * FROM read_json_auto('${e}.json')
      `),console.log(`Successfully loaded ${t.length} rows into table ${e}`)}catch(i){throw this.errorHandler.handleError(i,"duckdb"),i}}async createTable(e,t){if(!this.connection)throw new Error("DuckDB not initialized");try{const i=Object.entries(t).map(([r,n])=>`${r} ${n}`).join(", ");await this.connection.query(`CREATE TABLE ${e} (${i})`)}catch(i){throw this.errorHandler.handleError(i,"duckdb"),i}}async listTables(){if(!this.connection)throw new Error("DuckDB not initialized");try{return(await this.connection.query("SHOW TABLES")).toArray().map(t=>t.toJSON().name)}catch(e){return this.errorHandler.handleError(e,"duckdb"),[]}}async getTableInfo(e){if(!this.connection)throw new Error("DuckDB not initialized");try{return(await this.connection.query(`DESCRIBE ${e}`)).toArray().map(i=>i.toJSON())}catch(t){return this.errorHandler.handleError(t,"duckdb"),[]}}getMemoryUsage(){return performance.memory?.usedJSHeapSize||0}async close(){this.connection&&(await this.connection.close(),this.connection=null),this.db&&(await this.db.terminate(),this.db=null),this.initialized=!1}isInitialized(){return this.initialized}}const R=class R{constructor(){o(this,"dependencies",new Map);o(this,"eventHandlers",[]);o(this,"loadingPromises",new Map);o(this,"timeouts",new Map)}static getInstance(){return R.instance||(R.instance=new R),R.instance}registerDependency(e,t={}){const i={name:e,state:"initializing",loadStartTime:Date.now(),retryCount:0,maxRetries:t.maxRetries||3,timeoutMs:t.timeout||3e4,requiredFor:[],module:null};return this.dependencies.set(e,i),this.emitEvent("loading",e,i),i}async loadDependency(e,t,i={}){if(this.loadingPromises.has(e))return this.loadingPromises.get(e);this.dependencies.get(e)||this.registerDependency(e,i);const r=this.executeLoad(e,t,i);return this.loadingPromises.set(e,r),r}async executeLoad(e,t,i){const r=this.dependencies.get(e);return new Promise((n,a)=>{const c=setTimeout(()=>{this.setState(e,"timeout");const u={message:`Dependency '${e}' failed to load within ${r.timeoutMs}ms`,code:"DEPENDENCY_TIMEOUT",source:"orchestration"};r.error=u,this.emitEvent("timeout",e,r,u),a(u)},r.timeoutMs);this.timeouts.set(e,c),this.performLoad(e,t,i,c).then(u=>{clearTimeout(c),this.timeouts.delete(e),r.module=u,r.loadEndTime=Date.now(),r.version=this.extractVersion(u),this.setState(e,"ready"),this.emitEvent("ready",e,r),n(u)}).catch(u=>{clearTimeout(c),this.timeouts.delete(e);const y={message:`Failed to load dependency '${e}': ${u}`,code:"DEPENDENCY_LOAD_ERROR",source:"orchestration"};if(r.error=y,r.retryCount<r.maxRetries){r.retryCount++,this.emitEvent("retry",e,r,y);const Ge=i.retryDelay||1e3*r.retryCount;setTimeout(()=>{this.executeLoad(e,t,i).then(n).catch(a)},Ge)}else this.setState(e,"error"),this.emitEvent("error",e,r,y),a(y)})})}async performLoad(e,t,i,r){return this.setState(e,"loading"),await t()}extractVersion(e){if(e){if(e.version)return e.version;if(e.VERSION)return e.VERSION;if(e.get_version&&typeof e.get_version=="function")try{return e.get_version()}catch{return}if(e.Table&&e.RecordBatch)return"17.0.0"}}setState(e,t){const i=this.dependencies.get(e);i&&(i.state=t,this.dependencies.set(e,i))}emitEvent(e,t,i,r){const n={type:e,dependency:t,metadata:{...i},error:r};this.eventHandlers.forEach(a=>{try{a(n)}catch(c){console.error("Error in dependency event handler:",c)}})}async waitForDependency(e,t=3e4){const i=this.dependencies.get(e);if(!i)throw new Error(`Dependency '${e}' not registered`);if(i.state==="ready")return i.module;if(i.state==="error")throw i.error||new Error(`Dependency '${e}' failed to load`);return new Promise((r,n)=>{const a=setTimeout(()=>{n(new Error(`Timeout waiting for dependency '${e}'`))},t),c=u=>{u.dependency===e&&(u.type==="ready"?(clearTimeout(a),r(u.metadata.module)):(u.type==="error"||u.type==="timeout")&&(clearTimeout(a),n(u.error||new Error(`Dependency '${e}' failed to load`))))};this.addEventListener(c),setTimeout(()=>{this.removeEventListener(c)},t+1e3)})}async waitForReady(e=[],t=3e4){const i=e.length>0?e:Array.from(this.dependencies.keys()),r={};return await Promise.all(i.map(async n=>{try{r[n]=await this.waitForDependency(n,t)}catch(a){throw new Error(`Failed to wait for dependency '${n}': ${a}`)}})),r}isDependencyReady(e){return this.dependencies.get(e)?.state==="ready"}getDependencyState(e){return this.dependencies.get(e)?.state}getDependencyMetadata(e){const t=this.dependencies.get(e);return t?{...t}:void 0}getAllDependencies(){return Array.from(this.dependencies.values()).map(e=>({...e}))}getReadyDependencies(){return Array.from(this.dependencies.entries()).filter(([e,t])=>t.state==="ready").map(([e,t])=>e)}getFailedDependencies(){return Array.from(this.dependencies.entries()).filter(([e,t])=>t.state==="error").map(([e,t])=>e)}addEventListener(e){this.eventHandlers.push(e)}removeEventListener(e){const t=this.eventHandlers.indexOf(e);t>-1&&this.eventHandlers.splice(t,1)}async preloadDependencies(e){const t=e.map(async i=>{const r=this.dependencies.get(i);if(!r||r.state==="initializing")throw new Error(`Cannot preload unregistered dependency '${i}'`);return r.state==="ready"?r.module:this.waitForDependency(i)});await Promise.all(t)}clearDependency(e){const t=this.timeouts.get(e);t&&(clearTimeout(t),this.timeouts.delete(e)),this.dependencies.delete(e),this.loadingPromises.delete(e)}clearAll(){this.timeouts.forEach(e=>clearTimeout(e)),this.timeouts.clear(),this.dependencies.clear(),this.loadingPromises.clear(),this.eventHandlers.length=0}getHealthStatus(){const e=this.getAllDependencies(),t=e.filter(c=>c.state==="ready").length,i=e.filter(c=>c.state==="loading").length,r=e.filter(c=>c.state==="error").length,n=e.filter(c=>c.state==="timeout").length,a=e.length>0?t/e.length*100:100;return{totalDependencies:e.length,readyCount:t,loadingCount:i,errorCount:r,timeoutCount:n,healthScore:a}}};o(R,"instance");let w=R;const T=class T{constructor(){o(this,"registry");o(this,"arrowModule",null);this.registry=w.getInstance()}static getInstance(){return T.instance||(T.instance=new T),T.instance}async loadArrow(){if(this.arrowModule)return this.arrowModule;try{const e=await this.registry.loadDependency("apache-arrow",()=>this.loadArrowModule(),{timeout:15e3,maxRetries:3,retryDelay:2e3,required:!0});return this.arrowModule=e,e}catch(e){throw{message:`Failed to load Apache Arrow: ${e}`,code:"ARROW_LOAD_ERROR",source:"orchestration"}}}async loadArrowModule(){const e=[()=>this.loadFromGlobal(),()=>this.loadFromImport(),()=>this.loadFromCDN(),()=>this.loadFromFallback()];let t=null;for(const i of e)try{const r=await i();if(this.validateArrowModule(r))return r}catch(r){t=r;continue}throw new Error(`All Arrow loading strategies failed. Last error: ${t?.message}`)}async loadFromGlobal(){if(typeof window<"u"&&window.Arrow)return window.Arrow;throw new Error("Arrow not found in global scope")}async loadFromImport(){try{return await import("apache-arrow")}catch(e){throw new Error(`Dynamic import failed: ${e}`)}}async loadFromCDN(){return new Promise((e,t)=>{const i=document.createElement("script");i.src="https://cdn.jsdelivr.net/npm/apache-arrow@17.0.0/dist/Arrow.dom.min.js",i.onload=()=>{window.Arrow?e(window.Arrow):t(new Error("Arrow not available after CDN load"))},i.onerror=()=>{t(new Error("Failed to load Arrow from CDN"))},document.head.appendChild(i)})}async loadFromFallback(){return new Promise((e,t)=>{const i=document.createElement("script");i.src="https://unpkg.com/apache-arrow@17.0.0/dist/Arrow.dom.min.js",i.onload=()=>{window.Arrow?e(window.Arrow):t(new Error("Arrow not available after fallback CDN load"))},i.onerror=()=>{t(new Error("Failed to load Arrow from fallback CDN"))},document.head.appendChild(i)})}validateArrowModule(e){return e?["Table","RecordBatch","RecordBatchReader","Schema","Field","Vector","Type"].every(i=>typeof e[i]<"u"):!1}async waitForArrow(e=3e4){try{return await this.registry.waitForDependency("apache-arrow",e)}catch{return await this.loadArrow()}}isArrowReady(){return this.registry.isDependencyReady("apache-arrow")}getArrowModule(){return this.arrowModule}async preloadArrow(){this.isArrowReady()||await this.loadArrow()}getArrowVersion(){if(this.arrowModule)return this.arrowModule.version||"17.0.0"}createArrowError(e,t){return{message:`Arrow Error: ${e}${t?` - ${t.message}`:""}`,code:"ARROW_ERROR",source:"orchestration"}}async createRecordBatchReader(e){const t=await this.waitForArrow();try{return t.RecordBatchReader.from(e)}catch(i){throw this.createArrowError("Failed to create RecordBatchReader",i)}}async createTable(e){const t=await this.waitForArrow();try{return t.Table.from(e)}catch(i){throw this.createArrowError("Failed to create Arrow Table",i)}}async validateArrowData(e){try{return await this.waitForArrow(),e?!!(e instanceof Uint8Array||Array.isArray(e)||e.constructor&&e.constructor.name==="Table"||e.constructor&&e.constructor.name==="RecordBatch"):!1}catch{return!1}}};o(T,"instance");let b=T;class L{constructor(e={}){o(this,"duckdb");o(this,"wasmEngine",null);o(this,"wasmModule",null);o(this,"config");o(this,"initialized",!1);o(this,"startTime",Date.now());o(this,"errorHandler",P.getInstance());o(this,"dependencyRegistry",w.getInstance());o(this,"arrowLoader",b.getInstance());o(this,"metrics",{queryCount:0,totalExecutionTime:0,averageResponseTime:0,memoryPeakUsage:0});this.config={enableWasmOptimizations:!0,maxMemoryMB:4096,queryTimeoutMs:3e4,logLevel:"info",...e},this.duckdb=new H}async initialize(){if(!this.initialized)try{const e=[];e.push(this.dependencyRegistry.loadDependency("duckdb",()=>this.duckdb.initialize(),{timeout:3e4,maxRetries:3})),e.push(this.arrowLoader.loadArrow().catch(t=>(this.log("warn",`Arrow initialization failed: ${t.message}`),null))),this.config.enableWasmOptimizations&&e.push(this.dependencyRegistry.loadDependency("wasm-core",()=>this.initializeWasm(),{timeout:2e4,maxRetries:2}).catch(t=>(this.log("warn",`WASM initialization failed: ${t.message}`),this.config.enableWasmOptimizations=!1,null))),await Promise.allSettled(e),this.initialized=!0,this.log("info","DataPrism Engine initialized successfully"),this.logDependencyStatus()}catch(e){throw this.errorHandler.handleError(e,"orchestration"),e}}async initializeWasm(){if(typeof window>"u")throw new Error("WASM not available in Node environment");try{const t=await import("@dataprism/core");try{await t.default("/wasm/dataprism_core_bg.wasm")}catch{await t.default()}t.init_panic_hook(),this.wasmModule=t,this.wasmEngine=new t.QueryEngine,this.log("info",`WASM module version: ${t.get_version()}`)}catch(e){throw new Error(`WASM initialization failed: ${e}`)}}async query(e){if(!this.initialized)throw new Error("Engine not initialized");const t=performance.now();this.metrics.queryCount++;try{const i=await this.duckdb.query(e);return this.config.enableWasmOptimizations&&this.wasmEngine&&this.shouldUseWasmOptimization(i)?await this.applyWasmOptimizations(i):(this.updateMetrics(performance.now()-t,i.metadata.memoryUsage),i)}catch(i){throw this.errorHandler.handleError(i,"orchestration"),i}}async loadData(e,t="main_table"){if(!this.initialized)throw new Error("Engine not initialized");try{await this.duckdb.insertData(t,e),this.log("info",`Loaded ${e.length} rows into table ${t}`)}catch(i){throw this.errorHandler.handleError(i,"orchestration"),i}}async createTable(e,t){if(!this.initialized)throw new Error("Engine not initialized");await this.duckdb.createTable(e,t)}async listTables(){if(!this.initialized)throw new Error("Engine not initialized");return await this.duckdb.listTables()}async getTableInfo(e){if(!this.initialized)throw new Error("Engine not initialized");return await this.duckdb.getTableInfo(e)}shouldUseWasmOptimization(e){return e.data.length>1e3||e.metadata.executionTime>1e3}async applyWasmOptimizations(e){if(!this.wasmEngine)return e;try{const t=new TextEncoder().encode(JSON.stringify(e.data)),i=await this.wasmEngine.process_data(t);return{data:JSON.parse(i.data),metadata:{rowCount:i.row_count,executionTime:e.metadata.executionTime+i.execution_time_ms,memoryUsage:Math.max(e.metadata.memoryUsage,i.memory_used_bytes)}}}catch(t){return this.log("warn",`WASM optimization failed, falling back to original result: ${t}`),e}}updateMetrics(e,t){this.metrics.totalExecutionTime+=e,this.metrics.averageResponseTime=this.metrics.totalExecutionTime/this.metrics.queryCount,this.metrics.memoryPeakUsage=Math.max(this.metrics.memoryPeakUsage,t)}getMemoryUsage(){return this.wasmEngine?this.wasmEngine.get_memory_usage():performance.memory?.usedJSHeapSize||0}getMetrics(){return{...this.metrics}}getStatus(){return{initialized:this.initialized,wasmModuleLoaded:!!this.wasmModule,duckdbConnected:this.duckdb.isInitialized(),memoryUsage:this.getMemoryUsage(),uptime:Date.now()-this.startTime,dependencies:this.getDependencyStatus(),dependencyHealth:this.getDependencyHealth()}}getVersion(){return this.wasmModule?.get_version()||"0.1.0"}getBuildInfo(){return this.wasmModule?.get_build_info()||{version:"0.1.0",source:"typescript"}}log(e,t){(this.config.logLevel==="debug"||this.config.logLevel==="info"&&e!=="debug"||this.config.logLevel==="warn"&&(e==="warn"||e==="error")||this.config.logLevel==="error"&&e==="error")&&console.log(`[DataPrism:${e.toUpperCase()}] ${t}`)}async waitForReady(e,t=3e4){this.initialized||await this.initialize();try{await this.dependencyRegistry.waitForReady(e,t),this.log("info","All dependencies are ready")}catch(i){const r=this.dependencyRegistry.getHealthStatus();throw this.log("error",`Dependency readiness check failed. Health: ${r.healthScore}%`),i}}async waitForDuckDB(e=3e4){await this.dependencyRegistry.waitForDependency("duckdb",e)}async waitForArrow(e=3e4){await this.arrowLoader.waitForArrow(e)}async waitForWasm(e=2e4){this.config.enableWasmOptimizations&&await this.dependencyRegistry.waitForDependency("wasm-core",e)}async preloadDependencies(e=[]){const t=e.length>0?e:["duckdb","apache-arrow"];this.config.enableWasmOptimizations&&t.push("wasm-core");try{await this.dependencyRegistry.preloadDependencies(t),this.log("info",`Preloaded dependencies: ${t.join(", ")}`)}catch(i){this.log("warn",`Failed to preload some dependencies: ${i}`)}}isReady(){return this.initialized&&this.dependencyRegistry.isDependencyReady("duckdb")}getDependencyStatus(){return{duckdb:this.dependencyRegistry.isDependencyReady("duckdb"),arrow:this.arrowLoader.isArrowReady(),wasm:this.config.enableWasmOptimizations?this.dependencyRegistry.isDependencyReady("wasm-core"):!0,overall:this.isReady()}}getDependencyHealth(){return this.dependencyRegistry.getHealthStatus()}logDependencyStatus(){const e=this.getDependencyStatus(),t=this.getDependencyHealth();if(this.log("info",`Dependency Status - DuckDB: ${e.duckdb}, Arrow: ${e.arrow}, WASM: ${e.wasm}`),this.log("info",`Overall Health Score: ${t.healthScore}%`),t.errorCount>0){const i=this.dependencyRegistry.getFailedDependencies();this.log("warn",`Failed dependencies: ${i.join(", ")}`)}}async close(){await this.duckdb.close(),this.wasmEngine=null,this.wasmModule=null,this.initialized=!1,this.dependencyRegistry.clearAll(),this.log("info","DataPrism Engine closed")}}const v=class v{constructor(){o(this,"registry");this.registry=w.getInstance()}static getInstance(){return v.instance||(v.instance=new v),v.instance}createDependencyError(e,t,i){return{message:this.createContextualMessage(e,t,i),code:this.getDependencyErrorCode(e,t),source:"orchestration",dependency:e,retryCount:i?.retryCount||0,troubleshooting:this.getTroubleshootingSteps(e,t),context:this.gatherContext(e,i)}}createContextualMessage(e,t,i){const r=`Failed to load dependency '${e}': ${t.message}`;if(!i)return r;const n=i.loadEndTime?i.loadEndTime-i.loadStartTime:Date.now()-i.loadStartTime;let a=r;return i.retryCount>0&&(a+=` (Retry ${i.retryCount}/${i.maxRetries})`),n>1e4&&(a+=` - Loading took ${Math.round(n/1e3)}s`),i.requiredFor.length>0&&(a+=` - Required for: ${i.requiredFor.join(", ")}`),a}getDependencyErrorCode(e,t){const i=t.message.toLowerCase();return i.includes("timeout")?`${e.toUpperCase()}_TIMEOUT`:i.includes("network")||i.includes("fetch")?`${e.toUpperCase()}_NETWORK_ERROR`:i.includes("not found")||i.includes("404")?`${e.toUpperCase()}_NOT_FOUND`:i.includes("cors")||i.includes("cross-origin")?`${e.toUpperCase()}_CORS_ERROR`:i.includes("import")||i.includes("module")?`${e.toUpperCase()}_IMPORT_ERROR`:`${e.toUpperCase()}_LOAD_ERROR`}getTroubleshootingSteps(e,t){const i=[],r=t.message.toLowerCase();switch(i.push("Check your internet connection"),i.push("Verify the dependency version is compatible"),e){case"apache-arrow":i.push("Ensure Apache Arrow is available in your build configuration"),i.push("Check if Arrow is properly externalized in your bundler"),i.push("Verify CORS headers if loading from CDN"),i.push("Try loading from a different CDN (JSDelivr, unpkg)"),r.includes("recordbatchreader")&&(i.push("The RecordBatchReader is not available - Arrow may not be fully loaded"),i.push("Try calling await engine.waitForArrow() before using Arrow features"));break;case"duckdb":i.push("Check if DuckDB WASM files are accessible"),i.push("Verify SharedArrayBuffer is available for multi-threading"),i.push("Check COEP/COOP headers for cross-origin isolation"),i.push("Try fallback to single-threaded mode");break;case"wasm-core":i.push("Verify WASM files are built and accessible"),i.push("Check if WebAssembly is supported in your browser"),i.push("Ensure WASM files are served with correct MIME type");break}return r.includes("timeout")&&(i.push("Increase timeout duration in configuration"),i.push("Check if CDN is experiencing issues")),r.includes("cors")&&(i.push("Configure CORS headers on your server"),i.push("Use same-origin resources when possible")),r.includes("network")&&(i.push("Check firewall and proxy settings"),i.push("Try using a different network")),i}gatherContext(e,t){const i={};return t&&(i.loadTime=t.loadEndTime?t.loadEndTime-t.loadStartTime:Date.now()-t.loadStartTime),typeof window<"u"&&(i.browserInfo=`${navigator.userAgent}`,i.networkStatus=navigator.onLine?"online":"offline",e==="wasm-core"&&(i.wasmSupport=typeof WebAssembly<"u"),e==="duckdb"&&(i.sharedArrayBufferSupport=typeof SharedArrayBuffer<"u",i.crossOriginIsolated=window.crossOriginIsolated)),i}formatErrorForLogging(e){let t=`[${e.code}] ${e.message}`;return e.context&&(t+=`
  Context:`,Object.entries(e.context).forEach(([i,r])=>{t+=`
    ${i}: ${r}`})),e.troubleshooting&&e.troubleshooting.length>0&&(t+=`
  Troubleshooting:`,e.troubleshooting.forEach((i,r)=>{t+=`
    ${r+1}. ${i}`})),t}createRetryStrategy(e,t,i){const r=t.message.toLowerCase();let n=!0,a=1e3*Math.pow(2,i),c=3;switch(e){case"apache-arrow":c=4,r.includes("not found")&&(n=!1);break;case"duckdb":c=3,r.includes("sharedarraybuffer")&&(n=!1);break;case"wasm-core":c=2,r.includes("webassembly")&&(n=!1);break}return r.includes("timeout")&&(a=Math.min(a*1.5,1e4)),r.includes("cors")&&(n=!1),(r.includes("404")||r.includes("not found"))&&(n=!1),{shouldRetry:n&&i<c,delay:Math.min(a,1e4),maxRetries:c}}logDependencyError(e){const t=this.formatErrorForLogging(e);e.retryCount===0?console.error("[DataPrism] Dependency Error:",t):console.warn(`[DataPrism] Dependency Retry ${e.retryCount}:`,t)}createUserFriendlyMessage(e){let i=`We're having trouble loading ${e.dependency||"unknown"}. `;return e.context?.networkStatus==="offline"?i+="Please check your internet connection and try again.":e.code.includes("TIMEOUT")?i+="The loading process is taking longer than expected. Please try again.":e.code.includes("CORS")?i+="There's a configuration issue with cross-origin requests. Please contact support.":i+="Please try refreshing the page or contact support if the problem persists.",i}};o(v,"instance");let O=v;const S=class S{constructor(){o(this,"eventHandlers",new Map);o(this,"registry");o(this,"initializationStartTime",0);this.registry=w.getInstance(),this.setupRegistryEventHandlers()}static getInstance(){return S.instance||(S.instance=new S),S.instance}setupRegistryEventHandlers(){this.registry.addEventListener(e=>{this.handleRegistryEvent(e)})}handleRegistryEvent(e){const t={type:this.mapRegistryEventType(e.type,e.dependency),dependency:e.dependency,error:e.error,metadata:e.metadata,timestamp:Date.now()};(e.type==="loading"||e.type==="ready")&&(t.progress=this.calculateProgress()),this.emit(t.type,t),e.type==="ready"&&this.checkAllDependenciesReady()}mapRegistryEventType(e,t){switch(e){case"loading":return"dependencyLoading";case"ready":return this.getSpecificReadyEventType(t);case"error":return"dependencyError";case"timeout":return"dependencyTimeout";case"retry":return"dependencyRetry";default:return"dependencyLoading"}}getSpecificReadyEventType(e){switch(e){case"apache-arrow":return"arrowReady";case"duckdb":return"duckdbReady";case"wasm-core":return"wasmReady";default:return"dependencyReady"}}calculateProgress(){const e=this.registry.getAllDependencies(),t=e.filter(n=>n.state==="ready"),i=e.length,r=t.length;return{loaded:r,total:i,percentage:i>0?Math.round(r/i*100):0}}checkAllDependenciesReady(){const e=this.registry.getAllDependencies(),t=e.filter(i=>i.state==="ready");e.length>0&&t.length===e.length&&this.emit("allDependenciesReady",{type:"allDependenciesReady",progress:this.calculateProgress(),timestamp:Date.now(),metadata:{loadTime:Date.now()-this.initializationStartTime,dependencies:e.map(i=>i.name)}})}addEventListener(e,t){this.eventHandlers.has(e)||this.eventHandlers.set(e,[]),this.eventHandlers.get(e).push(t)}removeEventListener(e,t){const i=this.eventHandlers.get(e);if(i){const r=i.indexOf(t);r>-1&&i.splice(r,1)}}emit(e,t){const i=this.eventHandlers.get(e);i&&i.forEach(r=>{try{r(t)}catch(n){console.error(`Error in DataPrism event handler for ${e}:`,n)}})}onDependencyLoading(e){this.addEventListener("dependencyLoading",e)}onDependencyReady(e){this.addEventListener("dependencyReady",e)}onDependencyError(e){this.addEventListener("dependencyError",e)}onArrowReady(e){this.addEventListener("arrowReady",e)}onDuckDBReady(e){this.addEventListener("duckdbReady",e)}onWasmReady(e){this.addEventListener("wasmReady",e)}onAllDependenciesReady(e){this.addEventListener("allDependenciesReady",e)}onInitializationProgress(e){this.addEventListener("initializationProgress",e)}startInitialization(){this.initializationStartTime=Date.now(),this.emit("initializationProgress",{type:"initializationProgress",progress:{loaded:0,total:0,percentage:0},timestamp:Date.now(),metadata:{stage:"starting"}})}updateInitializationProgress(e,t){const i=this.calculateProgress();this.emit("initializationProgress",{type:"initializationProgress",progress:i,timestamp:Date.now(),metadata:{stage:e,...t}})}createLoadingPromise(e,t=3e4){return new Promise((i,r)=>{const n=setTimeout(()=>{r(new Error(`Timeout waiting for ${e}`))},t),a=c=>{clearTimeout(n),c.error?r(c.error):i(c.metadata)};this.addEventListener(e,a)})}async waitForArrowReady(e=3e4){return this.createLoadingPromise("arrowReady",e)}async waitForDuckDBReady(e=3e4){return this.createLoadingPromise("duckdbReady",e)}async waitForWasmReady(e=2e4){return this.createLoadingPromise("wasmReady",e)}async waitForAllDependenciesReady(e=3e4){return this.createLoadingPromise("allDependenciesReady",e)}getEventStats(){return{totalEvents:0,eventsByType:{},recentEvents:[]}}clearAllEventHandlers(){this.eventHandlers.clear()}createLoadingIndicator(e,t={}){const i=document.createElement("div");i.className=`dataprism-loading-indicator ${t.theme||"light"}`,i.innerHTML=`
      <div class="loading-spinner"></div>
      <div class="loading-message">Initializing DataPrism...</div>
      ${t.showProgress?'<div class="loading-progress"><div class="progress-bar"></div></div>':""}
      ${t.showDetails?'<div class="loading-details"></div>':""}
    `,e.appendChild(i);const r=i.querySelector(".progress-bar"),n=i.querySelector(".loading-message"),a=i.querySelector(".loading-details"),c=u=>{u.progress&&(r&&(r.style.width=`${u.progress.percentage}%`),n&&(n.textContent=`Loading... ${u.progress.percentage}%`),a&&u.dependency&&(a.textContent=`Loading ${u.dependency}...`))};return this.addEventListener("initializationProgress",c),this.addEventListener("dependencyLoading",c),{update:(u,y)=>{r&&(r.style.width=`${u}%`),n&&y&&(n.textContent=y)},destroy:()=>{this.removeEventListener("initializationProgress",c),this.removeEventListener("dependencyLoading",c),i.parentNode&&i.parentNode.removeChild(i)}}}};o(S,"instance");let F=S;class N{constructor(){o(this,"manifests");o(this,"dependencies");o(this,"categories");o(this,"loadOrder",null);this.manifests=new Map,this.dependencies=new Map,this.categories=new Map}async register(e){const t=e.name;if(this.manifests.has(t)){const r=this.manifests.get(t);if(r.version!==e.version)throw new Error(`Plugin version conflict: ${t} ${r.version} vs ${e.version}`);return}this.manifests.set(t,e);const i=new Set;for(const r of e.dependencies)r.optional||i.add(r.name);this.dependencies.set(t,i),this.categories.has(e.category)||this.categories.set(e.category,new Set),this.categories.get(e.category).add(t),this.loadOrder=null,await this.validateDependencies(t)}async unregister(e){const t=this.manifests.get(e);if(!t)return;const i=this.getDependents(e);if(i.length>0)throw new Error(`Cannot unregister ${e}: required by ${i.join(", ")}`);this.manifests.delete(e),this.dependencies.delete(e);const r=t.category;this.categories.has(r)&&(this.categories.get(r).delete(e),this.categories.get(r).size===0&&this.categories.delete(r)),this.loadOrder=null}getManifest(e){return this.manifests.get(e)||null}getAllManifests(){return Array.from(this.manifests.values())}getPluginsByCategory(e){return Array.from(this.categories.get(e)||[])}getDependencies(e){return Array.from(this.dependencies.get(e)||[])}getDependents(e){const t=[];for(const[i,r]of this.dependencies)r.has(e)&&t.push(i);return t}getLoadOrder(){if(this.loadOrder!==null)return[...this.loadOrder];const e=new Set,t=new Set,i=[],r=n=>{if(t.has(n))throw new Error(`Circular dependency detected involving ${n}`);if(e.has(n))return;t.add(n);const a=this.dependencies.get(n)||new Set;for(const c of a)this.manifests.has(c)&&r(c);t.delete(n),e.add(n),i.push(n)};for(const n of this.manifests.keys())r(n);return this.loadOrder=i,[...i]}search(e){const t=[];for(const i of this.manifests.values()){let r=0,n=[];if(e.name&&i.name.toLowerCase().includes(e.name.toLowerCase())&&(r+=10,n.push({field:"name",value:i.name})),e.category&&i.category===e.category&&(r+=8,n.push({field:"category",value:i.category})),e.keywords)for(const a of e.keywords)i.keywords.some(c=>c.toLowerCase().includes(a.toLowerCase()))&&(r+=5,n.push({field:"keywords",value:a}));e.description&&i.description.toLowerCase().includes(e.description.toLowerCase())&&(r+=3,n.push({field:"description",value:i.description})),e.author&&i.author.toLowerCase().includes(e.author.toLowerCase())&&(r+=2,n.push({field:"author",value:i.author})),r>0&&t.push({manifest:i,score:r,matches:n})}return t.sort((i,r)=>r.score-i.score),e.limit&&e.limit>0?t.slice(0,e.limit):t}getStatistics(){const e=new Map,t=new Map;let i=0;for(const r of this.manifests.values()){const n=e.get(r.category)||0;e.set(r.category,n+1);const a=t.get(r.author)||0;t.set(r.author,a+1),i+=r.dependencies.length}return{totalPlugins:this.manifests.size,categories:Object.fromEntries(e),authors:Object.fromEntries(t),averageDependencies:this.manifests.size>0?i/this.manifests.size:0,circularDependencies:this.detectCircularDependencies()}}validateManifest(e){const t=[],i=[];(!e.name||e.name.trim()==="")&&t.push("Plugin name is required"),(!e.version||!this.isValidVersion(e.version))&&t.push("Valid plugin version is required (semver format)"),(!e.entryPoint||e.entryPoint.trim()==="")&&t.push("Entry point is required"),e.category||t.push("Plugin category is required");const r=["data-processing","visualization","integration","utility"];e.category&&!r.includes(e.category)&&t.push(`Invalid category: ${e.category}. Must be one of: ${r.join(", ")}`);for(const n of e.dependencies||[])(!n.name||!n.version)&&t.push("Dependency must have name and version"),this.isValidVersion(n.version)||t.push(`Invalid dependency version: ${n.version}`);for(const n of e.permissions||[]){(!n.resource||!n.access)&&t.push("Permission must have resource and access fields");const a=["read","write","execute"];n.access&&!a.includes(n.access)&&t.push(`Invalid permission access: ${n.access}`)}return e.compatibility&&(e.compatibility.minCoreVersion||i.push("Minimum core version not specified"),(!e.compatibility.browsers||e.compatibility.browsers.length===0)&&i.push("Supported browsers not specified")),(!e.description||e.description.length<10)&&i.push("Plugin description should be at least 10 characters"),(!e.keywords||e.keywords.length===0)&&i.push("Adding keywords improves plugin discoverability"),{isValid:t.length===0,errors:t,warnings:i}}async validateDependencies(e){const t=this.manifests.get(e);for(const i of t.dependencies){if(!i.optional&&!this.manifests.has(i.name))throw new Error(`Missing dependency: ${e} requires ${i.name}`);const r=this.manifests.get(i.name);if(r&&!this.isVersionCompatible(i.version,r.version))throw new Error(`Version mismatch: ${e} requires ${i.name}@${i.version}, found ${r.version}`)}}isValidVersion(e){return/^\d+\.\d+\.\d+(-[\w\d\-]+)?(\+[\w\d\-]+)?$/.test(e)}isVersionCompatible(e,t){return e==="*"||e===t?!0:e===t}detectCircularDependencies(){const e=[],t=new Set,i=new Set,r=(n,a)=>{if(i.has(n)){const u=a.indexOf(n),y=a.slice(u).concat(n);e.push(y.join(" -> "));return}if(t.has(n))return;i.add(n);const c=this.dependencies.get(n)||new Set;for(const u of c)this.manifests.has(u)&&r(u,[...a,n]);i.delete(n),t.add(n)};for(const n of this.manifests.keys())t.has(n)||r(n,[]);return e}}class W{constructor(){o(this,"loadedModules");o(this,"moduleCache");this.loadedModules=new Map,this.moduleCache=new Map}async load(e){const t=e.name;try{if(this.loadedModules.has(t))return this.createPluginInstance(this.loadedModules.get(t),e);const i=await this.loadModule(e.entryPoint);return this.loadedModules.set(t,i),this.createPluginInstance(i,e)}catch(i){throw new m(`Failed to load plugin ${t}: ${i}`)}}async unload(e){if(this.loadedModules.has(e)){const t=this.loadedModules.get(e);if(t&&typeof t.cleanup=="function")try{await t.cleanup()}catch(i){console.warn(`Plugin cleanup failed for ${e}:`,i)}this.loadedModules.delete(e)}this.moduleCache.delete(e)}async hotReload(e){const t=e.name;return this.moduleCache.delete(t),this.loadedModules.delete(t),this.load(e)}async discoverPlugins(e){const t=[];for(const i of e)try{const r=await this.searchForPlugins(i);t.push(...r)}catch(r){console.warn(`Failed to search for plugins in ${i}:`,r)}return t}async loadManifest(e){try{const t=this.resolveManifestPath(e),i=await this.loadModule(t);return i.default?i.default:i.manifest?i.manifest:i}catch(t){throw new m(`Failed to load manifest from ${e}: ${t}`)}}async preloadPlugin(e){const t=e.name;this.moduleCache.has(t)||this.moduleCache.set(t,this.loadModule(e.entryPoint))}getLoadedPlugins(){return Array.from(this.loadedModules.keys())}isLoaded(e){return this.loadedModules.has(e)}async validatePlugin(e){const t={isValid:!0,errors:[],warnings:[]};try{const i=await this.loadModule(e.entryPoint);this.hasValidPluginClass(i)||(t.errors.push("Plugin must export a valid plugin class or factory function"),t.isValid=!1);const r=this.createPluginInstance(i,e),n=r.getCapabilities();(!n||n.length===0)&&t.warnings.push("Plugin does not declare any capabilities");const a=["initialize","activate","execute","deactivate","cleanup"];for(const c of a)typeof r[c]!="function"&&(t.errors.push(`Plugin missing required method: ${c}`),t.isValid=!1)}catch(i){t.errors.push(`Plugin validation failed: ${i}`),t.isValid=!1}return t}async loadModule(e){try{return this.isESModule(e)?await this.loadESModule(e):this.isWebAssembly(e)?await this.loadWebAssembly(e):await this.loadCommonJSModule(e)}catch(t){throw new m(`Module loading failed for ${e}: ${t}`)}}async loadESModule(e){return await import(this.resolvePath(e))}async loadWebAssembly(e){const t=this.resolvePath(e),i=await WebAssembly.compileStreaming(fetch(t)),r=await WebAssembly.instantiate(i);return{module:i,instance:r,exports:r.exports}}async loadCommonJSModule(e){const t=this.resolvePath(e);return typeof require<"u"?(delete require.cache[require.resolve(t)],require(t)):await import(t)}createPluginInstance(e,t){let i;if(e.default&&typeof e.default=="function")i=e.default;else if(e[t.name]&&typeof e[t.name]=="function")i=e[t.name];else if(e.Plugin&&typeof e.Plugin=="function")i=e.Plugin;else if(typeof e=="function")i=e;else throw new m("No valid plugin class found in module");try{const r=new i(t);if(!this.implementsIPlugin(r))throw new m("Plugin instance does not implement IPlugin interface");return r}catch(r){throw new m(`Failed to create plugin instance: ${r}`)}}implementsIPlugin(e){return["getName","getVersion","getDescription","getAuthor","getCapabilities","getDependencies","initialize","activate","execute","deactivate","cleanup","configure"].every(i=>typeof e[i]=="function")}hasValidPluginClass(e){return e.default&&typeof e.default=="function"||e.Plugin&&typeof e.Plugin=="function"||typeof e=="function"}async searchForPlugins(e){const t=[];try{const i=[`${e}/data-processor-csv`,`${e}/visualization-charts`,`${e}/integration-api`,`${e}/utility-performance`];for(const r of i)try{const n=this.resolveManifestPath(r);t.push(r)}catch{continue}}catch(i){throw new m(`Plugin discovery failed: ${i}`)}return t}resolvePath(e){return e.startsWith("./")||e.startsWith("../")?new URL(e,typeof document>"u"&&typeof location>"u"?require("url").pathToFileURL(__filename).href:typeof document>"u"?location.href:f&&f.tagName.toUpperCase()==="SCRIPT"&&f.src||new URL("dataprism.umd.js",document.baseURI).href).href:e.startsWith("/")||e.startsWith("http://")||e.startsWith("https://")?e:`./${e}`}resolveManifestPath(e){const t=["manifest.json","plugin.json","package.json"];for(const i of t)return`${e}/${i}`;throw new m(`No manifest found in ${e}`)}isESModule(e){return e.endsWith(".js")||e.endsWith(".mjs")||e.endsWith(".ts")}isWebAssembly(e){return e.endsWith(".wasm")}async getModuleInfo(e){const t=this.loadedModules.get(e);return t?{pluginName:e,modulePath:t.path||"unknown",loadTime:t.loadTime||Date.now(),size:t.size||0,type:this.getModuleType(t),exports:Object.keys(t).filter(i=>i!=="default")}:null}getModuleType(e){return e.instance&&e.exports?"webassembly":e.__esModule||e.default?"esmodule":"commonjs"}async destroy(){const e=Array.from(this.loadedModules.keys());for(const t of e)try{await this.unload(t)}catch(i){console.warn(`Failed to unload plugin ${t}:`,i)}this.loadedModules.clear(),this.moduleCache.clear()}}class m extends Error{constructor(e){super(e),this.name="PluginLoadError"}}class G{constructor(){o(this,"permissions");o(this,"sandboxes");o(this,"auditLogger");o(this,"securityPolicies");o(this,"initialized",!1);this.permissions=new Map,this.sandboxes=new Map,this.auditLogger=new V,this.securityPolicies=new Q}async initialize(){this.initialized||(await this.auditLogger.initialize(),await this.securityPolicies.loadDefault(),this.initialized=!0)}async validatePlugin(e){if(!this.initialized)throw new Error("SecurityManager not initialized");await this.performStaticAnalysis(e),await this.validatePermissions(e.permissions),await this.checkSuspiciousPatterns(e),this.permissions.set(e.name,new Set(e.permissions)),this.auditLogger.log("security","plugin_validated",{pluginName:e.name,version:e.version,permissions:e.permissions,timestamp:Date.now()})}async createSandbox(e){if(!this.initialized)throw new Error("SecurityManager not initialized");const t=this.permissions.get(e);if(!t)throw new g(`No permissions found for plugin: ${e}`);const i=new q(e,{allowedAPIs:this.getAllowedAPIs(e),memoryLimit:this.getMemoryLimit(e),timeoutLimit:this.getTimeoutLimit(e),networkAccess:this.hasNetworkPermission(e),permissions:Array.from(t)});return await i.initialize(),this.sandboxes.set(e,i),this.auditLogger.log("security","sandbox_created",{pluginName:e,config:i.getConfig(),timestamp:Date.now()}),i}async checkPermission(e,t,i){if(!this.initialized)throw new Error("SecurityManager not initialized");const r=this.permissions.get(e);if(!r)throw new g(`No permissions found for plugin: ${e}`);const n=this.getRequiredPermission(t,i);if(!Array.from(r).some(c=>this.permissionMatches(c,n)))throw this.auditLogger.log("security","permission_denied",{pluginName:e,operation:t,params:this.sanitizeParams(i),requiredPermission:n,timestamp:Date.now()}),new g(`Permission denied: ${e} cannot perform ${t}`);this.auditLogger.log("security","permission_granted",{pluginName:e,operation:t,timestamp:Date.now()})}async destroySandbox(e){const t=this.sandboxes.get(e);t&&(await t.destroy(),this.sandboxes.delete(e),this.auditLogger.log("security","sandbox_destroyed",{pluginName:e,timestamp:Date.now()}))}async generateSecurityReport(){const e=await this.auditLogger.getEvents(),t=e.filter(r=>r.type==="permission_denied"),i=await this.detectSuspiciousActivity(e);return{timestamp:new Date().toISOString(),summary:{totalPlugins:this.permissions.size,activeSandboxes:this.sandboxes.size,securityEvents:e.length,violations:t.length,suspiciousActivity:i.length},violations:t.slice(-10),suspiciousActivity:i,recommendations:this.generateSecurityRecommendations(e)}}async performStaticAnalysis(e){const t=[/eval\s*\(/,/Function\s*\(/,/document\.write/,/innerHTML\s*=/,/execCommand/,/new\s+Function/,/setTimeout\s*\(\s*["'`]/,/setInterval\s*\(\s*["'`]/],i=JSON.stringify(e);for(const n of t)if(n.test(i))throw new g(`Dangerous pattern detected in manifest: ${n}`);if([".exe",".bat",".cmd",".sh",".ps1"].some(n=>e.entryPoint.toLowerCase().endsWith(n)))throw new g(`Suspicious entry point file extension: ${e.entryPoint}`)}async validatePermissions(e){for(const t of e){if(!this.isValidPermission(t))throw new g(`Invalid permission: ${JSON.stringify(t)}`);if(!this.securityPolicies.isPermissionAllowed(t))throw new g(`Permission not allowed by security policy: ${t.resource}.${t.access}`)}}async checkSuspiciousPatterns(e){const t=["crypto","bitcoin","mining","keylogger","password","backdoor","rootkit","virus","malware","trojan"],i=[e.name,e.description,...e.keywords].join(" ").toLowerCase();for(const r of t)i.includes(r)&&this.auditLogger.log("security","suspicious_keyword",{pluginName:e.name,keyword:r,timestamp:Date.now()})}isValidPermission(e){const t=["data","storage","network","ui","core","filesystem"],i=["read","write","execute"];return t.includes(e.resource)&&i.includes(e.access)}getRequiredPermission(e,t){return{"data.read":{resource:"data",access:"read"},"data.write":{resource:"data",access:"write"},"data.query":{resource:"data",access:"read"},"storage.get":{resource:"storage",access:"read"},"storage.set":{resource:"storage",access:"write"},"network.fetch":{resource:"network",access:"read"},"network.post":{resource:"network",access:"write"},"ui.render":{resource:"ui",access:"write"},"ui.update":{resource:"ui",access:"write"},"core.metrics":{resource:"core",access:"read"},"filesystem.read":{resource:"filesystem",access:"read"},"filesystem.write":{resource:"filesystem",access:"write"}}[e]||{resource:"core",access:"execute"}}permissionMatches(e,t){return e.resource!==t.resource?!1:e.access==="execute"||e.access==="write"&&t.access==="read"?!0:e.access===t.access}getAllowedAPIs(e){const t=this.permissions.get(e);if(!t)return[];const i=[];for(const r of t)switch(r.resource){case"data":i.push("data.query","data.read"),(r.access==="write"||r.access==="execute")&&i.push("data.write","data.update");break;case"storage":i.push("storage.get"),(r.access==="write"||r.access==="execute")&&i.push("storage.set","storage.remove");break;case"network":(r.access==="read"||r.access==="execute")&&i.push("network.fetch"),(r.access==="write"||r.access==="execute")&&i.push("network.post","network.put");break;case"ui":(r.access==="write"||r.access==="execute")&&i.push("ui.render","ui.update","ui.notify");break}return i}getMemoryLimit(e){return 50*1024*1024}getTimeoutLimit(e){return 3e4}hasNetworkPermission(e){const t=this.permissions.get(e);return t?Array.from(t).some(i=>i.resource==="network"):!1}sanitizeParams(e){if(typeof e!="object"||e===null)return e;const t={...e},i=["password","token","key","secret","credential"];for(const r of Object.keys(t))i.some(n=>r.toLowerCase().includes(n))&&(t[r]="[REDACTED]");return t}async detectSuspiciousActivity(e){const t=[],i=Date.now(),r=6e4,n=e.filter(c=>c.type==="permission_denied"&&i-c.timestamp<r);n.length>10&&t.push({type:"rapid_permission_denials",description:`${n.length} permission denials in the last minute`,severity:"high",events:n.slice(-5).map(c=>c.id)});const a=e.filter(c=>c.type==="suspicious_keyword");return a.length>0&&t.push({type:"suspicious_keywords",description:"Plugins using suspicious keywords detected",severity:"medium",events:a.map(c=>c.id)}),t}generateSecurityRecommendations(e){const t=[];return e.filter(n=>n.type==="permission_denied").length>100&&t.push("High number of permission violations detected. Review plugin permissions."),e.filter(n=>n.type==="suspicious_keyword").length>0&&t.push("Plugins with suspicious keywords detected. Review manually."),this.sandboxes.size>20&&t.push("Large number of active sandboxes. Consider resource optimization."),t.length===0&&t.push("No security issues detected. Continue monitoring."),t}}class q{constructor(e,t){o(this,"pluginName");o(this,"config");o(this,"worker",null);o(this,"messageChannel",null);o(this,"initialized",!1);this.pluginName=e,this.config=t}async initialize(){if(!this.initialized)try{const e=this.generateWorkerCode(),t=new Blob([e],{type:"application/javascript"});this.worker=new Worker(URL.createObjectURL(t)),this.messageChannel=new MessageChannel,this.worker.postMessage({type:"initialize",config:this.config,port:this.messageChannel.port1},[this.messageChannel.port1]),await this.waitForInitialization(),this.initialized=!0}catch(e){throw new g(`Failed to initialize sandbox for ${this.pluginName}: ${e}`)}}async execute(e,t){if(!this.initialized||!this.worker||!this.messageChannel)throw new g("Sandbox not initialized");return new Promise((i,r)=>{const n=setTimeout(()=>{r(new g("Plugin execution timeout"))},this.config.timeoutLimit),a=c=>{clearTimeout(n),this.messageChannel.port2.removeEventListener("message",a),c.data.error?r(new g(c.data.error)):i(c.data.result)};this.messageChannel?.port2.addEventListener("message",a),this.messageChannel?.port2.start(),this.messageChannel?.port2.postMessage({type:"execute",code:e,context:t})})}getConfig(){return{...this.config}}async destroy(){this.worker&&(this.worker.terminate(),this.worker=null),this.messageChannel&&(this.messageChannel.port1.close(),this.messageChannel.port2.close(),this.messageChannel=null),this.initialized=!1}generateWorkerCode(){return`
      let port = null;
      let config = null;
      
      self.onmessage = function(event) {
        if (event.data.type === 'initialize') {
          config = event.data.config;
          port = event.data.port;
          port.onmessage = handleMessage;
          port.postMessage({ type: 'initialized' });
        }
      };
      
      function handleMessage(event) {
        if (event.data.type === 'execute') {
          try {
            // Create restricted execution environment
            const restrictedGlobals = createRestrictedEnvironment();
            const result = executeInSandbox(event.data.code, event.data.context, restrictedGlobals);
            port.postMessage({ result });
          } catch (error) {
            port.postMessage({ error: error.message });
          }
        }
      }
      
      function createRestrictedEnvironment() {
        // Create a restricted global environment
        const restricted = {};
        
        // Allow only safe APIs based on permissions
        if (config.allowedAPIs.includes('data.read')) {
          restricted.console = { log: console.log };
        }
        
        // Add other allowed APIs based on permissions
        return restricted;
      }
      
      function executeInSandbox(code, context, globals) {
        // Simple sandbox execution - in production, use a more robust solution
        const func = new Function('context', 'globals', \`
          with (globals) {
            \${code}
          }
        \`);
        return func(context, globals);
      }
    `}async waitForInitialization(){if(!this.messageChannel)throw new g("Message channel not available");return new Promise((e,t)=>{const i=setTimeout(()=>{t(new g("Sandbox initialization timeout"))},5e3),r=n=>{n.data.type==="initialized"&&(clearTimeout(i),this.messageChannel?.port2.removeEventListener("message",r),e())};this.messageChannel?.port2.addEventListener("message",r),this.messageChannel?.port2.start()})}}class g extends Error{constructor(e){super(e),this.name="SecurityError"}}class V{constructor(){o(this,"events",[]);o(this,"maxEvents",1e4)}async initialize(){}log(e,t,i){const r={id:this.generateEventId(),category:e,type:t,data:i,timestamp:Date.now()};this.events.push(r),this.events.length>this.maxEvents&&this.events.shift()}async getEvents(e){let t=[...this.events];return e&&(e.category&&(t=t.filter(i=>i.category===e.category)),e.type&&(t=t.filter(i=>i.type===e.type)),e.since&&(t=t.filter(i=>i.timestamp>=e.since)),e.limit&&(t=t.slice(-e.limit))),t}generateEventId(){return`${Date.now()}-${Math.random().toString(36).substr(2,9)}`}}class Q{constructor(){o(this,"policies",[])}async loadDefault(){this.policies=[{name:"default",allowedResources:["data","storage","ui","core"],blockedResources:["filesystem"],maxMemoryMB:50,maxExecutionTimeMs:3e4}]}isPermissionAllowed(e){return this.policies.some(t=>t.allowedResources.includes(e.resource)&&!t.blockedResources.includes(e.resource))}}class Y{constructor(){o(this,"resourceQuotas");o(this,"activeMonitors");o(this,"globalLimits");o(this,"initialized",!1);this.resourceQuotas=new Map,this.activeMonitors=new Map,this.globalLimits={maxTotalMemoryMB:1024,maxTotalCPUPercent:80,maxConcurrentPlugins:20,maxExecutionTimeMs:3e5}}async initialize(){this.initialized||(await this.setupGlobalMonitoring(),this.initialized=!0)}async allocate(e){if(!this.initialized)throw new Error("ResourceManager not initialized");const t=this.getQuota(e),i=await this.getCurrentGlobalUsage();if(!this.canAllocate(t,i))throw new K(`Resource allocation would exceed global limits for plugin: ${e}`);const r={pluginName:e,memoryMB:t.memoryMB,cpuPercent:t.cpuPercent,diskMB:t.diskMB,networkBandwidthKbps:t.networkBandwidthKbps,allocatedAt:Date.now(),status:"allocated"};return this.trackAllocation(r),r}async release(e){const t=this.activeMonitors.get(e);t&&(await t.stop(),this.activeMonitors.delete(e)),this.cleanupAllocation(e)}async createMonitor(e){const t=this.getQuota(e),i=new j(e,t);return await i.start(),this.activeMonitors.set(e,i),i}getQuota(e){return this.resourceQuotas.has(e)?this.resourceQuotas.get(e):{memoryMB:50,cpuPercent:10,diskMB:100,networkBandwidthKbps:1e3,maxExecutionTimeMs:3e4}}setQuota(e,t){this.resourceQuotas.set(e,t)}async getUsage(e){const t=this.activeMonitors.get(e);return t?t.getCurrentUsage():null}async getAllUsage(){const e=new Map;for(const[t,i]of this.activeMonitors)try{const r=await i.getCurrentUsage();e.set(t,r)}catch(r){console.warn(`Failed to get usage for plugin ${t}:`,r)}return e}async generateReport(){const e=await this.getAllUsage(),t=await this.getCurrentGlobalUsage(),i=[];for(const[n,a]of e){const c=this.getQuota(n),u=this.detectViolations(a,c);i.push({pluginName:n,usage:a,quota:c,violations:u,efficiency:this.calculateEfficiency(a,c)})}const r=this.calculateSummary(i,t);return{timestamp:new Date().toISOString(),summary:r,plugins:i,globalLimits:this.globalLimits,recommendations:this.generateRecommendations(i,r)}}async optimizeResources(){const e=await this.generateReport(),t=[];for(const i of e.plugins)i.efficiency<.3&&t.push({pluginName:i.pluginName,type:"reduce_allocation",description:"Reduce allocation for underutilized plugin",estimatedSavings:{memoryMB:i.quota.memoryMB*.5,cpuPercent:i.quota.cpuPercent*.5}}),i.violations.length>0&&t.push({pluginName:i.pluginName,type:"increase_allocation",description:"Increase allocation for over-utilized plugin",estimatedSavings:{memoryMB:-i.quota.memoryMB*.2,cpuPercent:-i.quota.cpuPercent*.2}});return{totalOptimizations:t.length,optimizations:t,estimatedTotalSavings:this.calculateTotalSavings(t)}}async enforceQuotas(){const e=[],t=[];for(const[i,r]of this.activeMonitors)try{const n=await r.getCurrentUsage(),a=this.getQuota(i),c=this.detectViolations(n,a);if(c.length>0){e.push(...c.map(u=>({...u,pluginName:i})));for(const u of c){const y=await this.takeEnforcementAction(i,u);t.push(y)}}}catch(n){console.warn(`Failed to enforce quotas for plugin ${i}:`,n)}return{timestamp:Date.now(),violations:e,actions:t,summary:{totalViolations:e.length,actionsSuccessful:t.filter(i=>i.success).length,actionsFailed:t.filter(i=>!i.success).length}}}async setupGlobalMonitoring(){setInterval(async()=>{try{await this.checkGlobalLimits()}catch(e){console.warn("Global resource monitoring failed:",e)}},5e3)}async getCurrentGlobalUsage(){const e=await this.getAllUsage();let t=0,i=0,r=0,n=0;for(const a of e.values())t+=a.memoryMB,i+=a.cpuPercent,r+=a.diskMB,n+=a.networkKbps;return{totalMemoryMB:t,totalCPUPercent:i,totalDiskMB:r,totalNetworkKbps:n,activePlugins:e.size,timestamp:Date.now()}}canAllocate(e,t){return t.totalMemoryMB+e.memoryMB<=this.globalLimits.maxTotalMemoryMB&&t.totalCPUPercent+e.cpuPercent<=this.globalLimits.maxTotalCPUPercent&&t.activePlugins<this.globalLimits.maxConcurrentPlugins}trackAllocation(e){console.debug("Resource allocated:",e)}cleanupAllocation(e){console.debug("Resource allocation cleaned up:",e)}detectViolations(e,t){const i=[];return e.memoryMB>t.memoryMB&&i.push({type:"memory_exceeded",severity:"high",current:e.memoryMB,limit:t.memoryMB,description:`Memory usage (${e.memoryMB}MB) exceeds quota (${t.memoryMB}MB)`}),e.cpuPercent>t.cpuPercent&&i.push({type:"cpu_exceeded",severity:"medium",current:e.cpuPercent,limit:t.cpuPercent,description:`CPU usage (${e.cpuPercent}%) exceeds quota (${t.cpuPercent}%)`}),e.diskMB>t.diskMB&&i.push({type:"disk_exceeded",severity:"low",current:e.diskMB,limit:t.diskMB,description:`Disk usage (${e.diskMB}MB) exceeds quota (${t.diskMB}MB)`}),i}calculateEfficiency(e,t){const i=Math.min(e.memoryMB/t.memoryMB,1),r=Math.min(e.cpuPercent/t.cpuPercent,1);return(i+r)/2}calculateSummary(e,t){const i=e.reduce((a,c)=>a+c.quota.memoryMB,0),r=e.reduce((a,c)=>a+c.usage.memoryMB,0),n=e.reduce((a,c)=>a+c.violations.length,0);return{totalPlugins:e.length,totalAllocatedMemoryMB:i,totalUsedMemoryMB:r,memoryUtilization:i>0?r/i:0,totalViolations:n,globalUsage:t}}generateRecommendations(e,t){const i=[];t.memoryUtilization<.3&&i.push("Consider reducing memory allocations - overall utilization is low"),t.totalViolations>0&&i.push(`${t.totalViolations} quota violations detected - review plugin resource requirements`);const r=e.filter(n=>n.efficiency<.2).length;return r>0&&i.push(`${r} plugins are underutilizing resources - consider optimization`),t.globalUsage.totalMemoryMB>this.globalLimits.maxTotalMemoryMB*.9&&i.push("Approaching global memory limit - consider optimization or limit increases"),i}calculateTotalSavings(e){let t=0,i=0;for(const r of e)r.estimatedSavings&&(t+=r.estimatedSavings.memoryMB||0,i+=r.estimatedSavings.cpuPercent||0);return{memoryMB:t,cpuPercent:i}}async takeEnforcementAction(e,t){try{switch(t.type){case"memory_exceeded":console.warn(`Memory violation for plugin ${e} - implementing throttling`);break;case"cpu_exceeded":console.warn(`CPU violation for plugin ${e} - implementing throttling`);break;case"disk_exceeded":console.warn(`Disk violation for plugin ${e} - cleaning up resources`);break}return{pluginName:e,violationType:t.type,action:"throttle",success:!0,timestamp:Date.now()}}catch(i){return{pluginName:e,violationType:t.type,action:"throttle",success:!1,error:String(i),timestamp:Date.now()}}}async checkGlobalLimits(){const e=await this.getCurrentGlobalUsage();e.totalMemoryMB>this.globalLimits.maxTotalMemoryMB&&console.warn("Global memory limit exceeded:",e.totalMemoryMB,"MB"),e.totalCPUPercent>this.globalLimits.maxTotalCPUPercent&&console.warn("Global CPU limit exceeded:",e.totalCPUPercent,"%")}async destroy(){for(const e of this.activeMonitors.values())try{await e.stop()}catch(t){console.warn("Failed to stop resource monitor:",t)}this.activeMonitors.clear(),this.resourceQuotas.clear(),this.initialized=!1}}class j{constructor(e,t){o(this,"pluginName");o(this,"quota");o(this,"monitoring",!1);o(this,"monitoringInterval",null);o(this,"currentUsage");this.pluginName=e,this.quota=t,this.currentUsage={memoryMB:0,cpuPercent:0,diskMB:0,networkKbps:0,timestamp:Date.now()}}async start(){this.monitoring||(this.monitoring=!0,this.monitoringInterval=setInterval(async()=>{try{await this.updateUsage()}catch(e){console.warn(`Resource monitoring failed for ${this.pluginName}:`,e)}},1e3))}async stop(){this.monitoring&&(this.monitoring=!1,this.monitoringInterval&&(clearInterval(this.monitoringInterval),this.monitoringInterval=null))}async getCurrentUsage(){return{...this.currentUsage}}async updateUsage(){this.currentUsage={memoryMB:Math.random()*this.quota.memoryMB*.8,cpuPercent:Math.random()*this.quota.cpuPercent*.7,diskMB:Math.random()*this.quota.diskMB*.5,networkKbps:Math.random()*this.quota.networkBandwidthKbps*.3,timestamp:Date.now()}}}class K extends Error{constructor(e){super(e),this.name="ResourceError"}}class U{constructor(){o(this,"handlers");o(this,"wildcardHandlers");o(this,"eventHistory");o(this,"maxHistorySize",1e3);o(this,"isInitialized",!1);this.handlers=new Map,this.wildcardHandlers=new Set,this.eventHistory=[]}async initialize(){this.isInitialized||(this.setupErrorHandling(),this.isInitialized=!0)}publish(e,t){if(!this.isInitialized){console.warn("EventBus not initialized, call initialize() first");return}this.addToHistory(e,t);const i=this.handlers.get(e);if(i)for(const r of i)this.executeHandler(r,t,e);for(const r of this.wildcardHandlers)this.executeHandler(r,{event:e,data:t},e)}subscribe(e,t){return this.isInitialized||console.warn("EventBus not initialized, call initialize() first"),e==="*"?(this.wildcardHandlers.add(t),{unsubscribe:()=>this.wildcardHandlers.delete(t)}):(this.handlers.has(e)||this.handlers.set(e,new Set),this.handlers.get(e).add(t),{unsubscribe:()=>{const i=this.handlers.get(e);i&&(i.delete(t),i.size===0&&this.handlers.delete(e))}})}unsubscribe(e,t){if(e==="*"){this.wildcardHandlers.delete(t);return}const i=this.handlers.get(e);i&&(i.delete(t),i.size===0&&this.handlers.delete(e))}once(e,t){const i=n=>{t(n),r.unsubscribe()},r=this.subscribe(e,i);return r}getEventHistory(e){return e?this.eventHistory.filter(t=>t.event===e):[...this.eventHistory]}clearEventHistory(){this.eventHistory=[]}getActiveSubscriptions(){const e=new Map;for(const[t,i]of this.handlers)e.set(t,i.size);return this.wildcardHandlers.size>0&&e.set("*",this.wildcardHandlers.size),e}async waitForEvent(e,t=3e4){return new Promise((i,r)=>{const n=setTimeout(()=>{a.unsubscribe(),r(new Error(`Timeout waiting for event: ${e}`))},t),a=this.once(e,c=>{clearTimeout(n),i(c)})})}getMetrics(){return{totalEvents:this.eventHistory.length,uniqueEvents:new Set(this.eventHistory.map(e=>e.event)).size,activeSubscriptions:Array.from(this.handlers.entries()).reduce((e,[,t])=>e+t.size,0)+this.wildcardHandlers.size,wildcardSubscriptions:this.wildcardHandlers.size,historySize:this.eventHistory.length,maxHistorySize:this.maxHistorySize}}destroy(){this.handlers.clear(),this.wildcardHandlers.clear(),this.eventHistory=[],this.isInitialized=!1}executeHandler(e,t,i){try{const r=e(t);r instanceof Promise&&r.catch(n=>{console.error(`Error in async event handler for ${i}:`,n),this.publish("eventbus:error",{event:i,error:n,handler:e.toString()})})}catch(r){console.error(`Error in event handler for ${i}:`,r),this.publish("eventbus:error",{event:i,error:r,handler:e.toString()})}}addToHistory(e,t){this.eventHistory.push({event:e,data:t,timestamp:Date.now()}),this.eventHistory.length>this.maxHistorySize&&this.eventHistory.shift()}setupErrorHandling(){typeof window<"u"&&window.addEventListener("unhandledrejection",e=>{this.publish("eventbus:unhandled-rejection",{reason:e.reason,timestamp:Date.now()})})}}class J{static create(e){return this.instances.has(e)||this.instances.set(e,new U),this.instances.get(e)}static destroy(e){const t=this.instances.get(e);t&&(t.destroy(),this.instances.delete(e))}static getAll(){return new Map(this.instances)}}o(J,"instances",new Map);class Z{constructor(){o(this,"registry");o(this,"loader");o(this,"security");o(this,"resources");o(this,"eventBus");o(this,"activePlugins");o(this,"pluginContexts");o(this,"initialized",!1);this.registry=new N,this.loader=new W,this.security=new G,this.resources=new Y,this.eventBus=new U,this.activePlugins=new Map,this.pluginContexts=new Map}async initialize(){if(!this.initialized)try{if(await this.eventBus.initialize(),await this.security.initialize(),await this.resources.initialize(),this.initialized=!0,await this.loadCorePluginDefinitions(),typeof process>"u"||process.env.NODE_ENV!=="test")try{await this.discoverPlugins()}catch(e){console.warn("Plugin discovery failed (this is normal in test environments):",String(e))}this.eventBus.publish("plugin-manager:initialized",{timestamp:Date.now()})}catch(e){throw new Error(`Failed to initialize PluginManager: ${e}`)}}async registerPlugin(e){if(!this.initialized)throw new Error("PluginManager not initialized");const t=this.registry.validateManifest(e);if(!t.isValid)throw new Error(`Invalid plugin manifest: ${t.errors.join(", ")}`);if(await this.security.validatePlugin(e),!this.isCompatible(e))throw new Error(`Plugin ${e.name} is not compatible with this version`);await this.registry.register(e),this.eventBus.publish("plugin:registered",{manifest:e})}async loadPlugin(e){if(!this.initialized)throw new Error("PluginManager not initialized");const t=this.registry.getManifest(e);if(!t)throw new Error(`Plugin not found: ${e}`);if(this.activePlugins.has(e))return this.activePlugins.get(e);try{await this.loadDependencies(t);const i=await this.loader.load(t),r=await this.createPluginContext(t);return this.pluginContexts.set(e,r),await i.initialize(r),this.activePlugins.set(e,i),this.eventBus.publish("plugin:loaded",{pluginName:e,manifest:t}),i}catch(i){throw this.eventBus.publish("plugin:load-failed",{pluginName:e,error:String(i)}),i}}async activatePlugin(e){if(!this.initialized)throw new Error("PluginManager not initialized");const t=await this.loadPlugin(e);try{await this.resources.allocate(e),await this.security.createSandbox(e),await t.activate(),this.eventBus.publish("plugin:activated",{pluginName:e})}catch(i){throw this.eventBus.publish("plugin:activation-failed",{pluginName:e,error:String(i)}),i}}async deactivatePlugin(e){const t=this.activePlugins.get(e);if(!t)throw new Error(`Plugin not active: ${e}`);try{await t.deactivate(),await this.resources.release(e),await this.security.destroySandbox(e),this.eventBus.publish("plugin:deactivated",{pluginName:e})}catch(i){throw this.eventBus.publish("plugin:deactivation-failed",{pluginName:e,error:String(i)}),i}}async unloadPlugin(e){const t=this.activePlugins.get(e);if(t){try{await this.deactivatePlugin(e)}catch(i){console.warn(`Failed to deactivate plugin ${e} during unload:`,i)}try{await t.cleanup()}catch(i){console.warn(`Plugin cleanup failed for ${e}:`,i)}this.activePlugins.delete(e),this.pluginContexts.delete(e)}await this.loader.unload(e),this.eventBus.publish("plugin:unloaded",{pluginName:e})}async executePlugin(e,t,i){const r=this.activePlugins.get(e);if(!r)throw new Error(`Plugin not active: ${e}`);await this.security.checkPermission(e,t,i);const n=await this.resources.createMonitor(e);try{const a=performance.now(),c=await r.execute(t,i),u=performance.now();return this.eventBus.publish("plugin:operation-completed",{pluginName:e,operation:t,duration:u-a,success:!0}),c}catch(a){throw this.eventBus.publish("plugin:operation-failed",{pluginName:e,operation:t,error:String(a)}),a}finally{await n.stop()}}async configurePlugin(e,t){const i=this.activePlugins.get(e);if(!i)throw new Error(`Plugin not active: ${e}`);try{await i.configure(t),this.eventBus.publish("plugin:configured",{pluginName:e,settings:t})}catch(r){throw this.eventBus.publish("plugin:configuration-failed",{pluginName:e,error:String(r)}),r}}async discoverPlugins(){if(!this.initialized)throw new Error("PluginManager not initialized");try{const e=await this.loader.discoverPlugins(["./plugins/","../plugins/","/plugins/"]),t=[];for(const i of e)try{const r=await this.loader.loadManifest(i);await this.registerPlugin(r),t.push(r)}catch(r){console.warn(`Failed to load plugin from ${i}:`,r)}return this.eventBus.publish("plugins:discovered",{count:t.length,manifests:t}),t}catch(e){throw this.eventBus.publish("plugins:discovery-failed",{error:String(e)}),e}}getActivePlugins(){return Array.from(this.activePlugins.keys())}getRegisteredPlugins(){return this.registry.getAllManifests().map(e=>e.name)}getPluginInfo(e){const t=this.activePlugins.get(e),i=this.registry.getManifest(e);return!t||!i?null:{name:t.getName(),version:t.getVersion(),description:t.getDescription(),author:t.getAuthor(),category:i.category,capabilities:t.getCapabilities(),status:this.getPluginStatus(e),resourceUsage:this.resources.getUsage(e),dependencies:t.getDependencies(),permissions:i.permissions}}getPluginsByCategory(e){return this.registry.getPluginsByCategory(e)}searchPlugins(e){return this.registry.search(e)}async getSystemStatus(){const e=await this.security.generateSecurityReport(),t=await this.resources.generateReport();return{initialized:this.initialized,totalRegistered:this.registry.getAllManifests().length,totalActive:this.activePlugins.size,categorySummary:this.getCategorySummary(),resourceUsage:t.summary,securityStatus:{violations:e.violations.length,suspiciousActivity:e.suspiciousActivity.length,activeSandboxes:e.summary.activeSandboxes},eventBusMetrics:this.eventBus.getMetrics()}}async hotReloadPlugin(e){if(!this.activePlugins.has(e))throw new Error(`Plugin not active: ${e}`);if(!this.registry.getManifest(e))throw new Error(`Plugin manifest not found: ${e}`);try{const i=this.activePlugins.get(e);let r=null;typeof i.saveState=="function"&&(r=await i.saveState()),await this.unloadPlugin(e);const n=await this.loadPlugin(e);await this.activatePlugin(e),r&&typeof n.restoreState=="function"&&await n.restoreState(r),this.eventBus.publish("plugin:hot-reloaded",{pluginName:e})}catch(i){throw this.eventBus.publish("plugin:hot-reload-failed",{pluginName:e,error:String(i)}),i}}async loadCorePluginDefinitions(){const e=[{name:"performance-monitor",version:"1.0.0",description:"System performance monitoring plugin",author:"DataPrism Team",license:"MIT",keywords:["monitoring","performance","system"],category:"utility",entryPoint:"./core-plugins/performance-monitor.js",dependencies:[],permissions:[{resource:"core",access:"read"}],configuration:{},compatibility:{minCoreVersion:"0.1.0",browsers:["chrome","firefox","safari","edge"]}}];for(const t of e)try{await this.registerPlugin(t)}catch(i){console.warn(`Failed to register core plugin ${t.name}:`,i)}}async loadDependencies(e){for(const t of e.dependencies)!t.optional&&!this.activePlugins.has(t.name)&&(await this.loadPlugin(t.name),await this.activatePlugin(t.name))}async createPluginContext(e){const t=this.resources.getQuota(e.name);return{pluginName:e.name,coreVersion:"0.1.0",services:await this.createServiceProxy(e),eventBus:this.eventBus,logger:this.createPluginLogger(e.name),config:await this.loadPluginConfig(e.name),resources:{maxMemoryMB:t.memoryMB,maxCpuPercent:t.cpuPercent,maxExecutionTime:t.maxExecutionTimeMs}}}async createServiceProxy(e){return{call:async(t,i,...r)=>{const n=`${t}.${i}`;return await this.security.checkPermission(e.name,n,r),{success:!0,result:null}},hasPermission:(t,i)=>{const r={resource:t,access:"read"};return e.permissions.some(a=>a.resource===r.resource&&(a.access===r.access||a.access==="execute"))}}}createPluginLogger(e){return{debug:(t,...i)=>console.debug(`[${e}]`,t,...i),info:(t,...i)=>console.info(`[${e}]`,t,...i),warn:(t,...i)=>console.warn(`[${e}]`,t,...i),error:(t,...i)=>console.error(`[${e}]`,t,...i)}}async loadPluginConfig(e){return{}}isCompatible(e){return!0}getPluginStatus(e){return this.activePlugins.has(e)?"active":this.registry.getManifest(e)?"inactive":"unknown"}getCategorySummary(){const e={};for(const t of this.registry.getAllManifests())e[t.category]=(e[t.category]||0)+1;return e}async destroy(){const e=Array.from(this.activePlugins.keys());for(const t of e)try{await this.unloadPlugin(t)}catch(i){console.warn(`Failed to unload plugin ${t} during shutdown:`,i)}this.eventBus.destroy(),await this.resources.destroy(),this.initialized=!1}}class X{static async create(e){if(this.instance)return this.instance;const t=new Z;return e&&this.applyConfiguration(t,e),await t.initialize(),this.instance=t,t}static getInstance(){return this.instance}static async destroy(){this.instance&&(await this.instance.destroy(),this.instance=null)}static applyConfiguration(e,t){console.debug("Plugin system configuration applied:",t)}}o(X,"instance",null);const Ue={validateManifest:async s=>new N().validateManifest(s),createManifestTemplate:(s,e)=>({name:s,version:"1.0.0",description:`${s} plugin for DataPrism`,author:"Plugin Developer",license:"MIT",keywords:[e,"dataprism"],category:e,entryPoint:"./index.js",dependencies:[],permissions:[{resource:"data",access:"read"}],configuration:{},compatibility:{minCoreVersion:"0.1.0",browsers:["chrome","firefox","safari","edge"]}}),generatePluginId:()=>`plugin-${Date.now()}-${Math.random().toString(36).substr(2,9)}`,isValidVersion:s=>/^\d+\.\d+\.\d+(-[\w\d\-]+)?(\+[\w\d\-]+)?$/.test(s)};class ze{constructor(e){o(this,"manifest");o(this,"context",null);o(this,"initialized",!1);o(this,"active",!1);this.manifest=e}getName(){return this.manifest.name}getVersion(){return this.manifest.version}getDescription(){return this.manifest.description}getAuthor(){return this.manifest.author}getDependencies(){return this.manifest.dependencies}getManifest(){return this.manifest}isCompatible(e){return!0}async initialize(e){this.context=e,this.initialized=!0,await this.onInitialize(e)}async activate(){if(!this.initialized)throw new Error("Plugin must be initialized before activation");this.active=!0,await this.onActivate()}async deactivate(){this.active=!1,await this.onDeactivate()}async cleanup(){await this.onCleanup(),this.context=null,this.initialized=!1,this.active=!1}async configure(e){await this.onConfigure(e)}async onInitialize(e){}async onActivate(){}async onDeactivate(){}async onCleanup(){}async onConfigure(e){}log(e,t,...i){this.context?.logger?this.context.logger[e](t,...i):console[e](`[${this.getName()}]`,t,...i)}emit(e,t){this.context?.eventBus&&this.context.eventBus.publish(`plugin:${this.getName()}:${e}`,t)}async callService(e,t,...i){if(!this.context?.services)throw new Error("Plugin context services not available");return this.context.services.call(e,t,...i)}}const ee="1.0.0",Be=new Date().toISOString(),$e={name:"DataPrism Plugin System",version:ee,buildTime:Be,supportedCategories:["data-processing","visualization","integration","utility"],capabilities:["Dynamic plugin loading","Security sandboxing","Resource management","Event-driven communication","Hot reload support","Dependency resolution","Audit logging"]},xe="0.1.0",He="DataPrism Core";function We(s){return new L(s)}d.ArrowLoader=b,d.AuditLogger=V,d.BasePlugin=ze,d.DataPrismEngine=L,d.DataPrismPluginSystem=X,d.DependencyErrorHandler=O,d.DependencyEventSystem=F,d.DependencyRegistry=w,d.DuckDBManager=H,d.ErrorHandler=P,d.EventBus=U,d.EventBusFactory=J,d.PLUGIN_SYSTEM_INFO=$e,d.PLUGIN_VERSION=ee,d.PluginLoadError=m,d.PluginLoader=W,d.PluginManager=Z,d.PluginRegistry=N,d.PluginSandbox=q,d.PluginUtils=Ue,d.ResourceError=K,d.ResourceManager=Y,d.ResourceMonitor=j,d.SecurityError=g,d.SecurityManager=G,d.SecurityPolicySet=Q,d.createEngine=We,d.default=L,d.name=He,d.version=xe,Object.defineProperties(d,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
//# sourceMappingURL=dataprism.umd.js.map
