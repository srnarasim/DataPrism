{"version":3,"file":"dataprism.umd.js","sources":["../../packages/orchestration/src/error-handler.ts","../../node_modules/@duckdb/duckdb-wasm/dist/duckdb-browser.mjs","../../packages/orchestration/src/duckdb-cdn-loader.ts","../../packages/orchestration/src/duckdb-manager.ts","../../packages/orchestration/src/dependency-registry.ts","../../packages/orchestration/src/arrow-loader.ts","../../packages/orchestration/src/engine.ts","../../packages/orchestration/src/dependency-error-handler.ts","../../packages/orchestration/src/dependency-events.ts","../../packages/plugins/src/manager/plugin-registry.ts","../../packages/plugins/src/manager/plugin-loader.ts","../../packages/plugins/src/security/security-manager.ts","../../packages/plugins/src/manager/resource-manager.ts","../../packages/plugins/src/communication/event-bus.ts","../../packages/plugins/src/manager/plugin-manager.ts","../../packages/plugins/src/index.ts","../../packages/orchestration/src/index.ts"],"sourcesContent":["import { DataPrismError } from \"./types.js\";\n\nexport class ErrorHandler {\n  private static instance: ErrorHandler;\n  private errorLog: DataPrismError[] = [];\n\n  static getInstance(): ErrorHandler {\n    if (!ErrorHandler.instance) {\n      ErrorHandler.instance = new ErrorHandler();\n    }\n    return ErrorHandler.instance;\n  }\n\n  handleError(\n    error: unknown,\n    source: \"wasm\" | \"duckdb\" | \"orchestration\",\n  ): DataPrismError {\n    const dataPrismError: DataPrismError = {\n      message: error instanceof Error ? error.message : String(error),\n      code: this.generateErrorCode(source),\n      source,\n    };\n\n    this.errorLog.push(dataPrismError);\n    console.error(`DataPrism Error [${source}]:`, dataPrismError);\n\n    return dataPrismError;\n  }\n\n  private generateErrorCode(source: string): string {\n    const timestamp = Date.now();\n    const prefix = source.toUpperCase().slice(0, 3);\n    return `${prefix}_${timestamp}`;\n  }\n\n  getErrorHistory(): DataPrismError[] {\n    return [...this.errorLog];\n  }\n\n  clearErrorHistory(): void {\n    this.errorLog = [];\n  }\n}\n\n// Global error handler for unhandled promise rejections\nif (typeof window !== \"undefined\") {\n  window.addEventListener(\"unhandledrejection\", (event) => {\n    const errorHandler = ErrorHandler.getInstance();\n    errorHandler.handleError(event.reason, \"orchestration\");\n  });\n}\n","var q=Object.create;var h=Object.defineProperty;var Y=Object.getOwnPropertyDescriptor;var j=Object.getOwnPropertyNames;var K=Object.getPrototypeOf,V=Object.prototype.hasOwnProperty;var z=(s,e)=>()=>(e||s((e={exports:{}}).exports,e),e.exports);var J=(s,e,r,t)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let o of j(e))!V.call(s,o)&&o!==r&&h(s,o,{get:()=>e[o],enumerable:!(t=Y(e,o))||t.enumerable});return s};var $=(s,e,r)=>(r=s!=null?q(K(s)):{},J(e||!s||!s.__esModule?h(r,\"default\",{value:s,enumerable:!0}):r,s));var H=z((Ye,x)=>{x.exports=Worker});var Z=(o=>(o[o.UNDEFINED=0]=\"UNDEFINED\",o[o.AUTOMATIC=1]=\"AUTOMATIC\",o[o.READ_ONLY=2]=\"READ_ONLY\",o[o.READ_WRITE=3]=\"READ_WRITE\",o))(Z||{});var X=(n=>(n[n.IDENTIFIER=0]=\"IDENTIFIER\",n[n.NUMERIC_CONSTANT=1]=\"NUMERIC_CONSTANT\",n[n.STRING_CONSTANT=2]=\"STRING_CONSTANT\",n[n.OPERATOR=3]=\"OPERATOR\",n[n.KEYWORD=4]=\"KEYWORD\",n[n.COMMENT=5]=\"COMMENT\",n))(X||{});var ee=(a=>(a[a.NONE=0]=\"NONE\",a[a.DEBUG=1]=\"DEBUG\",a[a.INFO=2]=\"INFO\",a[a.WARNING=3]=\"WARNING\",a[a.ERROR=4]=\"ERROR\",a))(ee||{}),re=(n=>(n[n.NONE=0]=\"NONE\",n[n.CONNECT=1]=\"CONNECT\",n[n.DISCONNECT=2]=\"DISCONNECT\",n[n.OPEN=3]=\"OPEN\",n[n.QUERY=4]=\"QUERY\",n[n.INSTANTIATE=5]=\"INSTANTIATE\",n))(re||{}),te=(n=>(n[n.NONE=0]=\"NONE\",n[n.OK=1]=\"OK\",n[n.ERROR=2]=\"ERROR\",n[n.START=3]=\"START\",n[n.RUN=4]=\"RUN\",n[n.CAPTURE=5]=\"CAPTURE\",n))(te||{}),se=(a=>(a[a.NONE=0]=\"NONE\",a[a.WEB_WORKER=1]=\"WEB_WORKER\",a[a.NODE_WORKER=2]=\"NODE_WORKER\",a[a.BINDINGS=3]=\"BINDINGS\",a[a.ASYNC_DUCKDB=4]=\"ASYNC_DUCKDB\",a))(se||{}),P=class{log(e){}},A=class{constructor(e=2){this.level=e}log(e){e.level>=this.level&&console.log(e)}};function pe(s){switch(s){case 0:return\"NONE\";case 1:return\"DEBUG\";case 2:return\"INFO\";case 3:return\"WARNING\";case 4:return\"ERROR\";default:return\"?\"}}function _e(s){switch(s){case 0:return\"NONE\";case 1:return\"OK\";case 2:return\"ERROR\";case 3:return\"START\";case 4:return\"RUN\";case 5:return\"CAPTURE\";default:return\"?\"}}function me(s){switch(s){case 1:return\"CONNECT\";case 2:return\"DISCONNECT\";case 5:return\"INSTANTIATE\";case 3:return\"OPEN\";case 4:return\"QUERY\";default:return\"?\"}}function Re(s){switch(s){case 0:return\"NONE\";case 1:return\"WEB WORKER\";case 2:return\"NODE WORKER\";case 3:return\"DUCKDB BINDINGS\";case 4:return\"DUCKDB\";default:return\"?\"}}var ne=(e=>(e[e.SUCCESS=0]=\"SUCCESS\",e))(ne||{});import*as u from\"apache-arrow\";var E=class{constructor(e,r){this._bindings=e,this._conn=r}get bindings(){return this._bindings}async close(){return this._bindings.disconnect(this._conn)}useUnsafe(e){return e(this._bindings,this._conn)}async query(e){this._bindings.logger.log({timestamp:new Date,level:2,origin:4,topic:4,event:4,value:e});let r=await this._bindings.runQuery(this._conn,e),t=u.RecordBatchReader.from(r);return console.assert(t.isSync(),\"Reader is not sync\"),console.assert(t.isFile(),\"Reader is not file\"),new u.Table(t)}async send(e,r=!1){this._bindings.logger.log({timestamp:new Date,level:2,origin:4,topic:4,event:4,value:e});let t=await this._bindings.startPendingQuery(this._conn,e,r);for(;t==null;)t=await this._bindings.pollPendingQuery(this._conn);let o=new p(this._bindings,this._conn,t),a=await u.RecordBatchReader.from(o);return console.assert(a.isAsync()),console.assert(a.isStream()),a}async cancelSent(){return await this._bindings.cancelPendingQuery(this._conn)}async getTableNames(e){return await this._bindings.getTableNames(this._conn,e)}async prepare(e){let r=await this._bindings.createPrepared(this._conn,e);return new b(this._bindings,this._conn,r)}async insertArrowTable(e,r){let t=u.tableToIPC(e,\"stream\");await this.insertArrowFromIPCStream(t,r)}async insertArrowFromIPCStream(e,r){await this._bindings.insertArrowFromIPCStream(this._conn,e,r)}async insertCSVFromPath(e,r){await this._bindings.insertCSVFromPath(this._conn,e,r)}async insertJSONFromPath(e,r){await this._bindings.insertJSONFromPath(this._conn,e,r)}},p=class{constructor(e,r,t){this.db=e;this.conn=r;this.header=t;this._first=!0,this._depleted=!1,this._inFlight=null}async next(){if(this._first)return this._first=!1,{done:!1,value:this.header};if(this._depleted)return{done:!0,value:null};let e;return this._inFlight!=null?(e=await this._inFlight,this._inFlight=null):e=await this.db.fetchQueryResults(this.conn),this._depleted=e.length==0,this._depleted||(this._inFlight=this.db.fetchQueryResults(this.conn)),{done:this._depleted,value:e}}[Symbol.asyncIterator](){return this}},b=class{constructor(e,r,t){this.bindings=e,this.connectionId=r,this.statementId=t}async close(){await this.bindings.closePrepared(this.connectionId,this.statementId)}async query(...e){let r=await this.bindings.runPrepared(this.connectionId,this.statementId,e),t=u.RecordBatchReader.from(r);return console.assert(t.isSync()),console.assert(t.isFile()),new u.Table(t)}async send(...e){let r=await this.bindings.sendPrepared(this.connectionId,this.statementId,e),t=new p(this.bindings,this.connectionId,r),o=await u.RecordBatchReader.from(t);return console.assert(o.isAsync()),console.assert(o.isStream()),o}};var D=(c=>(c.CANCEL_PENDING_QUERY=\"CANCEL_PENDING_QUERY\",c.CLOSE_PREPARED=\"CLOSE_PREPARED\",c.COLLECT_FILE_STATISTICS=\"COLLECT_FILE_STATISTICS\",c.REGISTER_OPFS_FILE_NAME=\"REGISTER_OPFS_FILE_NAME\",c.CONNECT=\"CONNECT\",c.COPY_FILE_TO_BUFFER=\"COPY_FILE_TO_BUFFER\",c.COPY_FILE_TO_PATH=\"COPY_FILE_TO_PATH\",c.CREATE_PREPARED=\"CREATE_PREPARED\",c.DISCONNECT=\"DISCONNECT\",c.DROP_FILE=\"DROP_FILE\",c.DROP_FILES=\"DROP_FILES\",c.EXPORT_FILE_STATISTICS=\"EXPORT_FILE_STATISTICS\",c.FETCH_QUERY_RESULTS=\"FETCH_QUERY_RESULTS\",c.FLUSH_FILES=\"FLUSH_FILES\",c.GET_FEATURE_FLAGS=\"GET_FEATURE_FLAGS\",c.GET_TABLE_NAMES=\"GET_TABLE_NAMES\",c.GET_VERSION=\"GET_VERSION\",c.GLOB_FILE_INFOS=\"GLOB_FILE_INFOS\",c.INSERT_ARROW_FROM_IPC_STREAM=\"INSERT_ARROW_FROM_IPC_STREAM\",c.INSERT_CSV_FROM_PATH=\"IMPORT_CSV_FROM_PATH\",c.INSERT_JSON_FROM_PATH=\"IMPORT_JSON_FROM_PATH\",c.INSTANTIATE=\"INSTANTIATE\",c.OPEN=\"OPEN\",c.PING=\"PING\",c.POLL_PENDING_QUERY=\"POLL_PENDING_QUERY\",c.REGISTER_FILE_BUFFER=\"REGISTER_FILE_BUFFER\",c.REGISTER_FILE_HANDLE=\"REGISTER_FILE_HANDLE\",c.REGISTER_FILE_URL=\"REGISTER_FILE_URL\",c.RESET=\"RESET\",c.RUN_PREPARED=\"RUN_PREPARED\",c.RUN_QUERY=\"RUN_QUERY\",c.SEND_PREPARED=\"SEND_PREPARED\",c.START_PENDING_QUERY=\"START_PENDING_QUERY\",c.TOKENIZE=\"TOKENIZE\",c))(D||{}),O=(l=>(l.CONNECTION_INFO=\"CONNECTION_INFO\",l.ERROR=\"ERROR\",l.FEATURE_FLAGS=\"FEATURE_FLAGS\",l.FILE_BUFFER=\"FILE_BUFFER\",l.FILE_INFOS=\"FILE_INFOS\",l.FILE_SIZE=\"FILE_SIZE\",l.FILE_STATISTICS=\"FILE_STATISTICS\",l.INSTANTIATE_PROGRESS=\"INSTANTIATE_PROGRESS\",l.LOG=\"LOG\",l.PROGRESS_UPDATE=\"PROGRESS_UPDATE\",l.OK=\"OK\",l.PREPARED_STATEMENT_ID=\"PREPARED_STATEMENT_ID\",l.QUERY_PLAN=\"QUERY_PLAN\",l.QUERY_RESULT=\"QUERY_RESULT\",l.QUERY_RESULT_CHUNK=\"QUERY_RESULT_CHUNK\",l.QUERY_RESULT_HEADER=\"QUERY_RESULT_HEADER\",l.QUERY_RESULT_HEADER_OR_NULL=\"QUERY_RESULT_HEADER_OR_NULL\",l.REGISTERED_FILE=\"REGISTERED_FILE\",l.SCRIPT_TOKENS=\"SCRIPT_TOKENS\",l.SUCCESS=\"SUCCESS\",l.TABLE_NAMES=\"TABLE_NAMES\",l.VERSION_STRING=\"VERSION_STRING\",l))(O||{}),i=class{constructor(e,r){this.promiseResolver=()=>{};this.promiseRejecter=()=>{};this.type=e,this.data=r,this.promise=new Promise((t,o)=>{this.promiseResolver=t,this.promiseRejecter=o})}};import*as d from\"apache-arrow\";function _(s){switch(s.typeId){case d.Type.Binary:return{sqlType:\"binary\"};case d.Type.Bool:return{sqlType:\"bool\"};case d.Type.Date:return{sqlType:\"date\"};case d.Type.DateDay:return{sqlType:\"date32[d]\"};case d.Type.DateMillisecond:return{sqlType:\"date64[ms]\"};case d.Type.Decimal:{let e=s;return{sqlType:\"decimal\",precision:e.precision,scale:e.scale}}case d.Type.Float:return{sqlType:\"float\"};case d.Type.Float16:return{sqlType:\"float16\"};case d.Type.Float32:return{sqlType:\"float32\"};case d.Type.Float64:return{sqlType:\"float64\"};case d.Type.Int:return{sqlType:\"int32\"};case d.Type.Int16:return{sqlType:\"int16\"};case d.Type.Int32:return{sqlType:\"int32\"};case d.Type.Int64:return{sqlType:\"int64\"};case d.Type.Uint16:return{sqlType:\"uint16\"};case d.Type.Uint32:return{sqlType:\"uint32\"};case d.Type.Uint64:return{sqlType:\"uint64\"};case d.Type.Uint8:return{sqlType:\"uint8\"};case d.Type.IntervalDayTime:return{sqlType:\"interval[dt]\"};case d.Type.IntervalYearMonth:return{sqlType:\"interval[m]\"};case d.Type.List:return{sqlType:\"list\",valueType:_(s.valueType)};case d.Type.FixedSizeBinary:return{sqlType:\"fixedsizebinary\",byteWidth:s.byteWidth};case d.Type.Null:return{sqlType:\"null\"};case d.Type.Utf8:return{sqlType:\"utf8\"};case d.Type.Struct:return{sqlType:\"struct\",fields:s.children.map(r=>m(r.name,r.type))};case d.Type.Map:{let e=s;return{sqlType:\"map\",keyType:_(e.keyType),valueType:_(e.valueType)}}case d.Type.Time:return{sqlType:\"time[s]\"};case d.Type.TimeMicrosecond:return{sqlType:\"time[us]\"};case d.Type.TimeMillisecond:return{sqlType:\"time[ms]\"};case d.Type.TimeNanosecond:return{sqlType:\"time[ns]\"};case d.Type.TimeSecond:return{sqlType:\"time[s]\"};case d.Type.Timestamp:return{sqlType:\"timestamp\",timezone:s.timezone||void 0};case d.Type.TimestampSecond:return{sqlType:\"timestamp[s]\",timezone:s.timezone||void 0};case d.Type.TimestampMicrosecond:return{sqlType:\"timestamp[us]\",timezone:s.timezone||void 0};case d.Type.TimestampNanosecond:return{sqlType:\"timestamp[ns]\",timezone:s.timezone||void 0};case d.Type.TimestampMillisecond:return{sqlType:\"timestamp[ms]\",timezone:s.timezone||void 0}}throw new Error(\"unsupported arrow type: \".concat(s.toString()))}function m(s,e){let r=_(e);return r.name=s,r}var oe=new TextEncoder,L=class{constructor(e,r=null){this._onInstantiationProgress=[];this._onExecutionProgress=[];this._worker=null;this._workerShutdownPromise=null;this._workerShutdownResolver=()=>{};this._nextMessageId=0;this._pendingRequests=new Map;this._logger=e,this._onMessageHandler=this.onMessage.bind(this),this._onErrorHandler=this.onError.bind(this),this._onCloseHandler=this.onClose.bind(this),r!=null&&this.attach(r)}get logger(){return this._logger}attach(e){this._worker=e,this._worker.addEventListener(\"message\",this._onMessageHandler),this._worker.addEventListener(\"error\",this._onErrorHandler),this._worker.addEventListener(\"close\",this._onCloseHandler),this._workerShutdownPromise=new Promise((r,t)=>{this._workerShutdownResolver=r})}detach(){this._worker&&(this._worker.removeEventListener(\"message\",this._onMessageHandler),this._worker.removeEventListener(\"error\",this._onErrorHandler),this._worker.removeEventListener(\"close\",this._onCloseHandler),this._worker=null,this._workerShutdownResolver(null),this._workerShutdownPromise=null,this._workerShutdownResolver=()=>{})}async terminate(){this._worker&&(this._worker.terminate(),this._worker=null,this._workerShutdownPromise=null,this._workerShutdownResolver=()=>{})}async postTask(e,r=[]){if(!this._worker){console.error(\"cannot send a message since the worker is not set!\");return}let t=this._nextMessageId++;return this._pendingRequests.set(t,e),this._worker.postMessage({messageId:t,type:e.type,data:e.data},r),await e.promise}onMessage(e){var o;let r=e.data;switch(r.type){case\"PROGRESS_UPDATE\":{for(let a of this._onExecutionProgress)a(r.data);return}case\"LOG\":{this._logger.log(r.data);return}case\"INSTANTIATE_PROGRESS\":{for(let a of this._onInstantiationProgress)a(r.data);return}}let t=this._pendingRequests.get(r.requestId);if(!t){console.warn(\"unassociated response: [\".concat(r.requestId,\", \").concat(r.type.toString(),\"]\"));return}if(this._pendingRequests.delete(r.requestId),r.type==\"ERROR\"){let a=new Error(r.data.message);a.name=r.data.name,(o=Object.getOwnPropertyDescriptor(a,\"stack\"))!=null&&o.writable&&(a.stack=r.data.stack),t.promiseRejecter(a);return}switch(t.type){case\"CLOSE_PREPARED\":case\"COLLECT_FILE_STATISTICS\":case\"REGISTER_OPFS_FILE_NAME\":case\"COPY_FILE_TO_PATH\":case\"DISCONNECT\":case\"DROP_FILE\":case\"DROP_FILES\":case\"FLUSH_FILES\":case\"INSERT_ARROW_FROM_IPC_STREAM\":case\"IMPORT_CSV_FROM_PATH\":case\"IMPORT_JSON_FROM_PATH\":case\"OPEN\":case\"PING\":case\"REGISTER_FILE_BUFFER\":case\"REGISTER_FILE_HANDLE\":case\"REGISTER_FILE_URL\":case\"RESET\":if(r.type==\"OK\"){t.promiseResolver(r.data);return}break;case\"INSTANTIATE\":if(this._onInstantiationProgress=[],r.type==\"OK\"){t.promiseResolver(r.data);return}break;case\"GLOB_FILE_INFOS\":if(r.type==\"FILE_INFOS\"){t.promiseResolver(r.data);return}break;case\"GET_VERSION\":if(r.type==\"VERSION_STRING\"){t.promiseResolver(r.data);return}break;case\"GET_FEATURE_FLAGS\":if(r.type==\"FEATURE_FLAGS\"){t.promiseResolver(r.data);return}break;case\"GET_TABLE_NAMES\":if(r.type==\"TABLE_NAMES\"){t.promiseResolver(r.data);return}break;case\"TOKENIZE\":if(r.type==\"SCRIPT_TOKENS\"){t.promiseResolver(r.data);return}break;case\"COPY_FILE_TO_BUFFER\":if(r.type==\"FILE_BUFFER\"){t.promiseResolver(r.data);return}break;case\"EXPORT_FILE_STATISTICS\":if(r.type==\"FILE_STATISTICS\"){t.promiseResolver(r.data);return}break;case\"CONNECT\":if(r.type==\"CONNECTION_INFO\"){t.promiseResolver(r.data);return}break;case\"RUN_PREPARED\":case\"RUN_QUERY\":if(r.type==\"QUERY_RESULT\"){t.promiseResolver(r.data);return}break;case\"SEND_PREPARED\":if(r.type==\"QUERY_RESULT_HEADER\"){t.promiseResolver(r.data);return}break;case\"START_PENDING_QUERY\":if(r.type==\"QUERY_RESULT_HEADER_OR_NULL\"){t.promiseResolver(r.data);return}break;case\"POLL_PENDING_QUERY\":if(r.type==\"QUERY_RESULT_HEADER_OR_NULL\"){t.promiseResolver(r.data);return}break;case\"CANCEL_PENDING_QUERY\":if(this._onInstantiationProgress=[],r.type==\"SUCCESS\"){t.promiseResolver(r.data);return}break;case\"FETCH_QUERY_RESULTS\":if(r.type==\"QUERY_RESULT_CHUNK\"){t.promiseResolver(r.data);return}break;case\"CREATE_PREPARED\":if(r.type==\"PREPARED_STATEMENT_ID\"){t.promiseResolver(r.data);return}break}t.promiseRejecter(new Error(\"unexpected response type: \".concat(r.type.toString())))}onError(e){console.error(e),console.error(\"error in duckdb worker: \".concat(e.message)),this._pendingRequests.clear()}onClose(){if(this._workerShutdownResolver(null),this._pendingRequests.size!=0){console.warn(\"worker terminated with \".concat(this._pendingRequests.size,\" pending requests\"));return}this._pendingRequests.clear()}async reset(){let e=new i(\"RESET\",null);return await this.postTask(e)}async ping(){let e=new i(\"PING\",null);await this.postTask(e)}async dropFile(e){let r=new i(\"DROP_FILE\",e);return await this.postTask(r)}async dropFiles(){let e=new i(\"DROP_FILES\",null);return await this.postTask(e)}async flushFiles(){let e=new i(\"FLUSH_FILES\",null);return await this.postTask(e)}async instantiate(e,r=null,t=o=>{}){this._onInstantiationProgress.push(t);let o=new i(\"INSTANTIATE\",[e,r]);return await this.postTask(o)}async getVersion(){let e=new i(\"GET_VERSION\",null);return await this.postTask(e)}async getFeatureFlags(){let e=new i(\"GET_FEATURE_FLAGS\",null);return await this.postTask(e)}async open(e){let r=new i(\"OPEN\",e);await this.postTask(r)}async tokenize(e){let r=new i(\"TOKENIZE\",e);return await this.postTask(r)}async connectInternal(){let e=new i(\"CONNECT\",null);return await this.postTask(e)}async connect(){let e=await this.connectInternal();return new E(this,e)}async disconnect(e){let r=new i(\"DISCONNECT\",e);await this.postTask(r)}async runQuery(e,r){let t=new i(\"RUN_QUERY\",[e,r]);return await this.postTask(t)}async startPendingQuery(e,r,t=!1){let o=new i(\"START_PENDING_QUERY\",[e,r,t]);return await this.postTask(o)}async pollPendingQuery(e){let r=new i(\"POLL_PENDING_QUERY\",e);return await this.postTask(r)}async cancelPendingQuery(e){let r=new i(\"CANCEL_PENDING_QUERY\",e);return await this.postTask(r)}async fetchQueryResults(e){let r=new i(\"FETCH_QUERY_RESULTS\",e);return await this.postTask(r)}async getTableNames(e,r){let t=new i(\"GET_TABLE_NAMES\",[e,r]);return await this.postTask(t)}async createPrepared(e,r){let t=new i(\"CREATE_PREPARED\",[e,r]);return await this.postTask(t)}async closePrepared(e,r){let t=new i(\"CLOSE_PREPARED\",[e,r]);await this.postTask(t)}async runPrepared(e,r,t){let o=new i(\"RUN_PREPARED\",[e,r,t]);return await this.postTask(o)}async sendPrepared(e,r,t){let o=new i(\"SEND_PREPARED\",[e,r,t]);return await this.postTask(o)}async globFiles(e){let r=new i(\"GLOB_FILE_INFOS\",e);return await this.postTask(r)}async registerFileText(e,r){let t=oe.encode(r);await this.registerFileBuffer(e,t)}async registerFileURL(e,r,t,o){r===void 0&&(r=e);let a=new i(\"REGISTER_FILE_URL\",[e,r,t,o]);await this.postTask(a)}async registerEmptyFileBuffer(e){}async registerFileBuffer(e,r){let t=new i(\"REGISTER_FILE_BUFFER\",[e,r]);await this.postTask(t,[r.buffer])}async registerFileHandle(e,r,t,o){let a=new i(\"REGISTER_FILE_HANDLE\",[e,r,t,o]);await this.postTask(a,[])}async registerOPFSFileName(e){let r=new i(\"REGISTER_OPFS_FILE_NAME\",[e]);await this.postTask(r,[])}async collectFileStatistics(e,r){let t=new i(\"COLLECT_FILE_STATISTICS\",[e,r]);await this.postTask(t,[])}async exportFileStatistics(e){let r=new i(\"EXPORT_FILE_STATISTICS\",e);return await this.postTask(r,[])}async copyFileToBuffer(e){let r=new i(\"COPY_FILE_TO_BUFFER\",e);return await this.postTask(r)}async copyFileToPath(e,r){let t=new i(\"COPY_FILE_TO_PATH\",[e,r]);await this.postTask(t)}async insertArrowFromIPCStream(e,r,t){if(r.length==0)return;let o=new i(\"INSERT_ARROW_FROM_IPC_STREAM\",[e,r,t]);await this.postTask(o,[r.buffer])}async insertCSVFromPath(e,r,t){if(t.columns!==void 0){let a=[];for(let n in t.columns){let T=t.columns[n];a.push(m(n,T))}t.columnsFlat=a,delete t.columns}let o=new i(\"IMPORT_CSV_FROM_PATH\",[e,r,t]);await this.postTask(o)}async insertJSONFromPath(e,r,t){if(t.columns!==void 0){let a=[];for(let n in t.columns){let T=t.columns[n];a.push(m(n,T))}t.columnsFlat=a,delete t.columns}let o=new i(\"IMPORT_JSON_FROM_PATH\",[e,r,t]);await this.postTask(o)}};function ae(){let s=new TextDecoder;return e=>(typeof SharedArrayBuffer<\"u\"&&e.buffer instanceof SharedArrayBuffer&&(e=new Uint8Array(e)),s.decode(e))}var Le=ae();var F=(n=>(n[n.BUFFER=0]=\"BUFFER\",n[n.NODE_FS=1]=\"NODE_FS\",n[n.BROWSER_FILEREADER=2]=\"BROWSER_FILEREADER\",n[n.BROWSER_FSACCESS=3]=\"BROWSER_FSACCESS\",n[n.HTTP=4]=\"HTTP\",n[n.S3=5]=\"S3\",n))(F||{});var w=class{constructor(){this._bindings=null;this._nextMessageId=0}log(e){this.postMessage({messageId:this._nextMessageId++,requestId:0,type:\"LOG\",data:e},[])}sendOK(e){this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:\"OK\",data:null},[])}failWith(e,r){let t={name:r.name,message:r.message,stack:r.stack||void 0};this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:\"ERROR\",data:t},[])}async onMessage(e){switch(e.type){case\"PING\":this.sendOK(e);return;case\"INSTANTIATE\":this._bindings!=null&&this.failWith(e,new Error(\"duckdb already initialized\"));try{this._bindings=await this.instantiate(e.data[0],e.data[1],r=>{this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:\"INSTANTIATE_PROGRESS\",data:r},[])}),this.sendOK(e)}catch(r){console.log(r),this._bindings=null,this.failWith(e,r)}return;default:break}if(!this._bindings)return this.failWith(e,new Error(\"duckdb is not initialized\"));try{switch(e.type){case\"GET_VERSION\":this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:\"VERSION_STRING\",data:this._bindings.getVersion()},[]);break;case\"GET_FEATURE_FLAGS\":this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:\"FEATURE_FLAGS\",data:this._bindings.getFeatureFlags()},[]);break;case\"RESET\":this._bindings.reset(),this.sendOK(e);break;case\"OPEN\":{let r=e.data.path;r!=null&&r.startsWith(\"opfs://\")&&(await this._bindings.prepareDBFileHandle(r,3),e.data.useDirectIO=!0),this._bindings.open(e.data),this.sendOK(e);break}case\"DROP_FILE\":this._bindings.dropFile(e.data),this.sendOK(e);break;case\"DROP_FILES\":this._bindings.dropFiles(),this.sendOK(e);break;case\"FLUSH_FILES\":this._bindings.flushFiles(),this.sendOK(e);break;case\"CONNECT\":{let r=this._bindings.connect();this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:\"CONNECTION_INFO\",data:r.useUnsafe((t,o)=>o)},[]);break}case\"DISCONNECT\":this._bindings.disconnect(e.data),this.sendOK(e);break;case\"CREATE_PREPARED\":{let r=this._bindings.createPrepared(e.data[0],e.data[1]);this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:\"PREPARED_STATEMENT_ID\",data:r},[]);break}case\"CLOSE_PREPARED\":{this._bindings.closePrepared(e.data[0],e.data[1]),this.sendOK(e);break}case\"RUN_PREPARED\":{let r=this._bindings.runPrepared(e.data[0],e.data[1],e.data[2]);this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:\"QUERY_RESULT\",data:r},[r.buffer]);break}case\"RUN_QUERY\":{let r=this._bindings.runQuery(e.data[0],e.data[1]);this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:\"QUERY_RESULT\",data:r},[r.buffer]);break}case\"SEND_PREPARED\":{let r=this._bindings.sendPrepared(e.data[0],e.data[1],e.data[2]);this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:\"QUERY_RESULT_HEADER\",data:r},[r.buffer]);break}case\"START_PENDING_QUERY\":{let r=this._bindings.startPendingQuery(e.data[0],e.data[1],e.data[2]),t=[];r&&t.push(r.buffer),this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:\"QUERY_RESULT_HEADER_OR_NULL\",data:r},t);break}case\"POLL_PENDING_QUERY\":{let r=this._bindings.pollPendingQuery(e.data),t=[];r&&t.push(r.buffer),this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:\"QUERY_RESULT_HEADER_OR_NULL\",data:r},t);break}case\"CANCEL_PENDING_QUERY\":{let r=this._bindings.cancelPendingQuery(e.data);this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:\"SUCCESS\",data:r},[]);break}case\"FETCH_QUERY_RESULTS\":{let r=this._bindings.fetchQueryResults(e.data);this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:\"QUERY_RESULT_CHUNK\",data:r},[r.buffer]);break}case\"GET_TABLE_NAMES\":{let r=this._bindings.getTableNames(e.data[0],e.data[1]);this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:\"TABLE_NAMES\",data:r},[]);break}case\"GLOB_FILE_INFOS\":{let r=this._bindings.globFiles(e.data);this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:\"FILE_INFOS\",data:r},[]);break}case\"REGISTER_FILE_URL\":this._bindings.registerFileURL(e.data[0],e.data[1],e.data[2],e.data[3]),this.sendOK(e);break;case\"REGISTER_FILE_BUFFER\":this._bindings.registerFileBuffer(e.data[0],e.data[1]),this.sendOK(e);break;case\"REGISTER_FILE_HANDLE\":await this._bindings.registerFileHandleAsync(e.data[0],e.data[1],e.data[2],e.data[3]),this.sendOK(e);break;case\"COPY_FILE_TO_PATH\":this._bindings.copyFileToPath(e.data[0],e.data[1]),this.sendOK(e);break;case\"COPY_FILE_TO_BUFFER\":{let r=this._bindings.copyFileToBuffer(e.data);this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:\"FILE_BUFFER\",data:r},[]);break}case\"COLLECT_FILE_STATISTICS\":this._bindings.collectFileStatistics(e.data[0],e.data[1]),this.sendOK(e);break;case\"REGISTER_OPFS_FILE_NAME\":this._bindings.registerOPFSFileName(e.data[0]),this.sendOK(e);break;case\"EXPORT_FILE_STATISTICS\":{this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:\"FILE_STATISTICS\",data:this._bindings.exportFileStatistics(e.data)},[]);break}case\"INSERT_ARROW_FROM_IPC_STREAM\":{this._bindings.insertArrowFromIPCStream(e.data[0],e.data[1],e.data[2]),this.sendOK(e);break}case\"IMPORT_CSV_FROM_PATH\":{this._bindings.insertCSVFromPath(e.data[0],e.data[1],e.data[2]),this.sendOK(e);break}case\"IMPORT_JSON_FROM_PATH\":{this._bindings.insertJSONFromPath(e.data[0],e.data[1],e.data[2]),this.sendOK(e);break}case\"TOKENIZE\":{let r=this._bindings.tokenize(e.data);this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:\"SCRIPT_TOKENS\",data:r},[]);break}}}catch(r){return console.log(r),this.failWith(e,r)}}};var f=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,3,1,0,1,10,14,1,12,0,65,0,65,0,65,0,252,10,0,0,11])),U=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,8,1,6,0,6,64,25,11,11]));var C=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11]));var W=()=>(async s=>{try{return typeof MessageChannel<\"u\"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(s)}catch(e){return!1}})(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]));var R={name:\"@duckdb/duckdb-wasm\",version:\"1.29.1-dev132.0\",description:\"DuckDB powered by WebAssembly\",license:\"MIT\",repository:{type:\"git\",url:\"https://github.com/duckdb/duckdb-wasm.git\"},keywords:[\"sql\",\"duckdb\",\"relational\",\"database\",\"data\",\"query\",\"wasm\",\"analytics\",\"olap\",\"arrow\",\"parquet\",\"json\",\"csv\"],dependencies:{\"apache-arrow\":\"^17.0.0\"},devDependencies:{\"@types/emscripten\":\"^1.39.10\",\"@types/jasmine\":\"^5.1.4\",\"@typescript-eslint/eslint-plugin\":\"^6.21.0\",\"@typescript-eslint/parser\":\"^6.21.0\",esbuild:\"^0.20.2\",eslint:\"^8.57.0\",\"eslint-plugin-jasmine\":\"^4.1.3\",\"eslint-plugin-react\":\"^7.34.0\",\"fast-glob\":\"^3.3.2\",jasmine:\"^5.1.0\",\"jasmine-core\":\"^5.1.2\",\"jasmine-spec-reporter\":\"^7.0.0\",\"js-sha256\":\"^0.11.0\",karma:\"^6.4.2\",\"karma-chrome-launcher\":\"^3.2.0\",\"karma-coverage\":\"^2.2.1\",\"karma-firefox-launcher\":\"^2.1.3\",\"karma-jasmine\":\"^5.1.0\",\"karma-jasmine-html-reporter\":\"^2.1.0\",\"karma-sourcemap-loader\":\"^0.4.0\",\"karma-spec-reporter\":\"^0.0.36\",\"make-dir\":\"^4.0.0\",nyc:\"^15.1.0\",prettier:\"^3.2.5\",puppeteer:\"^22.8.0\",rimraf:\"^5.0.5\",s3rver:\"^3.7.1\",typedoc:\"^0.25.13\",typescript:\"^5.3.3\",\"wasm-feature-detect\":\"^1.6.1\",\"web-worker\":\"^1.2.0\"},scripts:{\"build:debug\":\"node bundle.mjs debug && tsc --emitDeclarationOnly\",\"build:release\":\"node bundle.mjs release && tsc --emitDeclarationOnly\",docs:\"typedoc\",report:\"node ./coverage.mjs\",\"test:node\":\"node --enable-source-maps ../../node_modules/jasmine/bin/jasmine ./dist/tests-node.cjs\",\"test:node:debug\":\"node --inspect-brk --enable-source-maps ../../node_modules/jasmine/bin/jasmine ./dist/tests-node.cjs\",\"test:node:coverage\":\"nyc -r json --report-dir ./coverage/node node ../../node_modules/jasmine/bin/jasmine ./dist/tests-node.cjs\",\"test:firefox\":\"karma start ./karma/tests-firefox.cjs\",\"test:chrome\":\"karma start ./karma/tests-chrome.cjs\",\"test:chrome:eh\":\"karma start ./karma/tests-chrome-eh.cjs\",\"test:chrome:coverage\":\"karma start ./karma/tests-chrome-coverage.cjs\",\"test:browser\":\"karma start ./karma/tests-all.cjs\",\"test:browser:debug\":\"karma start ./karma/tests-debug.cjs\",test:\"npm run test:chrome && npm run test:node\",\"test:coverage\":\"npm run test:chrome:coverage && npm run test:node:coverage && npm run report\",lint:\"eslint src test\"},files:[\"dist\",\"!dist/tests-*\",\"!dist/duckdb-browser-mvp.worker.js.map\",\"!dist/types/test\"],main:\"dist/duckdb-browser.cjs\",module:\"dist/duckdb-browser.mjs\",types:\"dist/duckdb-browser.d.ts\",jsdelivr:\"dist/duckdb-browser.cjs\",unpkg:\"dist/duckdb-browser.mjs\",sideEffects:!1,browser:{fs:!1,path:!1,perf_hooks:!1,os:!1,worker_threads:!1},exports:{\"./dist/duckdb-mvp.wasm\":\"./dist/duckdb-mvp.wasm\",\"./dist/duckdb-eh.wasm\":\"./dist/duckdb-eh.wasm\",\"./dist/duckdb-coi.wasm\":\"./dist/duckdb-coi.wasm\",\"./dist/duckdb-browser\":\"./dist/duckdb-browser.mjs\",\"./dist/duckdb-browser.cjs\":\"./dist/duckdb-browser.cjs\",\"./dist/duckdb-browser.mjs\":\"./dist/duckdb-browser.mjs\",\"./dist/duckdb-browser-coi.pthread.worker.js\":\"./dist/duckdb-browser-coi.pthread.worker.js\",\"./dist/duckdb-browser-coi.worker.js\":\"./dist/duckdb-browser-coi.worker.js\",\"./dist/duckdb-browser-eh.worker.js\":\"./dist/duckdb-browser-eh.worker.js\",\"./dist/duckdb-browser-mvp.worker.js\":\"./dist/duckdb-browser-mvp.worker.js\",\"./dist/duckdb-node\":\"./dist/duckdb-node.cjs\",\"./dist/duckdb-node.cjs\":\"./dist/duckdb-node.cjs\",\"./dist/duckdb-node-blocking\":\"./dist/duckdb-node-blocking.cjs\",\"./dist/duckdb-node-blocking.cjs\":\"./dist/duckdb-node-blocking.cjs\",\"./dist/duckdb-node-eh.worker.cjs\":\"./dist/duckdb-node-eh.worker.cjs\",\"./dist/duckdb-node-mvp.worker.cjs\":\"./dist/duckdb-node-mvp.worker.cjs\",\"./blocking\":{node:{types:\"./dist/duckdb-node-blocking.d.ts\",require:\"./dist/duckdb-node-blocking.cjs\",import:\"./dist/duckdb-node-blocking.cjs\"},types:\"./dist/duckdb-node-blocking.d.ts\",import:\"./dist/duckdb-node-blocking.mjs\",require:\"./dist/duckdb-node-blocking.cjs\"},\".\":{browser:{types:\"./dist/duckdb-browser.d.ts\",import:\"./dist/duckdb-browser.mjs\",require:\"./dist/duckdb-browser.cjs\"},node:{types:\"./dist/duckdb-node.d.ts\",import:\"./dist/duckdb-node.cjs\",require:\"./dist/duckdb-node.cjs\"},types:\"./dist/duckdb-browser.d.ts\",import:\"./dist/duckdb-browser.mjs\",require:\"./dist/duckdb-browser.cjs\"}}};var v=R.name,M=R.version,I=R.version.split(\".\"),Ce=I[0],We=I[1],ve=I[2];var B=()=>typeof navigator>\"u\",G=()=>B()?\"node\":navigator.userAgent,Ge=()=>G().includes(\"Firefox\"),xe=()=>/^((?!chrome|android).)*safari/i.test(G());function He(){let s=\"https://cdn.jsdelivr.net/npm/\".concat(v,\"@\").concat(M,\"/dist/\");return{mvp:{mainModule:\"\".concat(s,\"duckdb-mvp.wasm\"),mainWorker:\"\".concat(s,\"duckdb-browser-mvp.worker.js\")},eh:{mainModule:\"\".concat(s,\"duckdb-eh.wasm\"),mainWorker:\"\".concat(s,\"duckdb-browser-eh.worker.js\")}}}var k=null,y=null,g=null,S=null,N=null;async function ce(){return k==null&&(k=typeof BigInt64Array<\"u\"),y==null&&(y=await U()),g==null&&(g=await W()),S==null&&(S=await C()),N==null&&(N=await f()),{bigInt64Array:k,crossOriginIsolated:B()||globalThis.crossOriginIsolated||!1,wasmExceptions:y,wasmSIMD:S,wasmThreads:g,wasmBulkMemory:N}}async function Qe(s){let e=await ce();if(e.wasmExceptions){if(e.wasmSIMD&&e.wasmThreads&&e.crossOriginIsolated&&s.coi)return{mainModule:s.coi.mainModule,mainWorker:s.coi.mainWorker,pthreadWorker:s.coi.pthreadWorker};if(s.eh)return{mainModule:s.eh.mainModule,mainWorker:s.eh.mainWorker,pthreadWorker:null}}return{mainModule:s.mvp.mainModule,mainWorker:s.mvp.mainWorker,pthreadWorker:null}}var Q=$(H());async function je(s){let e=new Request(s),r=await fetch(e),t=URL.createObjectURL(await r.blob());return new Q.default(t)}export{L as AsyncDuckDB,E as AsyncDuckDBConnection,w as AsyncDuckDBDispatcher,b as AsyncPreparedStatement,p as AsyncResultStreamIterator,A as ConsoleLogger,Z as DuckDBAccessMode,F as DuckDBDataProtocol,te as LogEvent,ee as LogLevel,se as LogOrigin,re as LogTopic,v as PACKAGE_NAME,M as PACKAGE_VERSION,Ce as PACKAGE_VERSION_MAJOR,We as PACKAGE_VERSION_MINOR,ve as PACKAGE_VERSION_PATCH,ne as StatusCode,X as TokenType,P as VoidLogger,D as WorkerRequestType,O as WorkerResponseType,i as WorkerTask,je as createWorker,He as getJsDelivrBundles,_e as getLogEventLabel,pe as getLogLevelLabel,Re as getLogOriginLabel,me as getLogTopicLabel,ce as getPlatformFeatures,Ge as isFirefox,B as isNode,xe as isSafari,Qe as selectBundle};\n//# sourceMappingURL=duckdb-browser.mjs.map\n","/**\n * DuckDB CDN Loader - Handles loading DuckDB from CDN or fallback to JSDelivr\n */\nimport * as duckdb from \"@duckdb/duckdb-wasm\";\nimport type { AsyncDuckDB } from \"@duckdb/duckdb-wasm\";\n\nexport interface DuckDBBundle {\n  mainModule: string;\n  mainWorker: string;\n  pthreadWorker?: string;\n}\n\nexport interface DuckDBConfig {\n  baseUrl: string;\n  hybrid?: boolean;\n  workers?: Record<string, string>;\n  assets?: Record<string, string>;\n  bundles?: Record<string, DuckDBBundle>;\n  fallback?: {\n    strategy: string;\n    note: string;\n  };\n}\n\nexport class DuckDBCDNLoader {\n  private config: DuckDBConfig | null = null;\n  private baseUrl: string;\n\n  constructor(baseUrl?: string) {\n    this.baseUrl = baseUrl || this.detectCDNBaseUrl();\n  }\n\n  /**\n   * Detect the CDN base URL from the current script location\n   */\n  private detectCDNBaseUrl(): string {\n    if (typeof window === 'undefined') return '';\n    \n    // Try to detect from current script tag\n    const scripts = Array.from(document.getElementsByTagName('script'));\n    const currentScript = scripts.find(script => \n      script.src && script.src.includes('dataprism')\n    );\n    \n    if (currentScript) {\n      const url = new URL(currentScript.src);\n      return `${url.protocol}//${url.host}${url.pathname.replace(/\\/[^\\/]*$/, '')}`;\n    }\n    \n    return '';\n  }\n\n  /**\n   * Load DuckDB configuration from CDN\n   */\n  private async loadConfig(): Promise<DuckDBConfig> {\n    if (this.config) return this.config;\n\n    try {\n      const configUrl = `${this.baseUrl}/duckdb-config.json`;\n      const response = await fetch(configUrl);\n      \n      if (!response.ok) {\n        throw new Error(`Failed to load DuckDB config: ${response.status}`);\n      }\n      \n      this.config = await response.json();\n      return this.config;\n    } catch (error) {\n      console.warn('Failed to load DuckDB config from CDN, using fallback');\n      throw error;\n    }\n  }\n\n  /**\n   * Get DuckDB bundles from CDN or fallback to JSDelivr\n   */\n  async getBundles(): Promise<any> {\n    try {\n      // Try to load from CDN first\n      const config = await this.loadConfig();\n      \n      if (config.hybrid) {\n        // Hybrid mode: use JSDelivr for WASM, CDN for workers (if needed)\n        console.log('Using hybrid DuckDB loading (JSDelivr WASM + CDN workers)');\n        return duckdb.getJsDelivrBundles();\n      } else if (config.bundles) {\n        // Full CDN mode: everything from CDN\n        const bundles = Object.entries(config.bundles).map(([name, bundle]) => ({\n          name,\n          mainModule: `${this.baseUrl}/${bundle.mainModule}`,\n          mainWorker: `${this.baseUrl}/${bundle.mainWorker}`,\n          pthreadWorker: bundle.pthreadWorker ? `${this.baseUrl}/${bundle.pthreadWorker}` : undefined\n        }));\n\n        return bundles;\n      } else {\n        throw new Error('Invalid CDN configuration');\n      }\n    } catch (error) {\n      // Fallback to JSDelivr\n      console.log('Using JSDelivr fallback for DuckDB');\n      \n      return duckdb.getJsDelivrBundles();\n    }\n  }\n\n  /**\n   * Select the best bundle for the current environment\n   */\n  async selectBundle(bundles: any[]): Promise<any> {\n    try {\n      // If we have CDN bundles, select based on browser capabilities\n      if (Array.isArray(bundles) && bundles.length > 0) {\n        // Check for SharedArrayBuffer support (for COI bundle)\n        if (typeof SharedArrayBuffer !== 'undefined' && bundles.find(b => b.name === 'coi')) {\n          return bundles.find(b => b.name === 'coi');\n        }\n        \n        // Check for exception handling support\n        if (bundles.find(b => b.name === 'eh')) {\n          return bundles.find(b => b.name === 'eh');\n        }\n        \n        // Fallback to MVP\n        return bundles.find(b => b.name === 'mvp') || bundles[0];\n      }\n      \n      // If using JSDelivr bundles, use their selection logic\n      return await duckdb.selectBundle(bundles);\n    } catch (error) {\n      console.error('Bundle selection failed:', error);\n      throw error;\n    }\n  }\n\n\n  /**\n   * Create DuckDB instance with proper bundle loading\n   */\n  async createDuckDB(): Promise<AsyncDuckDB> {\n    const bundles = await this.getBundles();\n    const bundle = await this.selectBundle(bundles);\n    \n    // Create worker URL\n    const worker_url = URL.createObjectURL(\n      new Blob([`importScripts(\"${bundle.mainWorker}\");`], {\n        type: \"text/javascript\",\n      })\n    );\n\n    const worker = new Worker(worker_url);\n    \n    // Create DuckDB instance\n    const logger = new duckdb.ConsoleLogger();\n    const db = new duckdb.AsyncDuckDB(logger, worker);\n\n    // Initialize with the selected bundle\n    await db.instantiate(bundle.mainModule, bundle.pthreadWorker);\n    \n    return db;\n  }\n}","import { AsyncDuckDB, AsyncDuckDBConnection } from \"@duckdb/duckdb-wasm\";\nimport { QueryMetadata, QueryResult, DataPrismError } from \"./types.js\";\nimport { ErrorHandler } from \"./error-handler.js\";\nimport { DuckDBCDNLoader } from \"./duckdb-cdn-loader.js\";\n\nexport class DuckDBManager {\n  private db: AsyncDuckDB | null = null;\n  private connection: AsyncDuckDBConnection | null = null;\n  private initialized = false;\n  private errorHandler = ErrorHandler.getInstance();\n  private cdnLoader: DuckDBCDNLoader;\n\n  constructor(cdnBaseUrl?: string) {\n    this.cdnLoader = new DuckDBCDNLoader(cdnBaseUrl);\n  }\n\n  async initialize(): Promise<void> {\n    if (this.initialized) return;\n\n    try {\n      // Use CDN loader which handles both CDN and JSDelivr fallback\n      this.db = await this.cdnLoader.createDuckDB();\n      this.connection = await this.db.connect();\n\n      this.initialized = true;\n      console.log(\"DuckDB initialized successfully\");\n    } catch (error) {\n      const dataPrismError = this.errorHandler.handleError(error, \"duckdb\");\n      throw new Error(\n        `DuckDB initialization failed: ${dataPrismError.message}`,\n      );\n    }\n  }\n\n  async query<T = any>(sql: string): Promise<QueryResult<T>> {\n    if (!this.connection) {\n      throw new Error(\"DuckDB not initialized\");\n    }\n\n    const startTime = performance.now();\n\n    try {\n      const result = await this.connection.query(sql);\n      const endTime = performance.now();\n\n      const data = result.toArray().map((row) => row.toJSON()) as T[];\n\n      return {\n        data,\n        metadata: {\n          rowCount: data.length,\n          executionTime: endTime - startTime,\n          memoryUsage: this.getMemoryUsage(),\n        },\n      };\n    } catch (error) {\n      const endTime = performance.now();\n      const dataPrismError = this.errorHandler.handleError(error, \"duckdb\");\n\n      return {\n        data: [],\n        metadata: {\n          rowCount: 0,\n          executionTime: endTime - startTime,\n          memoryUsage: this.getMemoryUsage(),\n        },\n        error: dataPrismError,\n      };\n    }\n  }\n\n  async insertData(tableName: string, data: any[]): Promise<void> {\n    if (!this.connection) {\n      throw new Error(\"DuckDB not initialized\");\n    }\n\n    try {\n      // Drop table if it exists\n      await this.connection.query(`DROP TABLE IF EXISTS ${tableName}`);\n\n      // Register data as a table\n      await this.db!.registerFileText(\n        `${tableName}.json`,\n        JSON.stringify(data),\n      );\n\n      // Create table from JSON file\n      await this.connection.query(`\n        CREATE TABLE ${tableName} AS \n        SELECT * FROM read_json_auto('${tableName}.json')\n      `);\n\n      console.log(\n        `Successfully loaded ${data.length} rows into table ${tableName}`,\n      );\n    } catch (error) {\n      this.errorHandler.handleError(error, \"duckdb\");\n      throw error;\n    }\n  }\n\n  async createTable(\n    tableName: string,\n    schema: Record<string, string>,\n  ): Promise<void> {\n    if (!this.connection) {\n      throw new Error(\"DuckDB not initialized\");\n    }\n\n    try {\n      const columns = Object.entries(schema)\n        .map(([name, type]) => `${name} ${type}`)\n        .join(\", \");\n\n      await this.connection.query(`CREATE TABLE ${tableName} (${columns})`);\n    } catch (error) {\n      this.errorHandler.handleError(error, \"duckdb\");\n      throw error;\n    }\n  }\n\n  async listTables(): Promise<string[]> {\n    if (!this.connection) {\n      throw new Error(\"DuckDB not initialized\");\n    }\n\n    try {\n      const result = await this.connection.query(\"SHOW TABLES\");\n      return result.toArray().map((row) => row.toJSON()[\"name\"] as string);\n    } catch (error) {\n      this.errorHandler.handleError(error, \"duckdb\");\n      return [];\n    }\n  }\n\n  async getTableInfo(tableName: string): Promise<any[]> {\n    if (!this.connection) {\n      throw new Error(\"DuckDB not initialized\");\n    }\n\n    try {\n      const result = await this.connection.query(`DESCRIBE ${tableName}`);\n      return result.toArray().map((row) => row.toJSON());\n    } catch (error) {\n      this.errorHandler.handleError(error, \"duckdb\");\n      return [];\n    }\n  }\n\n  private getMemoryUsage(): number {\n    // Estimate memory usage - in real implementation, this would be more sophisticated\n    return (performance as any).memory?.usedJSHeapSize || 0;\n  }\n\n  async close(): Promise<void> {\n    if (this.connection) {\n      await this.connection.close();\n      this.connection = null;\n    }\n    if (this.db) {\n      await this.db.terminate();\n      this.db = null;\n    }\n    this.initialized = false;\n  }\n\n  isInitialized(): boolean {\n    return this.initialized;\n  }\n}\n","import { DataPrismError } from \"./types.js\";\n\nexport type DependencyState = \"loading\" | \"ready\" | \"error\" | \"timeout\" | \"initializing\";\n\nexport interface DependencyMetadata {\n  name: string;\n  version?: string;\n  state: DependencyState;\n  loadStartTime: number;\n  loadEndTime?: number;\n  error?: DataPrismError;\n  retryCount: number;\n  maxRetries: number;\n  timeoutMs: number;\n  requiredFor: string[];\n  module?: any;\n}\n\nexport interface DependencyLoadOptions {\n  timeout?: number;\n  maxRetries?: number;\n  retryDelay?: number;\n  required?: boolean;\n  preload?: boolean;\n}\n\nexport interface DependencyEvent {\n  type: \"loading\" | \"ready\" | \"error\" | \"timeout\" | \"retry\";\n  dependency: string;\n  metadata: DependencyMetadata;\n  error?: DataPrismError;\n}\n\nexport type DependencyEventHandler = (event: DependencyEvent) => void;\n\nexport class DependencyRegistry {\n  private static instance: DependencyRegistry;\n  private dependencies = new Map<string, DependencyMetadata>();\n  private eventHandlers: DependencyEventHandler[] = [];\n  private loadingPromises = new Map<string, Promise<any>>();\n  private timeouts = new Map<string, NodeJS.Timeout>();\n\n  private constructor() {}\n\n  static getInstance(): DependencyRegistry {\n    if (!DependencyRegistry.instance) {\n      DependencyRegistry.instance = new DependencyRegistry();\n    }\n    return DependencyRegistry.instance;\n  }\n\n  registerDependency(\n    name: string,\n    options: DependencyLoadOptions = {}\n  ): DependencyMetadata {\n    const metadata: DependencyMetadata = {\n      name,\n      state: \"initializing\",\n      loadStartTime: Date.now(),\n      retryCount: 0,\n      maxRetries: options.maxRetries || 3,\n      timeoutMs: options.timeout || 30000,\n      requiredFor: [],\n      module: null,\n    };\n\n    this.dependencies.set(name, metadata);\n    this.emitEvent(\"loading\", name, metadata);\n\n    return metadata;\n  }\n\n  async loadDependency(\n    name: string,\n    loader: () => Promise<any>,\n    options: DependencyLoadOptions = {}\n  ): Promise<any> {\n    if (this.loadingPromises.has(name)) {\n      return this.loadingPromises.get(name);\n    }\n\n    const metadata = this.dependencies.get(name) || this.registerDependency(name, options);\n    \n    const loadPromise = this.executeLoad(name, loader, options);\n    this.loadingPromises.set(name, loadPromise);\n\n    return loadPromise;\n  }\n\n  private async executeLoad(\n    name: string,\n    loader: () => Promise<any>,\n    options: DependencyLoadOptions\n  ): Promise<any> {\n    const metadata = this.dependencies.get(name)!;\n    \n    return new Promise((resolve, reject) => {\n      const timeoutId = setTimeout(() => {\n        this.setState(name, \"timeout\");\n        const error: DataPrismError = {\n          message: `Dependency '${name}' failed to load within ${metadata.timeoutMs}ms`,\n          code: \"DEPENDENCY_TIMEOUT\",\n          source: \"orchestration\",\n        };\n        metadata.error = error;\n        this.emitEvent(\"timeout\", name, metadata, error);\n        reject(error);\n      }, metadata.timeoutMs);\n\n      this.timeouts.set(name, timeoutId);\n\n      // Execute the async loading logic\n      this.performLoad(name, loader, options, timeoutId)\n        .then((module) => {\n          clearTimeout(timeoutId);\n          this.timeouts.delete(name);\n          \n          metadata.module = module;\n          metadata.loadEndTime = Date.now();\n          metadata.version = this.extractVersion(module);\n          this.setState(name, \"ready\");\n          \n          this.emitEvent(\"ready\", name, metadata);\n          resolve(module);\n        })\n        .catch((error) => {\n          clearTimeout(timeoutId);\n          this.timeouts.delete(name);\n          \n          const dataPrismError: DataPrismError = {\n            message: `Failed to load dependency '${name}': ${error}`,\n            code: \"DEPENDENCY_LOAD_ERROR\",\n            source: \"orchestration\",\n          };\n          \n          metadata.error = dataPrismError;\n          \n          if (metadata.retryCount < metadata.maxRetries) {\n            metadata.retryCount++;\n            this.emitEvent(\"retry\", name, metadata, dataPrismError);\n            \n            const retryDelay = options.retryDelay || 1000 * metadata.retryCount;\n            setTimeout(() => {\n              this.executeLoad(name, loader, options).then(resolve).catch(reject);\n            }, retryDelay);\n          } else {\n            this.setState(name, \"error\");\n            this.emitEvent(\"error\", name, metadata, dataPrismError);\n            reject(dataPrismError);\n          }\n        });\n    });\n  }\n\n  private async performLoad(\n    name: string,\n    loader: () => Promise<any>,\n    options: DependencyLoadOptions,\n    timeoutId: NodeJS.Timeout\n  ): Promise<any> {\n    this.setState(name, \"loading\");\n    return await loader();\n  }\n\n  private extractVersion(module: any): string | undefined {\n    if (!module) return undefined;\n    \n    // Try common version extraction patterns\n    if (module.version) return module.version;\n    if (module.VERSION) return module.VERSION;\n    if (module.get_version && typeof module.get_version === 'function') {\n      try {\n        return module.get_version();\n      } catch (e) {\n        return undefined;\n      }\n    }\n    \n    // For Apache Arrow, try to extract version from build info\n    if (module.Table && module.RecordBatch) {\n      return \"17.0.0\"; // Known Arrow version from analysis\n    }\n    \n    return undefined;\n  }\n\n  private setState(name: string, state: DependencyState): void {\n    const metadata = this.dependencies.get(name);\n    if (metadata) {\n      metadata.state = state;\n      this.dependencies.set(name, metadata);\n    }\n  }\n\n  private emitEvent(\n    type: DependencyEvent[\"type\"],\n    dependency: string,\n    metadata: DependencyMetadata,\n    error?: DataPrismError\n  ): void {\n    const event: DependencyEvent = {\n      type,\n      dependency,\n      metadata: { ...metadata },\n      error,\n    };\n\n    this.eventHandlers.forEach(handler => {\n      try {\n        handler(event);\n      } catch (e) {\n        console.error(\"Error in dependency event handler:\", e);\n      }\n    });\n  }\n\n  async waitForDependency(\n    name: string,\n    timeoutMs: number = 30000\n  ): Promise<any> {\n    const metadata = this.dependencies.get(name);\n    \n    if (!metadata) {\n      throw new Error(`Dependency '${name}' not registered`);\n    }\n\n    if (metadata.state === \"ready\") {\n      return metadata.module;\n    }\n\n    if (metadata.state === \"error\") {\n      throw metadata.error || new Error(`Dependency '${name}' failed to load`);\n    }\n\n    return new Promise((resolve, reject) => {\n      const timeoutId = setTimeout(() => {\n        reject(new Error(`Timeout waiting for dependency '${name}'`));\n      }, timeoutMs);\n\n      const handler = (event: DependencyEvent) => {\n        if (event.dependency === name) {\n          if (event.type === \"ready\") {\n            clearTimeout(timeoutId);\n            resolve(event.metadata.module);\n          } else if (event.type === \"error\" || event.type === \"timeout\") {\n            clearTimeout(timeoutId);\n            reject(event.error || new Error(`Dependency '${name}' failed to load`));\n          }\n        }\n      };\n\n      this.addEventListener(handler);\n      \n      // Clean up handler after timeout\n      setTimeout(() => {\n        this.removeEventListener(handler);\n      }, timeoutMs + 1000);\n    });\n  }\n\n  async waitForReady(\n    dependencies: string[] = [],\n    timeoutMs: number = 30000\n  ): Promise<Record<string, any>> {\n    const targetDeps = dependencies.length > 0 \n      ? dependencies \n      : Array.from(this.dependencies.keys());\n\n    const results: Record<string, any> = {};\n    \n    await Promise.all(\n      targetDeps.map(async (name) => {\n        try {\n          results[name] = await this.waitForDependency(name, timeoutMs);\n        } catch (error) {\n          throw new Error(`Failed to wait for dependency '${name}': ${error}`);\n        }\n      })\n    );\n\n    return results;\n  }\n\n  isDependencyReady(name: string): boolean {\n    const metadata = this.dependencies.get(name);\n    return metadata?.state === \"ready\";\n  }\n\n  getDependencyState(name: string): DependencyState | undefined {\n    return this.dependencies.get(name)?.state;\n  }\n\n  getDependencyMetadata(name: string): DependencyMetadata | undefined {\n    const metadata = this.dependencies.get(name);\n    return metadata ? { ...metadata } : undefined;\n  }\n\n  getAllDependencies(): DependencyMetadata[] {\n    return Array.from(this.dependencies.values()).map(metadata => ({ ...metadata }));\n  }\n\n  getReadyDependencies(): string[] {\n    return Array.from(this.dependencies.entries())\n      .filter(([_, metadata]) => metadata.state === \"ready\")\n      .map(([name, _]) => name);\n  }\n\n  getFailedDependencies(): string[] {\n    return Array.from(this.dependencies.entries())\n      .filter(([_, metadata]) => metadata.state === \"error\")\n      .map(([name, _]) => name);\n  }\n\n  addEventListener(handler: DependencyEventHandler): void {\n    this.eventHandlers.push(handler);\n  }\n\n  removeEventListener(handler: DependencyEventHandler): void {\n    const index = this.eventHandlers.indexOf(handler);\n    if (index > -1) {\n      this.eventHandlers.splice(index, 1);\n    }\n  }\n\n  async preloadDependencies(dependencies: string[]): Promise<void> {\n    const preloadPromises = dependencies.map(async (name) => {\n      const metadata = this.dependencies.get(name);\n      if (!metadata || metadata.state === \"initializing\") {\n        throw new Error(`Cannot preload unregistered dependency '${name}'`);\n      }\n      \n      if (metadata.state === \"ready\") {\n        return metadata.module;\n      }\n      \n      return this.waitForDependency(name);\n    });\n\n    await Promise.all(preloadPromises);\n  }\n\n  clearDependency(name: string): void {\n    const timeoutId = this.timeouts.get(name);\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n      this.timeouts.delete(name);\n    }\n    \n    this.dependencies.delete(name);\n    this.loadingPromises.delete(name);\n  }\n\n  clearAll(): void {\n    this.timeouts.forEach((timeoutId) => clearTimeout(timeoutId));\n    this.timeouts.clear();\n    this.dependencies.clear();\n    this.loadingPromises.clear();\n    this.eventHandlers.length = 0;\n  }\n\n  getHealthStatus(): {\n    totalDependencies: number;\n    readyCount: number;\n    loadingCount: number;\n    errorCount: number;\n    timeoutCount: number;\n    healthScore: number;\n  } {\n    const all = this.getAllDependencies();\n    const ready = all.filter(d => d.state === \"ready\").length;\n    const loading = all.filter(d => d.state === \"loading\").length;\n    const error = all.filter(d => d.state === \"error\").length;\n    const timeout = all.filter(d => d.state === \"timeout\").length;\n    \n    const healthScore = all.length > 0 ? (ready / all.length) * 100 : 100;\n    \n    return {\n      totalDependencies: all.length,\n      readyCount: ready,\n      loadingCount: loading,\n      errorCount: error,\n      timeoutCount: timeout,\n      healthScore,\n    };\n  }\n}","import { DependencyRegistry } from \"./dependency-registry.js\";\nimport { DataPrismError } from \"./types.js\";\n\nexport interface ArrowModule {\n  Table: any;\n  RecordBatch: any;\n  RecordBatchReader: any;\n  Schema: any;\n  Field: any;\n  Vector: any;\n  Type: any;\n  util: any;\n  version?: string;\n}\n\nexport class ArrowLoader {\n  private static instance: ArrowLoader;\n  private registry: DependencyRegistry;\n  private arrowModule: ArrowModule | null = null;\n\n  private constructor() {\n    this.registry = DependencyRegistry.getInstance();\n  }\n\n  static getInstance(): ArrowLoader {\n    if (!ArrowLoader.instance) {\n      ArrowLoader.instance = new ArrowLoader();\n    }\n    return ArrowLoader.instance;\n  }\n\n  async loadArrow(): Promise<ArrowModule> {\n    if (this.arrowModule) {\n      return this.arrowModule;\n    }\n\n    try {\n      const module = await this.registry.loadDependency(\n        \"apache-arrow\",\n        () => this.loadArrowModule(),\n        {\n          timeout: 15000,\n          maxRetries: 3,\n          retryDelay: 2000,\n          required: true,\n        }\n      );\n\n      this.arrowModule = module;\n      return module;\n    } catch (error) {\n      const dataPrismError: DataPrismError = {\n        message: `Failed to load Apache Arrow: ${error}`,\n        code: \"ARROW_LOAD_ERROR\",\n        source: \"orchestration\",\n      };\n      throw dataPrismError;\n    }\n  }\n\n  private async loadArrowModule(): Promise<ArrowModule> {\n    // Try multiple loading strategies based on the environment\n    const loadStrategies = [\n      () => this.loadFromGlobal(),\n      () => this.loadFromImport(),\n      () => this.loadFromCDN(),\n      () => this.loadFromFallback(),\n    ];\n\n    let lastError: Error | null = null;\n\n    for (const strategy of loadStrategies) {\n      try {\n        const module = await strategy();\n        if (this.validateArrowModule(module)) {\n          return module;\n        }\n      } catch (error) {\n        lastError = error as Error;\n        continue;\n      }\n    }\n\n    throw new Error(\n      `All Arrow loading strategies failed. Last error: ${lastError?.message}`\n    );\n  }\n\n  private async loadFromGlobal(): Promise<ArrowModule> {\n    // Check if Arrow is available globally (from externalized build)\n    if (typeof window !== \"undefined\" && (window as any).Arrow) {\n      return (window as any).Arrow;\n    }\n    throw new Error(\"Arrow not found in global scope\");\n  }\n\n  private async loadFromImport(): Promise<ArrowModule> {\n    // Try dynamic import\n    try {\n      const module = await import(\"apache-arrow\");\n      return module;\n    } catch (error) {\n      throw new Error(`Dynamic import failed: ${error}`);\n    }\n  }\n\n  private async loadFromCDN(): Promise<ArrowModule> {\n    // Load from CDN as fallback\n    return new Promise((resolve, reject) => {\n      const script = document.createElement(\"script\");\n      script.src = \"https://cdn.jsdelivr.net/npm/apache-arrow@17.0.0/dist/Arrow.dom.min.js\";\n      script.onload = () => {\n        if ((window as any).Arrow) {\n          resolve((window as any).Arrow);\n        } else {\n          reject(new Error(\"Arrow not available after CDN load\"));\n        }\n      };\n      script.onerror = () => {\n        reject(new Error(\"Failed to load Arrow from CDN\"));\n      };\n      document.head.appendChild(script);\n    });\n  }\n\n  private async loadFromFallback(): Promise<ArrowModule> {\n    // Final fallback - try alternative CDN\n    return new Promise((resolve, reject) => {\n      const script = document.createElement(\"script\");\n      script.src = \"https://unpkg.com/apache-arrow@17.0.0/dist/Arrow.dom.min.js\";\n      script.onload = () => {\n        if ((window as any).Arrow) {\n          resolve((window as any).Arrow);\n        } else {\n          reject(new Error(\"Arrow not available after fallback CDN load\"));\n        }\n      };\n      script.onerror = () => {\n        reject(new Error(\"Failed to load Arrow from fallback CDN\"));\n      };\n      document.head.appendChild(script);\n    });\n  }\n\n  private validateArrowModule(module: any): boolean {\n    if (!module) return false;\n\n    // Check for essential Arrow components\n    const requiredComponents = [\n      \"Table\",\n      \"RecordBatch\", \n      \"RecordBatchReader\",\n      \"Schema\",\n      \"Field\",\n      \"Vector\",\n      \"Type\",\n    ];\n\n    return requiredComponents.every(component => \n      typeof module[component] !== \"undefined\"\n    );\n  }\n\n  async waitForArrow(timeoutMs: number = 30000): Promise<ArrowModule> {\n    try {\n      return await this.registry.waitForDependency(\"apache-arrow\", timeoutMs);\n    } catch (error) {\n      // If not already loaded, try to load it\n      return await this.loadArrow();\n    }\n  }\n\n  isArrowReady(): boolean {\n    return this.registry.isDependencyReady(\"apache-arrow\");\n  }\n\n  getArrowModule(): ArrowModule | null {\n    return this.arrowModule;\n  }\n\n  async preloadArrow(): Promise<void> {\n    if (!this.isArrowReady()) {\n      await this.loadArrow();\n    }\n  }\n\n  getArrowVersion(): string | undefined {\n    if (this.arrowModule) {\n      return this.arrowModule.version || \"17.0.0\";\n    }\n    return undefined;\n  }\n\n  createArrowError(message: string, originalError?: Error): DataPrismError {\n    return {\n      message: `Arrow Error: ${message}${originalError ? ` - ${originalError.message}` : \"\"}`,\n      code: \"ARROW_ERROR\",\n      source: \"orchestration\",\n    };\n  }\n\n  async createRecordBatchReader(data: Uint8Array): Promise<any> {\n    const arrow = await this.waitForArrow();\n    \n    try {\n      return arrow.RecordBatchReader.from(data);\n    } catch (error) {\n      throw this.createArrowError(\n        \"Failed to create RecordBatchReader\",\n        error as Error\n      );\n    }\n  }\n\n  async createTable(data: any): Promise<any> {\n    const arrow = await this.waitForArrow();\n    \n    try {\n      return arrow.Table.from(data);\n    } catch (error) {\n      throw this.createArrowError(\n        \"Failed to create Arrow Table\",\n        error as Error\n      );\n    }\n  }\n\n  async validateArrowData(data: any): Promise<boolean> {\n    try {\n      await this.waitForArrow();\n      // Basic validation - check if data can be processed by Arrow\n      if (!data) return false;\n      \n      // Check for Arrow-compatible data structures\n      if (data instanceof Uint8Array) return true;\n      if (Array.isArray(data)) return true;\n      if (data.constructor && data.constructor.name === \"Table\") return true;\n      if (data.constructor && data.constructor.name === \"RecordBatch\") return true;\n      \n      return false;\n    } catch (error) {\n      return false;\n    }\n  }\n}","import { DuckDBManager } from \"./duckdb-manager.js\";\nimport {\n  QueryResult,\n  DataPrismConfig,\n  EngineStatus,\n  PerformanceMetrics,\n} from \"./types.js\";\nimport { ErrorHandler } from \"./error-handler.js\";\nimport { DependencyRegistry } from \"./dependency-registry.js\";\nimport { ArrowLoader } from \"./arrow-loader.js\";\n\n// WASM module will be available after build\ninterface WasmModule {\n  QueryEngine: any;\n  init_panic_hook: () => void;\n  get_version: () => string;\n  get_build_info: () => any;\n}\n\nexport class DataPrismEngine {\n  private duckdb: DuckDBManager;\n  private wasmEngine: any = null;\n  private wasmModule: WasmModule | null = null;\n  private config: DataPrismConfig;\n  private initialized = false;\n  private startTime = Date.now();\n  private errorHandler = ErrorHandler.getInstance();\n  private dependencyRegistry = DependencyRegistry.getInstance();\n  private arrowLoader = ArrowLoader.getInstance();\n  private metrics: PerformanceMetrics = {\n    queryCount: 0,\n    totalExecutionTime: 0,\n    averageResponseTime: 0,\n    memoryPeakUsage: 0,\n  };\n\n  constructor(config: Partial<DataPrismConfig> = {}) {\n    this.config = {\n      enableWasmOptimizations: true,\n      maxMemoryMB: 4096,\n      queryTimeoutMs: 30000,\n      logLevel: \"info\",\n      ...config,\n    };\n    this.duckdb = new DuckDBManager();\n  }\n\n  async initialize(): Promise<void> {\n    if (this.initialized) return;\n\n    try {\n      // Initialize dependencies in parallel for better performance\n      const initPromises = [];\n\n      // Initialize DuckDB\n      initPromises.push(\n        this.dependencyRegistry.loadDependency(\n          \"duckdb\",\n          () => this.duckdb.initialize(),\n          { timeout: 30000, maxRetries: 3 }\n        )\n      );\n\n      // Initialize Arrow\n      initPromises.push(\n        this.arrowLoader.loadArrow().catch(error => {\n          this.log(\"warn\", `Arrow initialization failed: ${error.message}`);\n          return null;\n        })\n      );\n\n      // Initialize WASM module if available\n      if (this.config.enableWasmOptimizations) {\n        initPromises.push(\n          this.dependencyRegistry.loadDependency(\n            \"wasm-core\",\n            () => this.initializeWasm(),\n            { timeout: 20000, maxRetries: 2 }\n          ).catch(error => {\n            this.log(\"warn\", `WASM initialization failed: ${error.message}`);\n            this.config.enableWasmOptimizations = false;\n            return null;\n          })\n        );\n      }\n\n      // Wait for all dependencies to load\n      await Promise.allSettled(initPromises);\n\n      this.initialized = true;\n      this.log(\"info\", \"DataPrism Engine initialized successfully\");\n      \n      // Log dependency status\n      this.logDependencyStatus();\n    } catch (error) {\n      this.errorHandler.handleError(error, \"orchestration\");\n      throw error;\n    }\n  }\n\n  private async initializeWasm(): Promise<void> {\n    // Skip WASM initialization during build process\n    if (typeof window === \"undefined\") {\n      throw new Error(\"WASM not available in Node environment\");\n    }\n\n    try {\n      // Dynamic import the WASM module - construct path dynamically to avoid TS resolution\n      const corePackageName = \"@dataprism/core\";\n      const wasmModule = await import(/* @vite-ignore */ corePackageName);\n\n      // Try to initialize with public WASM file first, then fallback\n      try {\n        await wasmModule.default(\"/wasm/dataprism_core_bg.wasm\");\n      } catch (error) {\n        // Fallback to default initialization\n        await wasmModule.default();\n      }\n\n      wasmModule.init_panic_hook();\n\n      this.wasmModule = wasmModule;\n      this.wasmEngine = new wasmModule.QueryEngine();\n\n      this.log(\"info\", `WASM module version: ${wasmModule.get_version()}`);\n    } catch (error) {\n      throw new Error(`WASM initialization failed: ${error}`);\n    }\n  }\n\n  async query(sql: string): Promise<QueryResult> {\n    if (!this.initialized) {\n      throw new Error(\"Engine not initialized\");\n    }\n\n    const startTime = performance.now();\n    this.metrics.queryCount++;\n\n    try {\n      // Route query through DuckDB for analytical processing\n      const result = await this.duckdb.query(sql);\n\n      // Apply WASM optimizations if enabled and beneficial\n      if (\n        this.config.enableWasmOptimizations &&\n        this.wasmEngine &&\n        this.shouldUseWasmOptimization(result)\n      ) {\n        return await this.applyWasmOptimizations(result);\n      }\n\n      this.updateMetrics(\n        performance.now() - startTime,\n        result.metadata.memoryUsage,\n      );\n      return result;\n    } catch (error) {\n      this.errorHandler.handleError(error, \"orchestration\");\n      throw error;\n    }\n  }\n\n  async loadData(data: any[], tableName: string = \"main_table\"): Promise<void> {\n    if (!this.initialized) {\n      throw new Error(\"Engine not initialized\");\n    }\n\n    try {\n      await this.duckdb.insertData(tableName, data);\n      this.log(\"info\", `Loaded ${data.length} rows into table ${tableName}`);\n    } catch (error) {\n      this.errorHandler.handleError(error, \"orchestration\");\n      throw error;\n    }\n  }\n\n  async createTable(\n    tableName: string,\n    schema: Record<string, string>,\n  ): Promise<void> {\n    if (!this.initialized) {\n      throw new Error(\"Engine not initialized\");\n    }\n\n    await this.duckdb.createTable(tableName, schema);\n  }\n\n  async listTables(): Promise<string[]> {\n    if (!this.initialized) {\n      throw new Error(\"Engine not initialized\");\n    }\n\n    return await this.duckdb.listTables();\n  }\n\n  async getTableInfo(tableName: string): Promise<any[]> {\n    if (!this.initialized) {\n      throw new Error(\"Engine not initialized\");\n    }\n\n    return await this.duckdb.getTableInfo(tableName);\n  }\n\n  private shouldUseWasmOptimization(result: QueryResult): boolean {\n    // Determine if WASM optimizations would be beneficial\n    // For example, large result sets or complex transformations\n    return result.data.length > 1000 || result.metadata.executionTime > 1000;\n  }\n\n  private async applyWasmOptimizations(\n    result: QueryResult,\n  ): Promise<QueryResult> {\n    if (!this.wasmEngine) {\n      return result;\n    }\n\n    try {\n      // Convert data to bytes for WASM processing\n      const dataBytes = new TextEncoder().encode(JSON.stringify(result.data));\n\n      // Process through WASM engine\n      const wasmResult = await this.wasmEngine.process_data(dataBytes);\n\n      return {\n        data: JSON.parse(wasmResult.data),\n        metadata: {\n          rowCount: wasmResult.row_count,\n          executionTime:\n            result.metadata.executionTime + wasmResult.execution_time_ms,\n          memoryUsage: Math.max(\n            result.metadata.memoryUsage,\n            wasmResult.memory_used_bytes,\n          ),\n        },\n      };\n    } catch (error) {\n      this.log(\n        \"warn\",\n        `WASM optimization failed, falling back to original result: ${error}`,\n      );\n      return result;\n    }\n  }\n\n  private updateMetrics(executionTime: number, memoryUsage: number): void {\n    this.metrics.totalExecutionTime += executionTime;\n    this.metrics.averageResponseTime =\n      this.metrics.totalExecutionTime / this.metrics.queryCount;\n    this.metrics.memoryPeakUsage = Math.max(\n      this.metrics.memoryPeakUsage,\n      memoryUsage,\n    );\n  }\n\n  getMemoryUsage(): number {\n    if (this.wasmEngine) {\n      return this.wasmEngine.get_memory_usage();\n    }\n    return (performance as any).memory?.usedJSHeapSize || 0;\n  }\n\n  getMetrics(): PerformanceMetrics {\n    return { ...this.metrics };\n  }\n\n  getStatus(): EngineStatus {\n    return {\n      initialized: this.initialized,\n      wasmModuleLoaded: !!this.wasmModule,\n      duckdbConnected: this.duckdb.isInitialized(),\n      memoryUsage: this.getMemoryUsage(),\n      uptime: Date.now() - this.startTime,\n      dependencies: this.getDependencyStatus(),\n      dependencyHealth: this.getDependencyHealth(),\n    };\n  }\n\n  getVersion(): string {\n    return this.wasmModule?.get_version() || \"0.1.0\";\n  }\n\n  getBuildInfo(): any {\n    return (\n      this.wasmModule?.get_build_info() || {\n        version: \"0.1.0\",\n        source: \"typescript\",\n      }\n    );\n  }\n\n  private log(level: string, message: string): void {\n    if (\n      this.config.logLevel === \"debug\" ||\n      (this.config.logLevel === \"info\" && level !== \"debug\") ||\n      (this.config.logLevel === \"warn\" &&\n        (level === \"warn\" || level === \"error\")) ||\n      (this.config.logLevel === \"error\" && level === \"error\")\n    ) {\n      console.log(`[DataPrism:${level.toUpperCase()}] ${message}`);\n    }\n  }\n\n  async waitForReady(dependencies?: string[], timeoutMs: number = 30000): Promise<void> {\n    if (!this.initialized) {\n      await this.initialize();\n    }\n\n    try {\n      await this.dependencyRegistry.waitForReady(dependencies, timeoutMs);\n      this.log(\"info\", \"All dependencies are ready\");\n    } catch (error) {\n      const healthStatus = this.dependencyRegistry.getHealthStatus();\n      this.log(\"error\", `Dependency readiness check failed. Health: ${healthStatus.healthScore}%`);\n      throw error;\n    }\n  }\n\n  async waitForDuckDB(timeoutMs: number = 30000): Promise<void> {\n    await this.dependencyRegistry.waitForDependency(\"duckdb\", timeoutMs);\n  }\n\n  async waitForArrow(timeoutMs: number = 30000): Promise<void> {\n    await this.arrowLoader.waitForArrow(timeoutMs);\n  }\n\n  async waitForWasm(timeoutMs: number = 20000): Promise<void> {\n    if (this.config.enableWasmOptimizations) {\n      await this.dependencyRegistry.waitForDependency(\"wasm-core\", timeoutMs);\n    }\n  }\n\n  async preloadDependencies(dependencies: string[] = []): Promise<void> {\n    const targetDeps = dependencies.length > 0 ? dependencies : [\"duckdb\", \"apache-arrow\"];\n    \n    if (this.config.enableWasmOptimizations) {\n      targetDeps.push(\"wasm-core\");\n    }\n\n    try {\n      await this.dependencyRegistry.preloadDependencies(targetDeps);\n      this.log(\"info\", `Preloaded dependencies: ${targetDeps.join(\", \")}`);\n    } catch (error) {\n      this.log(\"warn\", `Failed to preload some dependencies: ${error}`);\n    }\n  }\n\n  isReady(): boolean {\n    return this.initialized && this.dependencyRegistry.isDependencyReady(\"duckdb\");\n  }\n\n  getDependencyStatus(): {\n    duckdb: boolean;\n    arrow: boolean;\n    wasm: boolean;\n    overall: boolean;\n  } {\n    return {\n      duckdb: this.dependencyRegistry.isDependencyReady(\"duckdb\"),\n      arrow: this.arrowLoader.isArrowReady(),\n      wasm: this.config.enableWasmOptimizations ? \n        this.dependencyRegistry.isDependencyReady(\"wasm-core\") : true,\n      overall: this.isReady(),\n    };\n  }\n\n  getDependencyHealth(): any {\n    return this.dependencyRegistry.getHealthStatus();\n  }\n\n  private logDependencyStatus(): void {\n    const status = this.getDependencyStatus();\n    const health = this.getDependencyHealth();\n    \n    this.log(\"info\", `Dependency Status - DuckDB: ${status.duckdb}, Arrow: ${status.arrow}, WASM: ${status.wasm}`);\n    this.log(\"info\", `Overall Health Score: ${health.healthScore}%`);\n    \n    if (health.errorCount > 0) {\n      const failedDeps = this.dependencyRegistry.getFailedDependencies();\n      this.log(\"warn\", `Failed dependencies: ${failedDeps.join(\", \")}`);\n    }\n  }\n\n  async close(): Promise<void> {\n    await this.duckdb.close();\n    this.wasmEngine = null;\n    this.wasmModule = null;\n    this.initialized = false;\n    this.dependencyRegistry.clearAll();\n    this.log(\"info\", \"DataPrism Engine closed\");\n  }\n}\n","import { DataPrismError } from \"./types.js\";\nimport { DependencyRegistry, DependencyMetadata } from \"./dependency-registry.js\";\n\nexport interface EnhancedError extends DataPrismError {\n  dependency?: string;\n  retryCount?: number;\n  troubleshooting?: string[];\n  context?: {\n    loadTime?: number;\n    browserInfo?: string;\n    networkStatus?: string;\n    cdnStatus?: string;\n  };\n}\n\nexport class DependencyErrorHandler {\n  private static instance: DependencyErrorHandler;\n  private registry: DependencyRegistry;\n\n  private constructor() {\n    this.registry = DependencyRegistry.getInstance();\n  }\n\n  static getInstance(): DependencyErrorHandler {\n    if (!DependencyErrorHandler.instance) {\n      DependencyErrorHandler.instance = new DependencyErrorHandler();\n    }\n    return DependencyErrorHandler.instance;\n  }\n\n  createDependencyError(\n    dependency: string,\n    originalError: Error,\n    metadata?: DependencyMetadata\n  ): EnhancedError {\n    const enhancedError: EnhancedError = {\n      message: this.createContextualMessage(dependency, originalError, metadata),\n      code: this.getDependencyErrorCode(dependency, originalError),\n      source: \"orchestration\",\n      dependency,\n      retryCount: metadata?.retryCount || 0,\n      troubleshooting: this.getTroubleshootingSteps(dependency, originalError),\n      context: this.gatherContext(dependency, metadata),\n    };\n\n    return enhancedError;\n  }\n\n  private createContextualMessage(\n    dependency: string,\n    originalError: Error,\n    metadata?: DependencyMetadata\n  ): string {\n    const baseMessage = `Failed to load dependency '${dependency}': ${originalError.message}`;\n    \n    if (!metadata) {\n      return baseMessage;\n    }\n\n    const loadTime = metadata.loadEndTime ? \n      metadata.loadEndTime - metadata.loadStartTime : \n      Date.now() - metadata.loadStartTime;\n\n    let contextMessage = baseMessage;\n    \n    if (metadata.retryCount > 0) {\n      contextMessage += ` (Retry ${metadata.retryCount}/${metadata.maxRetries})`;\n    }\n\n    if (loadTime > 10000) {\n      contextMessage += ` - Loading took ${Math.round(loadTime / 1000)}s`;\n    }\n\n    if (metadata.requiredFor.length > 0) {\n      contextMessage += ` - Required for: ${metadata.requiredFor.join(\", \")}`;\n    }\n\n    return contextMessage;\n  }\n\n  private getDependencyErrorCode(dependency: string, error: Error): string {\n    const errorMessage = error.message.toLowerCase();\n    \n    if (errorMessage.includes(\"timeout\")) {\n      return `${dependency.toUpperCase()}_TIMEOUT`;\n    }\n    \n    if (errorMessage.includes(\"network\") || errorMessage.includes(\"fetch\")) {\n      return `${dependency.toUpperCase()}_NETWORK_ERROR`;\n    }\n    \n    if (errorMessage.includes(\"not found\") || errorMessage.includes(\"404\")) {\n      return `${dependency.toUpperCase()}_NOT_FOUND`;\n    }\n    \n    if (errorMessage.includes(\"cors\") || errorMessage.includes(\"cross-origin\")) {\n      return `${dependency.toUpperCase()}_CORS_ERROR`;\n    }\n    \n    if (errorMessage.includes(\"import\") || errorMessage.includes(\"module\")) {\n      return `${dependency.toUpperCase()}_IMPORT_ERROR`;\n    }\n    \n    return `${dependency.toUpperCase()}_LOAD_ERROR`;\n  }\n\n  private getTroubleshootingSteps(dependency: string, error: Error): string[] {\n    const steps: string[] = [];\n    const errorMessage = error.message.toLowerCase();\n\n    // Common troubleshooting steps\n    steps.push(\"Check your internet connection\");\n    steps.push(\"Verify the dependency version is compatible\");\n\n    // Dependency-specific troubleshooting\n    switch (dependency) {\n      case \"apache-arrow\":\n        steps.push(\"Ensure Apache Arrow is available in your build configuration\");\n        steps.push(\"Check if Arrow is properly externalized in your bundler\");\n        steps.push(\"Verify CORS headers if loading from CDN\");\n        steps.push(\"Try loading from a different CDN (JSDelivr, unpkg)\");\n        \n        if (errorMessage.includes(\"recordbatchreader\")) {\n          steps.push(\"The RecordBatchReader is not available - Arrow may not be fully loaded\");\n          steps.push(\"Try calling await engine.waitForArrow() before using Arrow features\");\n        }\n        break;\n\n      case \"duckdb\":\n        steps.push(\"Check if DuckDB WASM files are accessible\");\n        steps.push(\"Verify SharedArrayBuffer is available for multi-threading\");\n        steps.push(\"Check COEP/COOP headers for cross-origin isolation\");\n        steps.push(\"Try fallback to single-threaded mode\");\n        break;\n\n      case \"wasm-core\":\n        steps.push(\"Verify WASM files are built and accessible\");\n        steps.push(\"Check if WebAssembly is supported in your browser\");\n        steps.push(\"Ensure WASM files are served with correct MIME type\");\n        break;\n    }\n\n    // Error-specific troubleshooting\n    if (errorMessage.includes(\"timeout\")) {\n      steps.push(\"Increase timeout duration in configuration\");\n      steps.push(\"Check if CDN is experiencing issues\");\n    }\n\n    if (errorMessage.includes(\"cors\")) {\n      steps.push(\"Configure CORS headers on your server\");\n      steps.push(\"Use same-origin resources when possible\");\n    }\n\n    if (errorMessage.includes(\"network\")) {\n      steps.push(\"Check firewall and proxy settings\");\n      steps.push(\"Try using a different network\");\n    }\n\n    return steps;\n  }\n\n  private gatherContext(dependency: string, metadata?: DependencyMetadata): any {\n    const context: any = {};\n\n    if (metadata) {\n      context.loadTime = metadata.loadEndTime ? \n        metadata.loadEndTime - metadata.loadStartTime : \n        Date.now() - metadata.loadStartTime;\n    }\n\n    // Browser context\n    if (typeof window !== \"undefined\") {\n      context.browserInfo = `${navigator.userAgent}`;\n      context.networkStatus = navigator.onLine ? \"online\" : \"offline\";\n      \n      // WebAssembly support\n      if (dependency === \"wasm-core\") {\n        context.wasmSupport = typeof WebAssembly !== \"undefined\";\n      }\n      \n      // SharedArrayBuffer support (for DuckDB)\n      if (dependency === \"duckdb\") {\n        context.sharedArrayBufferSupport = typeof SharedArrayBuffer !== \"undefined\";\n        context.crossOriginIsolated = window.crossOriginIsolated;\n      }\n    }\n\n    return context;\n  }\n\n  formatErrorForLogging(error: EnhancedError): string {\n    let formatted = `[${error.code}] ${error.message}`;\n\n    if (error.context) {\n      formatted += \"\\n  Context:\";\n      Object.entries(error.context).forEach(([key, value]) => {\n        formatted += `\\n    ${key}: ${value}`;\n      });\n    }\n\n    if (error.troubleshooting && error.troubleshooting.length > 0) {\n      formatted += \"\\n  Troubleshooting:\";\n      error.troubleshooting.forEach((step, index) => {\n        formatted += `\\n    ${index + 1}. ${step}`;\n      });\n    }\n\n    return formatted;\n  }\n\n  createRetryStrategy(\n    dependency: string,\n    error: Error,\n    retryCount: number\n  ): {\n    shouldRetry: boolean;\n    delay: number;\n    maxRetries: number;\n  } {\n    const errorMessage = error.message.toLowerCase();\n    \n    // Base retry configuration\n    let shouldRetry = true;\n    let delay = 1000 * Math.pow(2, retryCount); // Exponential backoff\n    let maxRetries = 3;\n\n    // Dependency-specific retry logic\n    switch (dependency) {\n      case \"apache-arrow\":\n        maxRetries = 4; // Arrow can be retried more times\n        if (errorMessage.includes(\"not found\")) {\n          shouldRetry = false; // Don't retry if Arrow is not found\n        }\n        break;\n\n      case \"duckdb\":\n        maxRetries = 3;\n        if (errorMessage.includes(\"sharedarraybuffer\")) {\n          shouldRetry = false; // Can't retry browser support issues\n        }\n        break;\n\n      case \"wasm-core\":\n        maxRetries = 2;\n        if (errorMessage.includes(\"webassembly\")) {\n          shouldRetry = false; // Can't retry browser support issues\n        }\n        break;\n    }\n\n    // Error-specific retry logic\n    if (errorMessage.includes(\"timeout\")) {\n      delay = Math.min(delay * 1.5, 10000); // Longer delays for timeouts\n    }\n\n    if (errorMessage.includes(\"cors\")) {\n      shouldRetry = false; // CORS errors won't resolve with retries\n    }\n\n    if (errorMessage.includes(\"404\") || errorMessage.includes(\"not found\")) {\n      shouldRetry = false; // Don't retry missing resources\n    }\n\n    return {\n      shouldRetry: shouldRetry && retryCount < maxRetries,\n      delay: Math.min(delay, 10000), // Cap at 10 seconds\n      maxRetries,\n    };\n  }\n\n  logDependencyError(error: EnhancedError): void {\n    const formatted = this.formatErrorForLogging(error);\n    \n    if (error.retryCount === 0) {\n      console.error(\"[DataPrism] Dependency Error:\", formatted);\n    } else {\n      console.warn(`[DataPrism] Dependency Retry ${error.retryCount}:`, formatted);\n    }\n  }\n\n  createUserFriendlyMessage(error: EnhancedError): string {\n    const dependency = error.dependency || \"unknown\";\n    \n    let message = `We're having trouble loading ${dependency}. `;\n    \n    if (error.context?.networkStatus === \"offline\") {\n      message += \"Please check your internet connection and try again.\";\n    } else if (error.code.includes(\"TIMEOUT\")) {\n      message += \"The loading process is taking longer than expected. Please try again.\";\n    } else if (error.code.includes(\"CORS\")) {\n      message += \"There's a configuration issue with cross-origin requests. Please contact support.\";\n    } else {\n      message += \"Please try refreshing the page or contact support if the problem persists.\";\n    }\n\n    return message;\n  }\n}","import { DependencyRegistry, DependencyEvent } from \"./dependency-registry.js\";\n\nexport type DataPrismEventType = \n  | \"dependencyLoading\"\n  | \"dependencyReady\" \n  | \"dependencyError\"\n  | \"dependencyTimeout\"\n  | \"dependencyRetry\"\n  | \"engineReady\"\n  | \"arrowReady\"\n  | \"duckdbReady\"\n  | \"wasmReady\"\n  | \"allDependenciesReady\"\n  | \"initializationProgress\";\n\nexport interface DataPrismEvent {\n  type: DataPrismEventType;\n  dependency?: string;\n  progress?: {\n    loaded: number;\n    total: number;\n    percentage: number;\n  };\n  error?: Error;\n  metadata?: any;\n  timestamp: number;\n}\n\nexport type DataPrismEventHandler = (event: DataPrismEvent) => void;\n\nexport class DependencyEventSystem {\n  private static instance: DependencyEventSystem;\n  private eventHandlers = new Map<DataPrismEventType, DataPrismEventHandler[]>();\n  private registry: DependencyRegistry;\n  private initializationStartTime: number = 0;\n\n  private constructor() {\n    this.registry = DependencyRegistry.getInstance();\n    this.setupRegistryEventHandlers();\n  }\n\n  static getInstance(): DependencyEventSystem {\n    if (!DependencyEventSystem.instance) {\n      DependencyEventSystem.instance = new DependencyEventSystem();\n    }\n    return DependencyEventSystem.instance;\n  }\n\n  private setupRegistryEventHandlers(): void {\n    this.registry.addEventListener((event: DependencyEvent) => {\n      this.handleRegistryEvent(event);\n    });\n  }\n\n  private handleRegistryEvent(event: DependencyEvent): void {\n    const dataPrismEvent: DataPrismEvent = {\n      type: this.mapRegistryEventType(event.type, event.dependency),\n      dependency: event.dependency,\n      error: event.error,\n      metadata: event.metadata,\n      timestamp: Date.now(),\n    };\n\n    // Add progress information\n    if (event.type === \"loading\" || event.type === \"ready\") {\n      dataPrismEvent.progress = this.calculateProgress();\n    }\n\n    // Emit the mapped event\n    this.emit(dataPrismEvent.type, dataPrismEvent);\n\n    // Check if all dependencies are ready\n    if (event.type === \"ready\") {\n      this.checkAllDependenciesReady();\n    }\n  }\n\n  private mapRegistryEventType(\n    registryEventType: DependencyEvent[\"type\"],\n    dependency: string\n  ): DataPrismEventType {\n    switch (registryEventType) {\n      case \"loading\":\n        return \"dependencyLoading\";\n      case \"ready\":\n        return this.getSpecificReadyEventType(dependency);\n      case \"error\":\n        return \"dependencyError\";\n      case \"timeout\":\n        return \"dependencyTimeout\";\n      case \"retry\":\n        return \"dependencyRetry\";\n      default:\n        return \"dependencyLoading\";\n    }\n  }\n\n  private getSpecificReadyEventType(dependency: string): DataPrismEventType {\n    switch (dependency) {\n      case \"apache-arrow\":\n        return \"arrowReady\";\n      case \"duckdb\":\n        return \"duckdbReady\";\n      case \"wasm-core\":\n        return \"wasmReady\";\n      default:\n        return \"dependencyReady\";\n    }\n  }\n\n  private calculateProgress(): { loaded: number; total: number; percentage: number } {\n    const allDeps = this.registry.getAllDependencies();\n    const readyDeps = allDeps.filter(dep => dep.state === \"ready\");\n    const total = allDeps.length;\n    const loaded = readyDeps.length;\n    \n    return {\n      loaded,\n      total,\n      percentage: total > 0 ? Math.round((loaded / total) * 100) : 0,\n    };\n  }\n\n  private checkAllDependenciesReady(): void {\n    const allDeps = this.registry.getAllDependencies();\n    const readyDeps = allDeps.filter(dep => dep.state === \"ready\");\n    \n    if (allDeps.length > 0 && readyDeps.length === allDeps.length) {\n      this.emit(\"allDependenciesReady\", {\n        type: \"allDependenciesReady\",\n        progress: this.calculateProgress(),\n        timestamp: Date.now(),\n        metadata: {\n          loadTime: Date.now() - this.initializationStartTime,\n          dependencies: allDeps.map(dep => dep.name),\n        },\n      });\n    }\n  }\n\n  addEventListener(\n    eventType: DataPrismEventType,\n    handler: DataPrismEventHandler\n  ): void {\n    if (!this.eventHandlers.has(eventType)) {\n      this.eventHandlers.set(eventType, []);\n    }\n    this.eventHandlers.get(eventType)!.push(handler);\n  }\n\n  removeEventListener(\n    eventType: DataPrismEventType,\n    handler: DataPrismEventHandler\n  ): void {\n    const handlers = this.eventHandlers.get(eventType);\n    if (handlers) {\n      const index = handlers.indexOf(handler);\n      if (index > -1) {\n        handlers.splice(index, 1);\n      }\n    }\n  }\n\n  emit(eventType: DataPrismEventType, event: DataPrismEvent): void {\n    const handlers = this.eventHandlers.get(eventType);\n    if (handlers) {\n      handlers.forEach(handler => {\n        try {\n          handler(event);\n        } catch (error) {\n          console.error(`Error in DataPrism event handler for ${eventType}:`, error);\n        }\n      });\n    }\n  }\n\n  // Convenience methods for common event subscriptions\n  onDependencyLoading(handler: DataPrismEventHandler): void {\n    this.addEventListener(\"dependencyLoading\", handler);\n  }\n\n  onDependencyReady(handler: DataPrismEventHandler): void {\n    this.addEventListener(\"dependencyReady\", handler);\n  }\n\n  onDependencyError(handler: DataPrismEventHandler): void {\n    this.addEventListener(\"dependencyError\", handler);\n  }\n\n  onArrowReady(handler: DataPrismEventHandler): void {\n    this.addEventListener(\"arrowReady\", handler);\n  }\n\n  onDuckDBReady(handler: DataPrismEventHandler): void {\n    this.addEventListener(\"duckdbReady\", handler);\n  }\n\n  onWasmReady(handler: DataPrismEventHandler): void {\n    this.addEventListener(\"wasmReady\", handler);\n  }\n\n  onAllDependenciesReady(handler: DataPrismEventHandler): void {\n    this.addEventListener(\"allDependenciesReady\", handler);\n  }\n\n  onInitializationProgress(handler: DataPrismEventHandler): void {\n    this.addEventListener(\"initializationProgress\", handler);\n  }\n\n  // Progress tracking methods\n  startInitialization(): void {\n    this.initializationStartTime = Date.now();\n    this.emit(\"initializationProgress\", {\n      type: \"initializationProgress\",\n      progress: { loaded: 0, total: 0, percentage: 0 },\n      timestamp: Date.now(),\n      metadata: { stage: \"starting\" },\n    });\n  }\n\n  updateInitializationProgress(stage: string, additionalData?: any): void {\n    const progress = this.calculateProgress();\n    this.emit(\"initializationProgress\", {\n      type: \"initializationProgress\",\n      progress,\n      timestamp: Date.now(),\n      metadata: { stage, ...additionalData },\n    });\n  }\n\n  // Utility methods for creating loading indicators\n  createLoadingPromise<T>(\n    eventType: DataPrismEventType,\n    timeoutMs: number = 30000\n  ): Promise<T> {\n    return new Promise((resolve, reject) => {\n      const timeoutId = setTimeout(() => {\n        reject(new Error(`Timeout waiting for ${eventType}`));\n      }, timeoutMs);\n\n      const handler = (event: DataPrismEvent) => {\n        clearTimeout(timeoutId);\n        if (event.error) {\n          reject(event.error);\n        } else {\n          resolve(event.metadata as T);\n        }\n      };\n\n      this.addEventListener(eventType, handler);\n    });\n  }\n\n  async waitForArrowReady(timeoutMs: number = 30000): Promise<void> {\n    return this.createLoadingPromise(\"arrowReady\", timeoutMs);\n  }\n\n  async waitForDuckDBReady(timeoutMs: number = 30000): Promise<void> {\n    return this.createLoadingPromise(\"duckdbReady\", timeoutMs);\n  }\n\n  async waitForWasmReady(timeoutMs: number = 20000): Promise<void> {\n    return this.createLoadingPromise(\"wasmReady\", timeoutMs);\n  }\n\n  async waitForAllDependenciesReady(timeoutMs: number = 30000): Promise<void> {\n    return this.createLoadingPromise(\"allDependenciesReady\", timeoutMs);\n  }\n\n  // Debug and monitoring methods\n  getEventStats(): {\n    totalEvents: number;\n    eventsByType: Record<DataPrismEventType, number>;\n    recentEvents: DataPrismEvent[];\n  } {\n    const stats = {\n      totalEvents: 0,\n      eventsByType: {} as Record<DataPrismEventType, number>,\n      recentEvents: [] as DataPrismEvent[],\n    };\n\n    // This would need to be implemented with actual event tracking\n    // For now, return empty stats\n    return stats;\n  }\n\n  clearAllEventHandlers(): void {\n    this.eventHandlers.clear();\n  }\n\n  // Helper method to create a loading indicator UI\n  createLoadingIndicator(\n    container: HTMLElement,\n    options: {\n      showProgress?: boolean;\n      showDetails?: boolean;\n      theme?: \"light\" | \"dark\";\n    } = {}\n  ): {\n    update: (progress: number, message?: string) => void;\n    destroy: () => void;\n  } {\n    const indicator = document.createElement(\"div\");\n    indicator.className = `dataprism-loading-indicator ${options.theme || \"light\"}`;\n    indicator.innerHTML = `\n      <div class=\"loading-spinner\"></div>\n      <div class=\"loading-message\">Initializing DataPrism...</div>\n      ${options.showProgress ? '<div class=\"loading-progress\"><div class=\"progress-bar\"></div></div>' : ''}\n      ${options.showDetails ? '<div class=\"loading-details\"></div>' : ''}\n    `;\n\n    container.appendChild(indicator);\n\n    const progressBar = indicator.querySelector(\".progress-bar\") as HTMLElement;\n    const messageEl = indicator.querySelector(\".loading-message\") as HTMLElement;\n    const detailsEl = indicator.querySelector(\".loading-details\") as HTMLElement;\n\n    // Set up event listeners for real-time updates\n    const progressHandler = (event: DataPrismEvent) => {\n      if (event.progress) {\n        if (progressBar) {\n          progressBar.style.width = `${event.progress.percentage}%`;\n        }\n        if (messageEl) {\n          messageEl.textContent = `Loading... ${event.progress.percentage}%`;\n        }\n        if (detailsEl && event.dependency) {\n          detailsEl.textContent = `Loading ${event.dependency}...`;\n        }\n      }\n    };\n\n    this.addEventListener(\"initializationProgress\", progressHandler);\n    this.addEventListener(\"dependencyLoading\", progressHandler);\n\n    return {\n      update: (progress: number, message?: string) => {\n        if (progressBar) {\n          progressBar.style.width = `${progress}%`;\n        }\n        if (messageEl && message) {\n          messageEl.textContent = message;\n        }\n      },\n      destroy: () => {\n        this.removeEventListener(\"initializationProgress\", progressHandler);\n        this.removeEventListener(\"dependencyLoading\", progressHandler);\n        if (indicator.parentNode) {\n          indicator.parentNode.removeChild(indicator);\n        }\n      },\n    };\n  }\n}","import { PluginManifest } from \"../interfaces/plugin.js\";\n\nexport class PluginRegistry {\n  private manifests: Map<string, PluginManifest>;\n  private dependencies: Map<string, Set<string>>;\n  private categories: Map<string, Set<string>>;\n  private loadOrder: string[] | null = null;\n\n  constructor() {\n    this.manifests = new Map();\n    this.dependencies = new Map();\n    this.categories = new Map();\n  }\n\n  async register(manifest: PluginManifest): Promise<void> {\n    const name = manifest.name;\n\n    // Check for conflicts\n    if (this.manifests.has(name)) {\n      const existing = this.manifests.get(name)!;\n      if (existing.version !== manifest.version) {\n        throw new Error(\n          `Plugin version conflict: ${name} ${existing.version} vs ${manifest.version}`,\n        );\n      }\n      // Allow re-registration of same version\n      return;\n    }\n\n    // Store manifest\n    this.manifests.set(name, manifest);\n\n    // Index dependencies\n    const deps = new Set<string>();\n    for (const dep of manifest.dependencies) {\n      if (!dep.optional) {\n        deps.add(dep.name);\n      }\n    }\n    this.dependencies.set(name, deps);\n\n    // Index by category\n    if (!this.categories.has(manifest.category)) {\n      this.categories.set(manifest.category, new Set());\n    }\n    this.categories.get(manifest.category)!.add(name);\n\n    // Invalidate load order cache\n    this.loadOrder = null;\n\n    // Validate dependency tree\n    await this.validateDependencies(name);\n  }\n\n  async unregister(pluginName: string): Promise<void> {\n    const manifest = this.manifests.get(pluginName);\n    if (!manifest) return;\n\n    // Check if other plugins depend on this one\n    const dependents = this.getDependents(pluginName);\n    if (dependents.length > 0) {\n      throw new Error(\n        `Cannot unregister ${pluginName}: required by ${dependents.join(\", \")}`,\n      );\n    }\n\n    // Remove from indexes\n    this.manifests.delete(pluginName);\n    this.dependencies.delete(pluginName);\n\n    const category = manifest.category;\n    if (this.categories.has(category)) {\n      this.categories.get(category)!.delete(pluginName);\n      if (this.categories.get(category)!.size === 0) {\n        this.categories.delete(category);\n      }\n    }\n\n    // Invalidate load order cache\n    this.loadOrder = null;\n  }\n\n  getManifest(pluginName: string): PluginManifest | null {\n    return this.manifests.get(pluginName) || null;\n  }\n\n  getAllManifests(): PluginManifest[] {\n    return Array.from(this.manifests.values());\n  }\n\n  getPluginsByCategory(category: string): string[] {\n    return Array.from(this.categories.get(category) || []);\n  }\n\n  getDependencies(pluginName: string): string[] {\n    return Array.from(this.dependencies.get(pluginName) || []);\n  }\n\n  getDependents(pluginName: string): string[] {\n    const dependents: string[] = [];\n    for (const [name, deps] of this.dependencies) {\n      if (deps.has(pluginName)) {\n        dependents.push(name);\n      }\n    }\n    return dependents;\n  }\n\n  getLoadOrder(): string[] {\n    if (this.loadOrder !== null) {\n      return [...this.loadOrder];\n    }\n\n    // Topological sort for dependency resolution\n    const visited = new Set<string>();\n    const visiting = new Set<string>();\n    const order: string[] = [];\n\n    const visit = (name: string) => {\n      if (visiting.has(name)) {\n        throw new Error(`Circular dependency detected involving ${name}`);\n      }\n      if (visited.has(name)) return;\n\n      visiting.add(name);\n\n      const deps = this.dependencies.get(name) || new Set();\n      for (const dep of deps) {\n        if (this.manifests.has(dep)) {\n          visit(dep);\n        }\n      }\n\n      visiting.delete(name);\n      visited.add(name);\n      order.push(name);\n    };\n\n    for (const name of this.manifests.keys()) {\n      visit(name);\n    }\n\n    this.loadOrder = order;\n    return [...order];\n  }\n\n  search(query: PluginSearchQuery): PluginSearchResult[] {\n    const results: PluginSearchResult[] = [];\n\n    for (const manifest of this.manifests.values()) {\n      let score = 0;\n      let matches: PluginSearchMatch[] = [];\n\n      // Name match\n      if (\n        query.name &&\n        manifest.name.toLowerCase().includes(query.name.toLowerCase())\n      ) {\n        score += 10;\n        matches.push({ field: \"name\", value: manifest.name });\n      }\n\n      // Category match\n      if (query.category && manifest.category === query.category) {\n        score += 8;\n        matches.push({ field: \"category\", value: manifest.category });\n      }\n\n      // Keywords match\n      if (query.keywords) {\n        for (const keyword of query.keywords) {\n          if (\n            manifest.keywords.some((k) =>\n              k.toLowerCase().includes(keyword.toLowerCase()),\n            )\n          ) {\n            score += 5;\n            matches.push({ field: \"keywords\", value: keyword });\n          }\n        }\n      }\n\n      // Description match\n      if (\n        query.description &&\n        manifest.description\n          .toLowerCase()\n          .includes(query.description.toLowerCase())\n      ) {\n        score += 3;\n        matches.push({ field: \"description\", value: manifest.description });\n      }\n\n      // Author match\n      if (\n        query.author &&\n        manifest.author.toLowerCase().includes(query.author.toLowerCase())\n      ) {\n        score += 2;\n        matches.push({ field: \"author\", value: manifest.author });\n      }\n\n      if (score > 0) {\n        results.push({\n          manifest,\n          score,\n          matches,\n        });\n      }\n    }\n\n    // Sort by score descending\n    results.sort((a, b) => b.score - a.score);\n\n    // Apply limit if specified\n    if (query.limit && query.limit > 0) {\n      return results.slice(0, query.limit);\n    }\n\n    return results;\n  }\n\n  getStatistics(): PluginRegistryStatistics {\n    const categoryStats = new Map<string, number>();\n    const authorStats = new Map<string, number>();\n    let totalDependencies = 0;\n\n    for (const manifest of this.manifests.values()) {\n      // Category statistics\n      const count = categoryStats.get(manifest.category) || 0;\n      categoryStats.set(manifest.category, count + 1);\n\n      // Author statistics\n      const authorCount = authorStats.get(manifest.author) || 0;\n      authorStats.set(manifest.author, authorCount + 1);\n\n      // Dependency count\n      totalDependencies += manifest.dependencies.length;\n    }\n\n    return {\n      totalPlugins: this.manifests.size,\n      categories: Object.fromEntries(categoryStats),\n      authors: Object.fromEntries(authorStats),\n      averageDependencies:\n        this.manifests.size > 0 ? totalDependencies / this.manifests.size : 0,\n      circularDependencies: this.detectCircularDependencies(),\n    };\n  }\n\n  validateManifest(manifest: PluginManifest): ValidationResult {\n    const errors: string[] = [];\n    const warnings: string[] = [];\n\n    // Required fields\n    if (!manifest.name || manifest.name.trim() === \"\") {\n      errors.push(\"Plugin name is required\");\n    }\n\n    if (!manifest.version || !this.isValidVersion(manifest.version)) {\n      errors.push(\"Valid plugin version is required (semver format)\");\n    }\n\n    if (!manifest.entryPoint || manifest.entryPoint.trim() === \"\") {\n      errors.push(\"Entry point is required\");\n    }\n\n    if (!manifest.category) {\n      errors.push(\"Plugin category is required\");\n    }\n\n    // Category validation\n    const validCategories = [\n      \"data-processing\",\n      \"visualization\",\n      \"integration\",\n      \"utility\",\n    ];\n    if (manifest.category && !validCategories.includes(manifest.category)) {\n      errors.push(\n        `Invalid category: ${manifest.category}. Must be one of: ${validCategories.join(\", \")}`,\n      );\n    }\n\n    // Dependencies validation\n    for (const dep of manifest.dependencies || []) {\n      if (!dep.name || !dep.version) {\n        errors.push(\"Dependency must have name and version\");\n      }\n      if (!this.isValidVersion(dep.version)) {\n        errors.push(`Invalid dependency version: ${dep.version}`);\n      }\n    }\n\n    // Permissions validation\n    for (const perm of manifest.permissions || []) {\n      if (!perm.resource || !perm.access) {\n        errors.push(\"Permission must have resource and access fields\");\n      }\n      const validAccess = [\"read\", \"write\", \"execute\"];\n      if (perm.access && !validAccess.includes(perm.access)) {\n        errors.push(`Invalid permission access: ${perm.access}`);\n      }\n    }\n\n    // Compatibility validation\n    if (manifest.compatibility) {\n      if (!manifest.compatibility.minCoreVersion) {\n        warnings.push(\"Minimum core version not specified\");\n      }\n      if (\n        !manifest.compatibility.browsers ||\n        manifest.compatibility.browsers.length === 0\n      ) {\n        warnings.push(\"Supported browsers not specified\");\n      }\n    }\n\n    // Best practices warnings\n    if (!manifest.description || manifest.description.length < 10) {\n      warnings.push(\"Plugin description should be at least 10 characters\");\n    }\n\n    if (!manifest.keywords || manifest.keywords.length === 0) {\n      warnings.push(\"Adding keywords improves plugin discoverability\");\n    }\n\n    return {\n      isValid: errors.length === 0,\n      errors,\n      warnings,\n    };\n  }\n\n  private async validateDependencies(pluginName: string): Promise<void> {\n    const manifest = this.manifests.get(pluginName)!;\n\n    for (const dep of manifest.dependencies) {\n      if (!dep.optional && !this.manifests.has(dep.name)) {\n        throw new Error(\n          `Missing dependency: ${pluginName} requires ${dep.name}`,\n        );\n      }\n\n      // Check version compatibility\n      const depManifest = this.manifests.get(dep.name);\n      if (\n        depManifest &&\n        !this.isVersionCompatible(dep.version, depManifest.version)\n      ) {\n        throw new Error(\n          `Version mismatch: ${pluginName} requires ${dep.name}@${dep.version}, found ${depManifest.version}`,\n        );\n      }\n    }\n  }\n\n  private isValidVersion(version: string): boolean {\n    // Simple semver validation\n    return /^\\d+\\.\\d+\\.\\d+(-[\\w\\d\\-]+)?(\\+[\\w\\d\\-]+)?$/.test(version);\n  }\n\n  private isVersionCompatible(required: string, available: string): boolean {\n    // Simple semver compatibility check\n    if (required === \"*\" || required === available) return true;\n\n    // For now, exact match required. In production, implement proper semver range checking\n    return required === available;\n  }\n\n  private detectCircularDependencies(): string[] {\n    const cycles: string[] = [];\n    const visited = new Set<string>();\n    const visiting = new Set<string>();\n\n    const visit = (name: string, path: string[]): void => {\n      if (visiting.has(name)) {\n        const cycleStart = path.indexOf(name);\n        const cycle = path.slice(cycleStart).concat(name);\n        cycles.push(cycle.join(\" -> \"));\n        return;\n      }\n      if (visited.has(name)) return;\n\n      visiting.add(name);\n      const deps = this.dependencies.get(name) || new Set();\n\n      for (const dep of deps) {\n        if (this.manifests.has(dep)) {\n          visit(dep, [...path, name]);\n        }\n      }\n\n      visiting.delete(name);\n      visited.add(name);\n    };\n\n    for (const name of this.manifests.keys()) {\n      if (!visited.has(name)) {\n        visit(name, []);\n      }\n    }\n\n    return cycles;\n  }\n}\n\nexport interface PluginSearchQuery {\n  name?: string;\n  category?: string;\n  keywords?: string[];\n  description?: string;\n  author?: string;\n  limit?: number;\n}\n\nexport interface PluginSearchResult {\n  manifest: PluginManifest;\n  score: number;\n  matches: PluginSearchMatch[];\n}\n\nexport interface PluginSearchMatch {\n  field: string;\n  value: string;\n}\n\nexport interface PluginRegistryStatistics {\n  totalPlugins: number;\n  categories: Record<string, number>;\n  authors: Record<string, number>;\n  averageDependencies: number;\n  circularDependencies: string[];\n}\n\nexport interface ValidationResult {\n  isValid: boolean;\n  errors: string[];\n  warnings: string[];\n}\n","import { IPlugin, PluginManifest } from \"../interfaces/plugin.js\";\n\nexport class PluginLoader {\n  private loadedModules: Map<string, any>;\n  private moduleCache: Map<string, Promise<any>>;\n\n  constructor() {\n    this.loadedModules = new Map();\n    this.moduleCache = new Map();\n  }\n\n  async load(manifest: PluginManifest): Promise<IPlugin> {\n    const pluginName = manifest.name;\n\n    try {\n      // Check if already loaded\n      if (this.loadedModules.has(pluginName)) {\n        return this.createPluginInstance(\n          this.loadedModules.get(pluginName),\n          manifest,\n        );\n      }\n\n      // Load the plugin module\n      const module = await this.loadModule(manifest.entryPoint);\n      this.loadedModules.set(pluginName, module);\n\n      // Create plugin instance\n      return this.createPluginInstance(module, manifest);\n    } catch (error) {\n      throw new PluginLoadError(\n        `Failed to load plugin ${pluginName}: ${error}`,\n      );\n    }\n  }\n\n  async unload(pluginName: string): Promise<void> {\n    if (this.loadedModules.has(pluginName)) {\n      const module = this.loadedModules.get(pluginName);\n\n      // Call cleanup if available\n      if (module && typeof module.cleanup === \"function\") {\n        try {\n          await module.cleanup();\n        } catch (error) {\n          console.warn(`Plugin cleanup failed for ${pluginName}:`, error);\n        }\n      }\n\n      this.loadedModules.delete(pluginName);\n    }\n\n    // Clear from cache\n    this.moduleCache.delete(pluginName);\n  }\n\n  async hotReload(manifest: PluginManifest): Promise<IPlugin> {\n    const pluginName = manifest.name;\n\n    // Clear from cache first\n    this.moduleCache.delete(pluginName);\n\n    // Force reload\n    this.loadedModules.delete(pluginName);\n\n    return this.load(manifest);\n  }\n\n  async discoverPlugins(searchPaths: string[]): Promise<string[]> {\n    const discoveredPaths: string[] = [];\n\n    for (const searchPath of searchPaths) {\n      try {\n        const paths = await this.searchForPlugins(searchPath);\n        discoveredPaths.push(...paths);\n      } catch (error) {\n        console.warn(`Failed to search for plugins in ${searchPath}:`, error);\n      }\n    }\n\n    return discoveredPaths;\n  }\n\n  async loadManifest(pluginPath: string): Promise<PluginManifest> {\n    try {\n      // Try to load manifest.json from plugin directory\n      const manifestPath = this.resolveManifestPath(pluginPath);\n      const manifestModule = await this.loadModule(manifestPath);\n\n      if (manifestModule.default) {\n        return manifestModule.default;\n      } else if (manifestModule.manifest) {\n        return manifestModule.manifest;\n      } else {\n        // Assume the entire module is the manifest\n        return manifestModule;\n      }\n    } catch (error) {\n      throw new PluginLoadError(\n        `Failed to load manifest from ${pluginPath}: ${error}`,\n      );\n    }\n  }\n\n  async preloadPlugin(manifest: PluginManifest): Promise<void> {\n    const pluginName = manifest.name;\n\n    if (!this.moduleCache.has(pluginName)) {\n      // Start loading but don't await - just cache the promise\n      this.moduleCache.set(pluginName, this.loadModule(manifest.entryPoint));\n    }\n  }\n\n  getLoadedPlugins(): string[] {\n    return Array.from(this.loadedModules.keys());\n  }\n\n  isLoaded(pluginName: string): boolean {\n    return this.loadedModules.has(pluginName);\n  }\n\n  async validatePlugin(\n    manifest: PluginManifest,\n  ): Promise<PluginValidationResult> {\n    const result: PluginValidationResult = {\n      isValid: true,\n      errors: [],\n      warnings: [],\n    };\n\n    try {\n      // Try to load and validate the plugin module\n      const module = await this.loadModule(manifest.entryPoint);\n\n      // Check for required exports\n      if (!this.hasValidPluginClass(module)) {\n        result.errors.push(\n          \"Plugin must export a valid plugin class or factory function\",\n        );\n        result.isValid = false;\n      }\n\n      // Validate plugin metadata\n      const instance = this.createPluginInstance(module, manifest);\n      const pluginCapabilities = instance.getCapabilities();\n\n      if (!pluginCapabilities || pluginCapabilities.length === 0) {\n        result.warnings.push(\"Plugin does not declare any capabilities\");\n      }\n\n      // Check for required methods\n      const requiredMethods = [\n        \"initialize\",\n        \"activate\",\n        \"execute\",\n        \"deactivate\",\n        \"cleanup\",\n      ];\n      for (const method of requiredMethods) {\n        if (typeof (instance as any)[method] !== \"function\") {\n          result.errors.push(`Plugin missing required method: ${method}`);\n          result.isValid = false;\n        }\n      }\n    } catch (error) {\n      result.errors.push(`Plugin validation failed: ${error}`);\n      result.isValid = false;\n    }\n\n    return result;\n  }\n\n  private async loadModule(modulePath: string): Promise<any> {\n    try {\n      // Handle different module loading strategies\n      if (this.isESModule(modulePath)) {\n        return await this.loadESModule(modulePath);\n      } else if (this.isWebAssembly(modulePath)) {\n        return await this.loadWebAssembly(modulePath);\n      } else {\n        return await this.loadCommonJSModule(modulePath);\n      }\n    } catch (error) {\n      throw new PluginLoadError(\n        `Module loading failed for ${modulePath}: ${error}`,\n      );\n    }\n  }\n\n  private async loadESModule(modulePath: string): Promise<any> {\n    // Dynamic import for ES modules\n    const resolvedPath = this.resolvePath(modulePath);\n    return await import(resolvedPath);\n  }\n\n  private async loadWebAssembly(modulePath: string): Promise<any> {\n    // Load WebAssembly module\n    const resolvedPath = this.resolvePath(modulePath);\n    const wasmModule = await WebAssembly.compileStreaming(fetch(resolvedPath));\n    const wasmInstance = await WebAssembly.instantiate(wasmModule);\n\n    return {\n      module: wasmModule,\n      instance: wasmInstance,\n      exports: wasmInstance.exports,\n    };\n  }\n\n  private async loadCommonJSModule(modulePath: string): Promise<any> {\n    // For CommonJS modules, we'll need to handle differently in browser vs Node\n    const resolvedPath = this.resolvePath(modulePath);\n\n    if (typeof require !== \"undefined\") {\n      // Node.js environment\n      delete require.cache[require.resolve(resolvedPath)];\n      return require(resolvedPath);\n    } else {\n      // Browser environment - treat as ES module\n      return await import(resolvedPath);\n    }\n  }\n\n  private createPluginInstance(module: any, manifest: PluginManifest): IPlugin {\n    let PluginClass: any;\n\n    // Determine the plugin class from the module\n    if (module.default && typeof module.default === \"function\") {\n      PluginClass = module.default;\n    } else if (\n      module[manifest.name] &&\n      typeof module[manifest.name] === \"function\"\n    ) {\n      PluginClass = module[manifest.name];\n    } else if (module.Plugin && typeof module.Plugin === \"function\") {\n      PluginClass = module.Plugin;\n    } else if (typeof module === \"function\") {\n      PluginClass = module;\n    } else {\n      throw new PluginLoadError(\"No valid plugin class found in module\");\n    }\n\n    // Create instance\n    try {\n      const instance = new PluginClass(manifest);\n\n      // Validate that instance implements IPlugin interface\n      if (!this.implementsIPlugin(instance)) {\n        throw new PluginLoadError(\n          \"Plugin instance does not implement IPlugin interface\",\n        );\n      }\n\n      return instance;\n    } catch (error) {\n      throw new PluginLoadError(`Failed to create plugin instance: ${error}`);\n    }\n  }\n\n  private implementsIPlugin(instance: any): boolean {\n    const requiredMethods = [\n      \"getName\",\n      \"getVersion\",\n      \"getDescription\",\n      \"getAuthor\",\n      \"getCapabilities\",\n      \"getDependencies\",\n      \"initialize\",\n      \"activate\",\n      \"execute\",\n      \"deactivate\",\n      \"cleanup\",\n      \"configure\",\n    ];\n\n    return requiredMethods.every(\n      (method) => typeof instance[method] === \"function\",\n    );\n  }\n\n  private hasValidPluginClass(module: any): boolean {\n    return (\n      (module.default && typeof module.default === \"function\") ||\n      (module.Plugin && typeof module.Plugin === \"function\") ||\n      typeof module === \"function\"\n    );\n  }\n\n  private async searchForPlugins(searchPath: string): Promise<string[]> {\n    const pluginPaths: string[] = [];\n\n    try {\n      // In a real implementation, this would scan the filesystem\n      // For now, we'll provide a mock implementation\n      const mockPaths = [\n        `${searchPath}/data-processor-csv`,\n        `${searchPath}/visualization-charts`,\n        `${searchPath}/integration-api`,\n        `${searchPath}/utility-performance`,\n      ];\n\n      // Validate each path has a manifest\n      for (const path of mockPaths) {\n        try {\n          const manifestPath = this.resolveManifestPath(path);\n          // In real implementation, check if file exists\n          pluginPaths.push(path);\n        } catch (error) {\n          // Skip invalid plugins\n          continue;\n        }\n      }\n    } catch (error) {\n      throw new PluginLoadError(`Plugin discovery failed: ${error}`);\n    }\n\n    return pluginPaths;\n  }\n\n  private resolvePath(modulePath: string): string {\n    // Handle relative and absolute paths\n    if (modulePath.startsWith(\"./\") || modulePath.startsWith(\"../\")) {\n      // Relative path - resolve relative to current location\n      return new URL(modulePath, import.meta.url).href;\n    } else if (modulePath.startsWith(\"/\")) {\n      // Absolute path\n      return modulePath;\n    } else if (\n      modulePath.startsWith(\"http://\") ||\n      modulePath.startsWith(\"https://\")\n    ) {\n      // URL\n      return modulePath;\n    } else {\n      // Package name or relative path\n      return `./${modulePath}`;\n    }\n  }\n\n  private resolveManifestPath(pluginPath: string): string {\n    // Try different manifest file names\n    const manifestNames = [\"manifest.json\", \"plugin.json\", \"package.json\"];\n\n    for (const name of manifestNames) {\n      const manifestPath = `${pluginPath}/${name}`;\n      // In real implementation, check if file exists\n      return manifestPath;\n    }\n\n    throw new PluginLoadError(`No manifest found in ${pluginPath}`);\n  }\n\n  private isESModule(modulePath: string): boolean {\n    return (\n      modulePath.endsWith(\".js\") ||\n      modulePath.endsWith(\".mjs\") ||\n      modulePath.endsWith(\".ts\")\n    );\n  }\n\n  private isWebAssembly(modulePath: string): boolean {\n    return modulePath.endsWith(\".wasm\");\n  }\n\n  async getModuleInfo(pluginName: string): Promise<PluginModuleInfo | null> {\n    const module = this.loadedModules.get(pluginName);\n    if (!module) return null;\n\n    return {\n      pluginName,\n      modulePath: module.path || \"unknown\",\n      loadTime: module.loadTime || Date.now(),\n      size: module.size || 0,\n      type: this.getModuleType(module),\n      exports: Object.keys(module).filter((key) => key !== \"default\"),\n    };\n  }\n\n  private getModuleType(module: any): ModuleType {\n    if (module.instance && module.exports) {\n      return \"webassembly\";\n    } else if (module.__esModule || module.default) {\n      return \"esmodule\";\n    } else {\n      return \"commonjs\";\n    }\n  }\n\n  async destroy(): Promise<void> {\n    // Unload all plugins\n    const pluginNames = Array.from(this.loadedModules.keys());\n    for (const pluginName of pluginNames) {\n      try {\n        await this.unload(pluginName);\n      } catch (error) {\n        console.warn(`Failed to unload plugin ${pluginName}:`, error);\n      }\n    }\n\n    this.loadedModules.clear();\n    this.moduleCache.clear();\n  }\n}\n\nexport class PluginLoadError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = \"PluginLoadError\";\n  }\n}\n\nexport interface PluginValidationResult {\n  isValid: boolean;\n  errors: string[];\n  warnings: string[];\n}\n\nexport interface PluginModuleInfo {\n  pluginName: string;\n  modulePath: string;\n  loadTime: number;\n  size: number;\n  type: ModuleType;\n  exports: string[];\n}\n\nexport type ModuleType = \"esmodule\" | \"commonjs\" | \"webassembly\";\n","import { PluginManifest, PluginPermission } from \"../interfaces/plugin.js\";\n\nexport class SecurityManager {\n  private permissions: Map<string, Set<PluginPermission>>;\n  private sandboxes: Map<string, PluginSandbox>;\n  private auditLogger: AuditLogger;\n  private securityPolicies: SecurityPolicySet;\n  private initialized = false;\n\n  constructor() {\n    this.permissions = new Map();\n    this.sandboxes = new Map();\n    this.auditLogger = new AuditLogger();\n    this.securityPolicies = new SecurityPolicySet();\n  }\n\n  async initialize(): Promise<void> {\n    if (this.initialized) return;\n\n    await this.auditLogger.initialize();\n    await this.securityPolicies.loadDefault();\n    this.initialized = true;\n  }\n\n  async validatePlugin(manifest: PluginManifest): Promise<void> {\n    if (!this.initialized) {\n      throw new Error(\"SecurityManager not initialized\");\n    }\n\n    // Static security analysis\n    await this.performStaticAnalysis(manifest);\n\n    // Validate permissions\n    await this.validatePermissions(manifest.permissions);\n\n    // Check for suspicious patterns\n    await this.checkSuspiciousPatterns(manifest);\n\n    // Store permissions for later use\n    this.permissions.set(manifest.name, new Set(manifest.permissions));\n\n    this.auditLogger.log(\"security\", \"plugin_validated\", {\n      pluginName: manifest.name,\n      version: manifest.version,\n      permissions: manifest.permissions,\n      timestamp: Date.now(),\n    });\n  }\n\n  async createSandbox(pluginName: string): Promise<PluginSandbox> {\n    if (!this.initialized) {\n      throw new Error(\"SecurityManager not initialized\");\n    }\n\n    const permissions = this.permissions.get(pluginName);\n    if (!permissions) {\n      throw new SecurityError(`No permissions found for plugin: ${pluginName}`);\n    }\n\n    const sandbox = new PluginSandbox(pluginName, {\n      allowedAPIs: this.getAllowedAPIs(pluginName),\n      memoryLimit: this.getMemoryLimit(pluginName),\n      timeoutLimit: this.getTimeoutLimit(pluginName),\n      networkAccess: this.hasNetworkPermission(pluginName),\n      permissions: Array.from(permissions),\n    });\n\n    await sandbox.initialize();\n    this.sandboxes.set(pluginName, sandbox);\n\n    this.auditLogger.log(\"security\", \"sandbox_created\", {\n      pluginName,\n      config: sandbox.getConfig(),\n      timestamp: Date.now(),\n    });\n\n    return sandbox;\n  }\n\n  async checkPermission(\n    pluginName: string,\n    operation: string,\n    params: any,\n  ): Promise<void> {\n    if (!this.initialized) {\n      throw new Error(\"SecurityManager not initialized\");\n    }\n\n    const permissions = this.permissions.get(pluginName);\n    if (!permissions) {\n      throw new SecurityError(`No permissions found for plugin: ${pluginName}`);\n    }\n\n    const requiredPermission = this.getRequiredPermission(operation, params);\n    const hasPermission = Array.from(permissions).some((perm) =>\n      this.permissionMatches(perm, requiredPermission),\n    );\n\n    if (!hasPermission) {\n      this.auditLogger.log(\"security\", \"permission_denied\", {\n        pluginName,\n        operation,\n        params: this.sanitizeParams(params),\n        requiredPermission,\n        timestamp: Date.now(),\n      });\n      throw new SecurityError(\n        `Permission denied: ${pluginName} cannot perform ${operation}`,\n      );\n    }\n\n    this.auditLogger.log(\"security\", \"permission_granted\", {\n      pluginName,\n      operation,\n      timestamp: Date.now(),\n    });\n  }\n\n  async destroySandbox(pluginName: string): Promise<void> {\n    const sandbox = this.sandboxes.get(pluginName);\n    if (sandbox) {\n      await sandbox.destroy();\n      this.sandboxes.delete(pluginName);\n\n      this.auditLogger.log(\"security\", \"sandbox_destroyed\", {\n        pluginName,\n        timestamp: Date.now(),\n      });\n    }\n  }\n\n  async generateSecurityReport(): Promise<SecurityReport> {\n    const events = await this.auditLogger.getEvents();\n    const violations = events.filter((e) => e.type === \"permission_denied\");\n    const suspiciousActivity = await this.detectSuspiciousActivity(events);\n\n    return {\n      timestamp: new Date().toISOString(),\n      summary: {\n        totalPlugins: this.permissions.size,\n        activeSandboxes: this.sandboxes.size,\n        securityEvents: events.length,\n        violations: violations.length,\n        suspiciousActivity: suspiciousActivity.length,\n      },\n      violations: violations.slice(-10), // Last 10 violations\n      suspiciousActivity,\n      recommendations: this.generateSecurityRecommendations(events),\n    };\n  }\n\n  private async performStaticAnalysis(manifest: PluginManifest): Promise<void> {\n    // Check for dangerous patterns in manifest\n    const dangerousPatterns = [\n      /eval\\s*\\(/,\n      /Function\\s*\\(/,\n      /document\\.write/,\n      /innerHTML\\s*=/,\n      /execCommand/,\n      /new\\s+Function/,\n      /setTimeout\\s*\\(\\s*[\"'`]/,\n      /setInterval\\s*\\(\\s*[\"'`]/,\n    ];\n\n    const manifestString = JSON.stringify(manifest);\n    for (const pattern of dangerousPatterns) {\n      if (pattern.test(manifestString)) {\n        throw new SecurityError(\n          `Dangerous pattern detected in manifest: ${pattern}`,\n        );\n      }\n    }\n\n    // Check entry point for suspicious extensions\n    const suspiciousExtensions = [\".exe\", \".bat\", \".cmd\", \".sh\", \".ps1\"];\n    if (\n      suspiciousExtensions.some((ext) =>\n        manifest.entryPoint.toLowerCase().endsWith(ext),\n      )\n    ) {\n      throw new SecurityError(\n        `Suspicious entry point file extension: ${manifest.entryPoint}`,\n      );\n    }\n  }\n\n  private async validatePermissions(\n    permissions: PluginPermission[],\n  ): Promise<void> {\n    for (const permission of permissions) {\n      if (!this.isValidPermission(permission)) {\n        throw new SecurityError(\n          `Invalid permission: ${JSON.stringify(permission)}`,\n        );\n      }\n\n      // Check against security policies\n      if (!this.securityPolicies.isPermissionAllowed(permission)) {\n        throw new SecurityError(\n          `Permission not allowed by security policy: ${permission.resource}.${permission.access}`,\n        );\n      }\n    }\n  }\n\n  private async checkSuspiciousPatterns(\n    manifest: PluginManifest,\n  ): Promise<void> {\n    // Check for suspicious keywords\n    const suspiciousKeywords = [\n      \"crypto\",\n      \"bitcoin\",\n      \"mining\",\n      \"keylogger\",\n      \"password\",\n      \"backdoor\",\n      \"rootkit\",\n      \"virus\",\n      \"malware\",\n      \"trojan\",\n    ];\n\n    const textToCheck = [\n      manifest.name,\n      manifest.description,\n      ...manifest.keywords,\n    ]\n      .join(\" \")\n      .toLowerCase();\n\n    for (const keyword of suspiciousKeywords) {\n      if (textToCheck.includes(keyword)) {\n        // Log but don't block - might be legitimate\n        this.auditLogger.log(\"security\", \"suspicious_keyword\", {\n          pluginName: manifest.name,\n          keyword,\n          timestamp: Date.now(),\n        });\n      }\n    }\n  }\n\n  private isValidPermission(permission: PluginPermission): boolean {\n    const validResources = [\n      \"data\",\n      \"storage\",\n      \"network\",\n      \"ui\",\n      \"core\",\n      \"filesystem\",\n    ];\n    const validAccess = [\"read\", \"write\", \"execute\"];\n\n    return (\n      validResources.includes(permission.resource) &&\n      validAccess.includes(permission.access)\n    );\n  }\n\n  private getRequiredPermission(\n    operation: string,\n    params: any,\n  ): PluginPermission {\n    // Map operations to required permissions\n    const operationMap: Record<string, PluginPermission> = {\n      \"data.read\": { resource: \"data\", access: \"read\" },\n      \"data.write\": { resource: \"data\", access: \"write\" },\n      \"data.query\": { resource: \"data\", access: \"read\" },\n      \"storage.get\": { resource: \"storage\", access: \"read\" },\n      \"storage.set\": { resource: \"storage\", access: \"write\" },\n      \"network.fetch\": { resource: \"network\", access: \"read\" },\n      \"network.post\": { resource: \"network\", access: \"write\" },\n      \"ui.render\": { resource: \"ui\", access: \"write\" },\n      \"ui.update\": { resource: \"ui\", access: \"write\" },\n      \"core.metrics\": { resource: \"core\", access: \"read\" },\n      \"filesystem.read\": { resource: \"filesystem\", access: \"read\" },\n      \"filesystem.write\": { resource: \"filesystem\", access: \"write\" },\n    };\n\n    return operationMap[operation] || { resource: \"core\", access: \"execute\" };\n  }\n\n  private permissionMatches(\n    granted: PluginPermission,\n    required: PluginPermission,\n  ): boolean {\n    if (granted.resource !== required.resource) return false;\n\n    // Execute permission includes read and write\n    if (granted.access === \"execute\") return true;\n\n    // Write permission includes read for the same resource\n    if (granted.access === \"write\" && required.access === \"read\") return true;\n\n    return granted.access === required.access;\n  }\n\n  private getAllowedAPIs(pluginName: string): string[] {\n    const permissions = this.permissions.get(pluginName);\n    if (!permissions) return [];\n\n    const allowedAPIs: string[] = [];\n\n    for (const perm of permissions) {\n      switch (perm.resource) {\n        case \"data\":\n          allowedAPIs.push(\"data.query\", \"data.read\");\n          if (perm.access === \"write\" || perm.access === \"execute\") {\n            allowedAPIs.push(\"data.write\", \"data.update\");\n          }\n          break;\n        case \"storage\":\n          allowedAPIs.push(\"storage.get\");\n          if (perm.access === \"write\" || perm.access === \"execute\") {\n            allowedAPIs.push(\"storage.set\", \"storage.remove\");\n          }\n          break;\n        case \"network\":\n          if (perm.access === \"read\" || perm.access === \"execute\") {\n            allowedAPIs.push(\"network.fetch\");\n          }\n          if (perm.access === \"write\" || perm.access === \"execute\") {\n            allowedAPIs.push(\"network.post\", \"network.put\");\n          }\n          break;\n        case \"ui\":\n          if (perm.access === \"write\" || perm.access === \"execute\") {\n            allowedAPIs.push(\"ui.render\", \"ui.update\", \"ui.notify\");\n          }\n          break;\n      }\n    }\n\n    return allowedAPIs;\n  }\n\n  private getMemoryLimit(pluginName: string): number {\n    // Default: 50MB per plugin\n    return 50 * 1024 * 1024;\n  }\n\n  private getTimeoutLimit(pluginName: string): number {\n    // Default: 30 seconds\n    return 30000;\n  }\n\n  private hasNetworkPermission(pluginName: string): boolean {\n    const permissions = this.permissions.get(pluginName);\n    if (!permissions) return false;\n\n    return Array.from(permissions).some((perm) => perm.resource === \"network\");\n  }\n\n  private sanitizeParams(params: any): any {\n    // Remove sensitive data from audit logs\n    if (typeof params !== \"object\" || params === null) return params;\n\n    const sanitized = { ...params };\n    const sensitiveKeys = [\"password\", \"token\", \"key\", \"secret\", \"credential\"];\n\n    for (const key of Object.keys(sanitized)) {\n      if (\n        sensitiveKeys.some((sensitive) => key.toLowerCase().includes(sensitive))\n      ) {\n        sanitized[key] = \"[REDACTED]\";\n      }\n    }\n\n    return sanitized;\n  }\n\n  private async detectSuspiciousActivity(\n    events: AuditEvent[],\n  ): Promise<SuspiciousActivity[]> {\n    const suspicious: SuspiciousActivity[] = [];\n    const now = Date.now();\n    const timeWindow = 60000; // 1 minute\n\n    // Detect rapid permission denials\n    const recentDenials = events.filter(\n      (e) => e.type === \"permission_denied\" && now - e.timestamp < timeWindow,\n    );\n\n    if (recentDenials.length > 10) {\n      suspicious.push({\n        type: \"rapid_permission_denials\",\n        description: `${recentDenials.length} permission denials in the last minute`,\n        severity: \"high\",\n        events: recentDenials.slice(-5).map((e) => e.id),\n      });\n    }\n\n    // Detect suspicious keyword usage\n    const keywordEvents = events.filter((e) => e.type === \"suspicious_keyword\");\n    if (keywordEvents.length > 0) {\n      suspicious.push({\n        type: \"suspicious_keywords\",\n        description: `Plugins using suspicious keywords detected`,\n        severity: \"medium\",\n        events: keywordEvents.map((e) => e.id),\n      });\n    }\n\n    return suspicious;\n  }\n\n  private generateSecurityRecommendations(events: AuditEvent[]): string[] {\n    const recommendations: string[] = [];\n\n    const violations = events.filter((e) => e.type === \"permission_denied\");\n    if (violations.length > 100) {\n      recommendations.push(\n        \"High number of permission violations detected. Review plugin permissions.\",\n      );\n    }\n\n    const suspiciousEvents = events.filter(\n      (e) => e.type === \"suspicious_keyword\",\n    );\n    if (suspiciousEvents.length > 0) {\n      recommendations.push(\n        \"Plugins with suspicious keywords detected. Review manually.\",\n      );\n    }\n\n    if (this.sandboxes.size > 20) {\n      recommendations.push(\n        \"Large number of active sandboxes. Consider resource optimization.\",\n      );\n    }\n\n    if (recommendations.length === 0) {\n      recommendations.push(\"No security issues detected. Continue monitoring.\");\n    }\n\n    return recommendations;\n  }\n}\n\nexport class PluginSandbox {\n  private pluginName: string;\n  private config: SandboxConfig;\n  private worker: Worker | null = null;\n  private messageChannel: MessageChannel | null = null;\n  private initialized = false;\n\n  constructor(pluginName: string, config: SandboxConfig) {\n    this.pluginName = pluginName;\n    this.config = config;\n  }\n\n  async initialize(): Promise<void> {\n    if (this.initialized) return;\n\n    try {\n      // Create dedicated worker for plugin execution\n      const workerCode = this.generateWorkerCode();\n      const workerBlob = new Blob([workerCode], {\n        type: \"application/javascript\",\n      });\n      this.worker = new Worker(URL.createObjectURL(workerBlob));\n\n      this.messageChannel = new MessageChannel();\n\n      // Set up secure communication channel\n      this.worker.postMessage(\n        {\n          type: \"initialize\",\n          config: this.config,\n          port: this.messageChannel.port1,\n        },\n        [this.messageChannel.port1],\n      );\n\n      // Wait for initialization confirmation\n      await this.waitForInitialization();\n      this.initialized = true;\n    } catch (error) {\n      throw new SecurityError(\n        `Failed to initialize sandbox for ${this.pluginName}: ${error}`,\n      );\n    }\n  }\n\n  async execute(code: string, context: any): Promise<any> {\n    if (!this.initialized || !this.worker || !this.messageChannel) {\n      throw new SecurityError(\"Sandbox not initialized\");\n    }\n\n    return new Promise((resolve, reject) => {\n      const timeout = setTimeout(() => {\n        reject(new SecurityError(\"Plugin execution timeout\"));\n      }, this.config.timeoutLimit);\n\n      const messageHandler = (event: MessageEvent) => {\n        clearTimeout(timeout);\n        this.messageChannel!.port2.removeEventListener(\n          \"message\",\n          messageHandler,\n        );\n\n        if (event.data.error) {\n          reject(new SecurityError(event.data.error));\n        } else {\n          resolve(event.data.result);\n        }\n      };\n\n      this.messageChannel?.port2.addEventListener(\"message\", messageHandler);\n      this.messageChannel?.port2.start();\n\n      this.messageChannel?.port2.postMessage({\n        type: \"execute\",\n        code,\n        context,\n      });\n    });\n  }\n\n  getConfig(): SandboxConfig {\n    return { ...this.config };\n  }\n\n  async destroy(): Promise<void> {\n    if (this.worker) {\n      this.worker.terminate();\n      this.worker = null;\n    }\n    if (this.messageChannel) {\n      this.messageChannel.port1.close();\n      this.messageChannel.port2.close();\n      this.messageChannel = null;\n    }\n    this.initialized = false;\n  }\n\n  private generateWorkerCode(): string {\n    return `\n      let port = null;\n      let config = null;\n      \n      self.onmessage = function(event) {\n        if (event.data.type === 'initialize') {\n          config = event.data.config;\n          port = event.data.port;\n          port.onmessage = handleMessage;\n          port.postMessage({ type: 'initialized' });\n        }\n      };\n      \n      function handleMessage(event) {\n        if (event.data.type === 'execute') {\n          try {\n            // Create restricted execution environment\n            const restrictedGlobals = createRestrictedEnvironment();\n            const result = executeInSandbox(event.data.code, event.data.context, restrictedGlobals);\n            port.postMessage({ result });\n          } catch (error) {\n            port.postMessage({ error: error.message });\n          }\n        }\n      }\n      \n      function createRestrictedEnvironment() {\n        // Create a restricted global environment\n        const restricted = {};\n        \n        // Allow only safe APIs based on permissions\n        if (config.allowedAPIs.includes('data.read')) {\n          restricted.console = { log: console.log };\n        }\n        \n        // Add other allowed APIs based on permissions\n        return restricted;\n      }\n      \n      function executeInSandbox(code, context, globals) {\n        // Simple sandbox execution - in production, use a more robust solution\n        const func = new Function('context', 'globals', \\`\n          with (globals) {\n            \\${code}\n          }\n        \\`);\n        return func(context, globals);\n      }\n    `;\n  }\n\n  private async waitForInitialization(): Promise<void> {\n    if (!this.messageChannel) {\n      throw new SecurityError(\"Message channel not available\");\n    }\n\n    return new Promise((resolve, reject) => {\n      const timeout = setTimeout(() => {\n        reject(new SecurityError(\"Sandbox initialization timeout\"));\n      }, 5000);\n\n      const messageHandler = (event: MessageEvent) => {\n        if (event.data.type === \"initialized\") {\n          clearTimeout(timeout);\n          this.messageChannel?.port2.removeEventListener(\n            \"message\",\n            messageHandler,\n          );\n          resolve();\n        }\n      };\n\n      this.messageChannel?.port2.addEventListener(\"message\", messageHandler);\n      this.messageChannel?.port2.start();\n    });\n  }\n}\n\nexport interface SandboxConfig {\n  allowedAPIs: string[];\n  memoryLimit: number;\n  timeoutLimit: number;\n  networkAccess: boolean;\n  permissions: PluginPermission[];\n}\n\nexport class SecurityError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = \"SecurityError\";\n  }\n}\n\nexport class AuditLogger {\n  private events: AuditEvent[] = [];\n  private maxEvents = 10000;\n\n  async initialize(): Promise<void> {\n    // Initialize audit logging\n  }\n\n  log(category: string, type: string, data: any): void {\n    const event: AuditEvent = {\n      id: this.generateEventId(),\n      category,\n      type,\n      data,\n      timestamp: Date.now(),\n    };\n\n    this.events.push(event);\n\n    // Maintain size limit\n    if (this.events.length > this.maxEvents) {\n      this.events.shift();\n    }\n  }\n\n  async getEvents(filter?: EventFilter): Promise<AuditEvent[]> {\n    let filtered = [...this.events];\n\n    if (filter) {\n      if (filter.category) {\n        filtered = filtered.filter((e) => e.category === filter.category);\n      }\n      if (filter.type) {\n        filtered = filtered.filter((e) => e.type === filter.type);\n      }\n      if (filter.since) {\n        filtered = filtered.filter((e) => e.timestamp >= filter.since!);\n      }\n      if (filter.limit) {\n        filtered = filtered.slice(-filter.limit);\n      }\n    }\n\n    return filtered;\n  }\n\n  private generateEventId(): string {\n    return `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n  }\n}\n\nexport interface AuditEvent {\n  id: string;\n  category: string;\n  type: string;\n  data: any;\n  timestamp: number;\n}\n\nexport interface EventFilter {\n  category?: string;\n  type?: string;\n  since?: number;\n  limit?: number;\n}\n\nexport interface SecurityReport {\n  timestamp: string;\n  summary: {\n    totalPlugins: number;\n    activeSandboxes: number;\n    securityEvents: number;\n    violations: number;\n    suspiciousActivity: number;\n  };\n  violations: AuditEvent[];\n  suspiciousActivity: SuspiciousActivity[];\n  recommendations: string[];\n}\n\nexport interface SuspiciousActivity {\n  type: string;\n  description: string;\n  severity: \"low\" | \"medium\" | \"high\";\n  events: string[];\n}\n\nexport class SecurityPolicySet {\n  private policies: SecurityPolicy[] = [];\n\n  async loadDefault(): Promise<void> {\n    this.policies = [\n      {\n        name: \"default\",\n        allowedResources: [\"data\", \"storage\", \"ui\", \"core\"],\n        blockedResources: [\"filesystem\"],\n        maxMemoryMB: 50,\n        maxExecutionTimeMs: 30000,\n      },\n    ];\n  }\n\n  isPermissionAllowed(permission: PluginPermission): boolean {\n    return this.policies.some(\n      (policy) =>\n        policy.allowedResources.includes(permission.resource) &&\n        !policy.blockedResources.includes(permission.resource),\n    );\n  }\n}\n\nexport interface SecurityPolicy {\n  name: string;\n  allowedResources: string[];\n  blockedResources: string[];\n  maxMemoryMB: number;\n  maxExecutionTimeMs: number;\n}\n","export class ResourceManager {\n  private resourceQuotas: Map<string, ResourceQuota>;\n  private activeMonitors: Map<string, ResourceMonitor>;\n  private globalLimits: GlobalResourceLimits;\n  private initialized = false;\n\n  constructor() {\n    this.resourceQuotas = new Map();\n    this.activeMonitors = new Map();\n    this.globalLimits = {\n      maxTotalMemoryMB: 1024, // 1GB total for all plugins\n      maxTotalCPUPercent: 80,\n      maxConcurrentPlugins: 20,\n      maxExecutionTimeMs: 300000, // 5 minutes\n    };\n  }\n\n  async initialize(): Promise<void> {\n    if (this.initialized) return;\n\n    // Set up global resource monitoring\n    await this.setupGlobalMonitoring();\n    this.initialized = true;\n  }\n\n  async allocate(pluginName: string): Promise<ResourceAllocation> {\n    if (!this.initialized) {\n      throw new Error(\"ResourceManager not initialized\");\n    }\n\n    const quota = this.getQuota(pluginName);\n    const currentUsage = await this.getCurrentGlobalUsage();\n\n    // Check if allocation would exceed global limits\n    if (!this.canAllocate(quota, currentUsage)) {\n      throw new ResourceError(\n        `Resource allocation would exceed global limits for plugin: ${pluginName}`,\n      );\n    }\n\n    const allocation: ResourceAllocation = {\n      pluginName,\n      memoryMB: quota.memoryMB,\n      cpuPercent: quota.cpuPercent,\n      diskMB: quota.diskMB,\n      networkBandwidthKbps: quota.networkBandwidthKbps,\n      allocatedAt: Date.now(),\n      status: \"allocated\",\n    };\n\n    // Track allocation\n    this.trackAllocation(allocation);\n\n    return allocation;\n  }\n\n  async release(pluginName: string): Promise<void> {\n    // Stop monitoring\n    const monitor = this.activeMonitors.get(pluginName);\n    if (monitor) {\n      await monitor.stop();\n      this.activeMonitors.delete(pluginName);\n    }\n\n    // Clean up allocation tracking\n    this.cleanupAllocation(pluginName);\n  }\n\n  async createMonitor(pluginName: string): Promise<ResourceMonitor> {\n    const quota = this.getQuota(pluginName);\n    const monitor = new ResourceMonitor(pluginName, quota);\n\n    await monitor.start();\n    this.activeMonitors.set(pluginName, monitor);\n\n    return monitor;\n  }\n\n  getQuota(pluginName: string): ResourceQuota {\n    if (this.resourceQuotas.has(pluginName)) {\n      return this.resourceQuotas.get(pluginName)!;\n    }\n\n    // Return default quota\n    return {\n      memoryMB: 50,\n      cpuPercent: 10,\n      diskMB: 100,\n      networkBandwidthKbps: 1000,\n      maxExecutionTimeMs: 30000,\n    };\n  }\n\n  setQuota(pluginName: string, quota: ResourceQuota): void {\n    this.resourceQuotas.set(pluginName, quota);\n  }\n\n  async getUsage(pluginName: string): Promise<ResourceUsage | null> {\n    const monitor = this.activeMonitors.get(pluginName);\n    if (!monitor) return null;\n\n    return monitor.getCurrentUsage();\n  }\n\n  async getAllUsage(): Promise<Map<string, ResourceUsage>> {\n    const usage = new Map<string, ResourceUsage>();\n\n    for (const [pluginName, monitor] of this.activeMonitors) {\n      try {\n        const pluginUsage = await monitor.getCurrentUsage();\n        usage.set(pluginName, pluginUsage);\n      } catch (error) {\n        console.warn(`Failed to get usage for plugin ${pluginName}:`, error);\n      }\n    }\n\n    return usage;\n  }\n\n  async generateReport(): Promise<ResourceReport> {\n    const allUsage = await this.getAllUsage();\n    const globalUsage = await this.getCurrentGlobalUsage();\n\n    const pluginReports: PluginResourceReport[] = [];\n    for (const [pluginName, usage] of allUsage) {\n      const quota = this.getQuota(pluginName);\n      const violations = this.detectViolations(usage, quota);\n\n      pluginReports.push({\n        pluginName,\n        usage,\n        quota,\n        violations,\n        efficiency: this.calculateEfficiency(usage, quota),\n      });\n    }\n\n    // Calculate aggregated statistics\n    const summary = this.calculateSummary(pluginReports, globalUsage);\n\n    return {\n      timestamp: new Date().toISOString(),\n      summary,\n      plugins: pluginReports,\n      globalLimits: this.globalLimits,\n      recommendations: this.generateRecommendations(pluginReports, summary),\n    };\n  }\n\n  async optimizeResources(): Promise<OptimizationResult> {\n    const report = await this.generateReport();\n    const optimizations: ResourceOptimization[] = [];\n\n    // Identify over-allocated plugins\n    for (const plugin of report.plugins) {\n      if (plugin.efficiency < 0.3) {\n        // Using less than 30% of allocated resources\n        optimizations.push({\n          pluginName: plugin.pluginName,\n          type: \"reduce_allocation\",\n          description: `Reduce allocation for underutilized plugin`,\n          estimatedSavings: {\n            memoryMB: plugin.quota.memoryMB * 0.5,\n            cpuPercent: plugin.quota.cpuPercent * 0.5,\n          },\n        });\n      }\n\n      // Identify plugins exceeding quotas\n      if (plugin.violations.length > 0) {\n        optimizations.push({\n          pluginName: plugin.pluginName,\n          type: \"increase_allocation\",\n          description: `Increase allocation for over-utilized plugin`,\n          estimatedSavings: {\n            memoryMB: -plugin.quota.memoryMB * 0.2,\n            cpuPercent: -plugin.quota.cpuPercent * 0.2,\n          },\n        });\n      }\n    }\n\n    return {\n      totalOptimizations: optimizations.length,\n      optimizations,\n      estimatedTotalSavings: this.calculateTotalSavings(optimizations),\n    };\n  }\n\n  async enforceQuotas(): Promise<QuotaEnforcementResult> {\n    const violations: QuotaViolation[] = [];\n    const actions: EnforcementAction[] = [];\n\n    for (const [pluginName, monitor] of this.activeMonitors) {\n      try {\n        const usage = await monitor.getCurrentUsage();\n        const quota = this.getQuota(pluginName);\n        const pluginViolations = this.detectViolations(usage, quota);\n\n        if (pluginViolations.length > 0) {\n          violations.push(\n            ...pluginViolations.map((v) => ({ ...v, pluginName })),\n          );\n\n          // Take enforcement actions\n          for (const violation of pluginViolations) {\n            const action = await this.takeEnforcementAction(\n              pluginName,\n              violation,\n            );\n            actions.push(action);\n          }\n        }\n      } catch (error) {\n        console.warn(\n          `Failed to enforce quotas for plugin ${pluginName}:`,\n          error,\n        );\n      }\n    }\n\n    return {\n      timestamp: Date.now(),\n      violations,\n      actions,\n      summary: {\n        totalViolations: violations.length,\n        actionsSuccessful: actions.filter((a) => a.success).length,\n        actionsFailed: actions.filter((a) => !a.success).length,\n      },\n    };\n  }\n\n  private async setupGlobalMonitoring(): Promise<void> {\n    // Set up periodic global resource monitoring\n    setInterval(async () => {\n      try {\n        await this.checkGlobalLimits();\n      } catch (error) {\n        console.warn(\"Global resource monitoring failed:\", error);\n      }\n    }, 5000); // Check every 5 seconds\n  }\n\n  private async getCurrentGlobalUsage(): Promise<GlobalResourceUsage> {\n    const allUsage = await this.getAllUsage();\n\n    let totalMemoryMB = 0;\n    let totalCPUPercent = 0;\n    let totalDiskMB = 0;\n    let totalNetworkKbps = 0;\n\n    for (const usage of allUsage.values()) {\n      totalMemoryMB += usage.memoryMB;\n      totalCPUPercent += usage.cpuPercent;\n      totalDiskMB += usage.diskMB;\n      totalNetworkKbps += usage.networkKbps;\n    }\n\n    return {\n      totalMemoryMB,\n      totalCPUPercent,\n      totalDiskMB,\n      totalNetworkKbps,\n      activePlugins: allUsage.size,\n      timestamp: Date.now(),\n    };\n  }\n\n  private canAllocate(\n    quota: ResourceQuota,\n    currentUsage: GlobalResourceUsage,\n  ): boolean {\n    return (\n      currentUsage.totalMemoryMB + quota.memoryMB <=\n        this.globalLimits.maxTotalMemoryMB &&\n      currentUsage.totalCPUPercent + quota.cpuPercent <=\n        this.globalLimits.maxTotalCPUPercent &&\n      currentUsage.activePlugins < this.globalLimits.maxConcurrentPlugins\n    );\n  }\n\n  private trackAllocation(allocation: ResourceAllocation): void {\n    // In production, this would persist allocation data\n    console.debug(\"Resource allocated:\", allocation);\n  }\n\n  private cleanupAllocation(pluginName: string): void {\n    // Clean up allocation tracking\n    console.debug(\"Resource allocation cleaned up:\", pluginName);\n  }\n\n  private detectViolations(\n    usage: ResourceUsage,\n    quota: ResourceQuota,\n  ): ResourceViolation[] {\n    const violations: ResourceViolation[] = [];\n\n    if (usage.memoryMB > quota.memoryMB) {\n      violations.push({\n        type: \"memory_exceeded\",\n        severity: \"high\",\n        current: usage.memoryMB,\n        limit: quota.memoryMB,\n        description: `Memory usage (${usage.memoryMB}MB) exceeds quota (${quota.memoryMB}MB)`,\n      });\n    }\n\n    if (usage.cpuPercent > quota.cpuPercent) {\n      violations.push({\n        type: \"cpu_exceeded\",\n        severity: \"medium\",\n        current: usage.cpuPercent,\n        limit: quota.cpuPercent,\n        description: `CPU usage (${usage.cpuPercent}%) exceeds quota (${quota.cpuPercent}%)`,\n      });\n    }\n\n    if (usage.diskMB > quota.diskMB) {\n      violations.push({\n        type: \"disk_exceeded\",\n        severity: \"low\",\n        current: usage.diskMB,\n        limit: quota.diskMB,\n        description: `Disk usage (${usage.diskMB}MB) exceeds quota (${quota.diskMB}MB)`,\n      });\n    }\n\n    return violations;\n  }\n\n  private calculateEfficiency(\n    usage: ResourceUsage,\n    quota: ResourceQuota,\n  ): number {\n    // Calculate resource utilization efficiency (0-1)\n    const memoryEfficiency = Math.min(usage.memoryMB / quota.memoryMB, 1);\n    const cpuEfficiency = Math.min(usage.cpuPercent / quota.cpuPercent, 1);\n\n    return (memoryEfficiency + cpuEfficiency) / 2;\n  }\n\n  private calculateSummary(\n    reports: PluginResourceReport[],\n    globalUsage: GlobalResourceUsage,\n  ): ResourceSummary {\n    const totalAllocatedMemory = reports.reduce(\n      (sum, r) => sum + r.quota.memoryMB,\n      0,\n    );\n    const totalUsedMemory = reports.reduce(\n      (sum, r) => sum + r.usage.memoryMB,\n      0,\n    );\n    const totalViolations = reports.reduce(\n      (sum, r) => sum + r.violations.length,\n      0,\n    );\n\n    return {\n      totalPlugins: reports.length,\n      totalAllocatedMemoryMB: totalAllocatedMemory,\n      totalUsedMemoryMB: totalUsedMemory,\n      memoryUtilization:\n        totalAllocatedMemory > 0 ? totalUsedMemory / totalAllocatedMemory : 0,\n      totalViolations,\n      globalUsage,\n    };\n  }\n\n  private generateRecommendations(\n    reports: PluginResourceReport[],\n    summary: ResourceSummary,\n  ): string[] {\n    const recommendations: string[] = [];\n\n    if (summary.memoryUtilization < 0.3) {\n      recommendations.push(\n        \"Consider reducing memory allocations - overall utilization is low\",\n      );\n    }\n\n    if (summary.totalViolations > 0) {\n      recommendations.push(\n        `${summary.totalViolations} quota violations detected - review plugin resource requirements`,\n      );\n    }\n\n    const inefficientPlugins = reports.filter((r) => r.efficiency < 0.2).length;\n    if (inefficientPlugins > 0) {\n      recommendations.push(\n        `${inefficientPlugins} plugins are underutilizing resources - consider optimization`,\n      );\n    }\n\n    if (\n      summary.globalUsage.totalMemoryMB >\n      this.globalLimits.maxTotalMemoryMB * 0.9\n    ) {\n      recommendations.push(\n        \"Approaching global memory limit - consider optimization or limit increases\",\n      );\n    }\n\n    return recommendations;\n  }\n\n  private calculateTotalSavings(\n    optimizations: ResourceOptimization[],\n  ): ResourceSavings {\n    let totalMemoryMB = 0;\n    let totalCPUPercent = 0;\n\n    for (const opt of optimizations) {\n      if (opt.estimatedSavings) {\n        totalMemoryMB += opt.estimatedSavings.memoryMB || 0;\n        totalCPUPercent += opt.estimatedSavings.cpuPercent || 0;\n      }\n    }\n\n    return { memoryMB: totalMemoryMB, cpuPercent: totalCPUPercent };\n  }\n\n  private async takeEnforcementAction(\n    pluginName: string,\n    violation: ResourceViolation,\n  ): Promise<EnforcementAction> {\n    try {\n      switch (violation.type) {\n        case \"memory_exceeded\":\n          // In production, this might trigger memory cleanup or plugin throttling\n          console.warn(\n            `Memory violation for plugin ${pluginName} - implementing throttling`,\n          );\n          break;\n        case \"cpu_exceeded\":\n          // Implement CPU throttling\n          console.warn(\n            `CPU violation for plugin ${pluginName} - implementing throttling`,\n          );\n          break;\n        case \"disk_exceeded\":\n          // Clean up temporary files\n          console.warn(\n            `Disk violation for plugin ${pluginName} - cleaning up resources`,\n          );\n          break;\n      }\n\n      return {\n        pluginName,\n        violationType: violation.type,\n        action: \"throttle\",\n        success: true,\n        timestamp: Date.now(),\n      };\n    } catch (error) {\n      return {\n        pluginName,\n        violationType: violation.type,\n        action: \"throttle\",\n        success: false,\n        error: String(error),\n        timestamp: Date.now(),\n      };\n    }\n  }\n\n  private async checkGlobalLimits(): Promise<void> {\n    const globalUsage = await this.getCurrentGlobalUsage();\n\n    if (globalUsage.totalMemoryMB > this.globalLimits.maxTotalMemoryMB) {\n      console.warn(\n        \"Global memory limit exceeded:\",\n        globalUsage.totalMemoryMB,\n        \"MB\",\n      );\n      // Trigger global resource cleanup\n    }\n\n    if (globalUsage.totalCPUPercent > this.globalLimits.maxTotalCPUPercent) {\n      console.warn(\n        \"Global CPU limit exceeded:\",\n        globalUsage.totalCPUPercent,\n        \"%\",\n      );\n      // Trigger CPU throttling\n    }\n  }\n\n  async destroy(): Promise<void> {\n    // Stop all monitors\n    for (const monitor of this.activeMonitors.values()) {\n      try {\n        await monitor.stop();\n      } catch (error) {\n        console.warn(\"Failed to stop resource monitor:\", error);\n      }\n    }\n\n    this.activeMonitors.clear();\n    this.resourceQuotas.clear();\n    this.initialized = false;\n  }\n}\n\nexport class ResourceMonitor {\n  private pluginName: string;\n  private quota: ResourceQuota;\n  private monitoring = false;\n  private monitoringInterval: any = null;\n  private currentUsage: ResourceUsage;\n\n  constructor(pluginName: string, quota: ResourceQuota) {\n    this.pluginName = pluginName;\n    this.quota = quota;\n    this.currentUsage = {\n      memoryMB: 0,\n      cpuPercent: 0,\n      diskMB: 0,\n      networkKbps: 0,\n      timestamp: Date.now(),\n    };\n  }\n\n  async start(): Promise<void> {\n    if (this.monitoring) return;\n\n    this.monitoring = true;\n    this.monitoringInterval = setInterval(async () => {\n      try {\n        await this.updateUsage();\n      } catch (error) {\n        console.warn(\n          `Resource monitoring failed for ${this.pluginName}:`,\n          error,\n        );\n      }\n    }, 1000); // Update every second\n  }\n\n  async stop(): Promise<void> {\n    if (!this.monitoring) return;\n\n    this.monitoring = false;\n    if (this.monitoringInterval) {\n      clearInterval(this.monitoringInterval);\n      this.monitoringInterval = null;\n    }\n  }\n\n  async getCurrentUsage(): Promise<ResourceUsage> {\n    return { ...this.currentUsage };\n  }\n\n  private async updateUsage(): Promise<void> {\n    // In production, this would use actual system monitoring APIs\n    // For now, we'll simulate resource usage\n    this.currentUsage = {\n      memoryMB: Math.random() * this.quota.memoryMB * 0.8, // Random usage up to 80% of quota\n      cpuPercent: Math.random() * this.quota.cpuPercent * 0.7,\n      diskMB: Math.random() * this.quota.diskMB * 0.5,\n      networkKbps: Math.random() * this.quota.networkBandwidthKbps * 0.3,\n      timestamp: Date.now(),\n    };\n  }\n}\n\nexport class ResourceError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = \"ResourceError\";\n  }\n}\n\n// Interface definitions\nexport interface ResourceQuota {\n  memoryMB: number;\n  cpuPercent: number;\n  diskMB: number;\n  networkBandwidthKbps: number;\n  maxExecutionTimeMs: number;\n}\n\nexport interface ResourceUsage {\n  memoryMB: number;\n  cpuPercent: number;\n  diskMB: number;\n  networkKbps: number;\n  timestamp: number;\n}\n\nexport interface ResourceAllocation {\n  pluginName: string;\n  memoryMB: number;\n  cpuPercent: number;\n  diskMB: number;\n  networkBandwidthKbps: number;\n  allocatedAt: number;\n  status: \"allocated\" | \"released\";\n}\n\nexport interface ResourceViolation {\n  type:\n    | \"memory_exceeded\"\n    | \"cpu_exceeded\"\n    | \"disk_exceeded\"\n    | \"network_exceeded\";\n  severity: \"low\" | \"medium\" | \"high\";\n  current: number;\n  limit: number;\n  description: string;\n}\n\nexport interface QuotaViolation extends ResourceViolation {\n  pluginName: string;\n}\n\nexport interface PluginResourceReport {\n  pluginName: string;\n  usage: ResourceUsage;\n  quota: ResourceQuota;\n  violations: ResourceViolation[];\n  efficiency: number;\n}\n\nexport interface ResourceReport {\n  timestamp: string;\n  summary: ResourceSummary;\n  plugins: PluginResourceReport[];\n  globalLimits: GlobalResourceLimits;\n  recommendations: string[];\n}\n\nexport interface ResourceSummary {\n  totalPlugins: number;\n  totalAllocatedMemoryMB: number;\n  totalUsedMemoryMB: number;\n  memoryUtilization: number;\n  totalViolations: number;\n  globalUsage: GlobalResourceUsage;\n}\n\nexport interface GlobalResourceLimits {\n  maxTotalMemoryMB: number;\n  maxTotalCPUPercent: number;\n  maxConcurrentPlugins: number;\n  maxExecutionTimeMs: number;\n}\n\nexport interface GlobalResourceUsage {\n  totalMemoryMB: number;\n  totalCPUPercent: number;\n  totalDiskMB: number;\n  totalNetworkKbps: number;\n  activePlugins: number;\n  timestamp: number;\n}\n\nexport interface ResourceOptimization {\n  pluginName: string;\n  type:\n    | \"reduce_allocation\"\n    | \"increase_allocation\"\n    | \"merge_resources\"\n    | \"schedule_differently\";\n  description: string;\n  estimatedSavings?: ResourceSavings;\n}\n\nexport interface ResourceSavings {\n  memoryMB?: number;\n  cpuPercent?: number;\n}\n\nexport interface OptimizationResult {\n  totalOptimizations: number;\n  optimizations: ResourceOptimization[];\n  estimatedTotalSavings: ResourceSavings;\n}\n\nexport interface EnforcementAction {\n  pluginName: string;\n  violationType: string;\n  action: \"throttle\" | \"suspend\" | \"terminate\" | \"cleanup\";\n  success: boolean;\n  error?: string;\n  timestamp: number;\n}\n\nexport interface QuotaEnforcementResult {\n  timestamp: number;\n  violations: QuotaViolation[];\n  actions: EnforcementAction[];\n  summary: {\n    totalViolations: number;\n    actionsSuccessful: number;\n    actionsFailed: number;\n  };\n}\n","export interface EventHandler<T = any> {\n  (data: T): void | Promise<void>;\n}\n\nexport interface EventSubscription {\n  unsubscribe(): void;\n}\n\nexport interface EventHistoryEntry {\n  event: string;\n  data: any;\n  timestamp: number;\n}\n\nexport class EventBus {\n  private handlers: Map<string, Set<EventHandler>>;\n  private wildcardHandlers: Set<EventHandler>;\n  private eventHistory: EventHistoryEntry[];\n  private maxHistorySize: number = 1000;\n  private isInitialized = false;\n\n  constructor() {\n    this.handlers = new Map();\n    this.wildcardHandlers = new Set();\n    this.eventHistory = [];\n  }\n\n  async initialize(): Promise<void> {\n    if (this.isInitialized) return;\n\n    // Set up global error handling for async event handlers\n    this.setupErrorHandling();\n    this.isInitialized = true;\n  }\n\n  publish<T>(event: string, data: T): void {\n    if (!this.isInitialized) {\n      console.warn(\"EventBus not initialized, call initialize() first\");\n      return;\n    }\n\n    // Add to history\n    this.addToHistory(event, data);\n\n    // Handle specific event listeners\n    const eventHandlers = this.handlers.get(event);\n    if (eventHandlers) {\n      for (const handler of eventHandlers) {\n        this.executeHandler(handler, data, event);\n      }\n    }\n\n    // Handle wildcard listeners\n    for (const handler of this.wildcardHandlers) {\n      this.executeHandler(handler, { event, data }, event);\n    }\n  }\n\n  subscribe<T>(event: string, handler: EventHandler<T>): EventSubscription {\n    if (!this.isInitialized) {\n      console.warn(\"EventBus not initialized, call initialize() first\");\n    }\n\n    if (event === \"*\") {\n      this.wildcardHandlers.add(handler as EventHandler);\n      return {\n        unsubscribe: () =>\n          this.wildcardHandlers.delete(handler as EventHandler),\n      };\n    }\n\n    if (!this.handlers.has(event)) {\n      this.handlers.set(event, new Set());\n    }\n\n    this.handlers.get(event)!.add(handler as EventHandler);\n\n    return {\n      unsubscribe: () => {\n        const handlers = this.handlers.get(event);\n        if (handlers) {\n          handlers.delete(handler as EventHandler);\n          if (handlers.size === 0) {\n            this.handlers.delete(event);\n          }\n        }\n      },\n    };\n  }\n\n  unsubscribe(event: string, handler: EventHandler): void {\n    if (event === \"*\") {\n      this.wildcardHandlers.delete(handler);\n      return;\n    }\n\n    const handlers = this.handlers.get(event);\n    if (handlers) {\n      handlers.delete(handler);\n      if (handlers.size === 0) {\n        this.handlers.delete(event);\n      }\n    }\n  }\n\n  once<T>(event: string, handler: EventHandler<T>): EventSubscription {\n    const onceHandler = (data: T) => {\n      handler(data);\n      subscription.unsubscribe();\n    };\n\n    const subscription = this.subscribe(event, onceHandler);\n    return subscription;\n  }\n\n  getEventHistory(event?: string): EventHistoryEntry[] {\n    if (event) {\n      return this.eventHistory.filter((entry) => entry.event === event);\n    }\n    return [...this.eventHistory];\n  }\n\n  clearEventHistory(): void {\n    this.eventHistory = [];\n  }\n\n  getActiveSubscriptions(): Map<string, number> {\n    const subscriptions = new Map<string, number>();\n\n    for (const [event, handlers] of this.handlers) {\n      subscriptions.set(event, handlers.size);\n    }\n\n    if (this.wildcardHandlers.size > 0) {\n      subscriptions.set(\"*\", this.wildcardHandlers.size);\n    }\n\n    return subscriptions;\n  }\n\n  async waitForEvent<T>(event: string, timeout = 30000): Promise<T> {\n    return new Promise((resolve, reject) => {\n      const timeoutId = setTimeout(() => {\n        subscription.unsubscribe();\n        reject(new Error(`Timeout waiting for event: ${event}`));\n      }, timeout);\n\n      const subscription = this.once<T>(event, (data: T) => {\n        clearTimeout(timeoutId);\n        resolve(data);\n      });\n    });\n  }\n\n  getMetrics(): EventBusMetrics {\n    return {\n      totalEvents: this.eventHistory.length,\n      uniqueEvents: new Set(this.eventHistory.map((e) => e.event)).size,\n      activeSubscriptions:\n        Array.from(this.handlers.entries()).reduce(\n          (sum, [, handlers]) => sum + handlers.size,\n          0,\n        ) + this.wildcardHandlers.size,\n      wildcardSubscriptions: this.wildcardHandlers.size,\n      historySize: this.eventHistory.length,\n      maxHistorySize: this.maxHistorySize,\n    };\n  }\n\n  destroy(): void {\n    this.handlers.clear();\n    this.wildcardHandlers.clear();\n    this.eventHistory = [];\n    this.isInitialized = false;\n  }\n\n  private executeHandler(\n    handler: EventHandler,\n    data: any,\n    event: string,\n  ): void {\n    try {\n      const result = handler(data);\n\n      // Handle async handlers\n      if (result instanceof Promise) {\n        result.catch((error) => {\n          console.error(`Error in async event handler for ${event}:`, error);\n          this.publish(\"eventbus:error\", {\n            event,\n            error,\n            handler: handler.toString(),\n          });\n        });\n      }\n    } catch (error) {\n      console.error(`Error in event handler for ${event}:`, error);\n      this.publish(\"eventbus:error\", {\n        event,\n        error,\n        handler: handler.toString(),\n      });\n    }\n  }\n\n  private addToHistory(event: string, data: any): void {\n    this.eventHistory.push({\n      event,\n      data,\n      timestamp: Date.now(),\n    });\n\n    // Maintain history size limit\n    if (this.eventHistory.length > this.maxHistorySize) {\n      this.eventHistory.shift();\n    }\n  }\n\n  private setupErrorHandling(): void {\n    // Handle uncaught promise rejections from event handlers\n    if (typeof window !== \"undefined\") {\n      window.addEventListener(\"unhandledrejection\", (event) => {\n        this.publish(\"eventbus:unhandled-rejection\", {\n          reason: event.reason,\n          timestamp: Date.now(),\n        });\n      });\n    }\n  }\n}\n\nexport interface EventBusMetrics {\n  totalEvents: number;\n  uniqueEvents: number;\n  activeSubscriptions: number;\n  wildcardSubscriptions: number;\n  historySize: number;\n  maxHistorySize: number;\n}\n\n// Event Bus Factory for creating isolated instances\nexport class EventBusFactory {\n  private static instances: Map<string, EventBus> = new Map();\n\n  static create(name: string): EventBus {\n    if (!this.instances.has(name)) {\n      this.instances.set(name, new EventBus());\n    }\n    return this.instances.get(name)!;\n  }\n\n  static destroy(name: string): void {\n    const instance = this.instances.get(name);\n    if (instance) {\n      instance.destroy();\n      this.instances.delete(name);\n    }\n  }\n\n  static getAll(): Map<string, EventBus> {\n    return new Map(this.instances);\n  }\n}\n","import {\n  IPlugin,\n  PluginManifest,\n  PluginContext,\n  PluginCapability,\n} from \"../interfaces/plugin.js\";\nimport { PluginRegistry } from \"./plugin-registry.js\";\nimport { PluginLoader } from \"./plugin-loader.js\";\nimport { SecurityManager } from \"../security/security-manager.js\";\nimport { ResourceManager } from \"./resource-manager.js\";\nimport { EventBus } from \"../communication/event-bus.js\";\n\nexport class PluginManager {\n  private registry: PluginRegistry;\n  private loader: PluginLoader;\n  private security: SecurityManager;\n  private resources: ResourceManager;\n  private eventBus: EventBus;\n  private activePlugins: Map<string, IPlugin>;\n  private pluginContexts: Map<string, PluginContext>;\n  private initialized = false;\n\n  constructor() {\n    this.registry = new PluginRegistry();\n    this.loader = new PluginLoader();\n    this.security = new SecurityManager();\n    this.resources = new ResourceManager();\n    this.eventBus = new EventBus();\n    this.activePlugins = new Map();\n    this.pluginContexts = new Map();\n  }\n\n  async initialize(): Promise<void> {\n    if (this.initialized) return;\n\n    try {\n      await this.eventBus.initialize();\n      await this.security.initialize();\n      await this.resources.initialize();\n\n      this.initialized = true;\n\n      // Load core plugin definitions\n      await this.loadCorePluginDefinitions();\n\n      // Auto-discover plugins (skip in test environment)\n      if (typeof process === \"undefined\" || process.env.NODE_ENV !== \"test\") {\n        try {\n          await this.discoverPlugins();\n        } catch (error) {\n          console.warn(\n            \"Plugin discovery failed (this is normal in test environments):\",\n            String(error),\n          );\n        }\n      }\n\n      this.eventBus.publish(\"plugin-manager:initialized\", {\n        timestamp: Date.now(),\n      });\n    } catch (error) {\n      throw new Error(`Failed to initialize PluginManager: ${error}`);\n    }\n  }\n\n  async registerPlugin(manifest: PluginManifest): Promise<void> {\n    if (!this.initialized) {\n      throw new Error(\"PluginManager not initialized\");\n    }\n\n    // Validate manifest\n    const validation = this.registry.validateManifest(manifest);\n    if (!validation.isValid) {\n      throw new Error(\n        `Invalid plugin manifest: ${validation.errors.join(\", \")}`,\n      );\n    }\n\n    // Security validation\n    await this.security.validatePlugin(manifest);\n\n    // Version compatibility check\n    if (!this.isCompatible(manifest)) {\n      throw new Error(\n        `Plugin ${manifest.name} is not compatible with this version`,\n      );\n    }\n\n    // Register in registry\n    await this.registry.register(manifest);\n\n    this.eventBus.publish(\"plugin:registered\", { manifest });\n  }\n\n  async loadPlugin(pluginName: string): Promise<IPlugin> {\n    if (!this.initialized) {\n      throw new Error(\"PluginManager not initialized\");\n    }\n\n    const manifest = this.registry.getManifest(pluginName);\n    if (!manifest) {\n      throw new Error(`Plugin not found: ${pluginName}`);\n    }\n\n    // Check if already loaded\n    if (this.activePlugins.has(pluginName)) {\n      return this.activePlugins.get(pluginName)!;\n    }\n\n    try {\n      // Load plugin dependencies first\n      await this.loadDependencies(manifest);\n\n      // Load plugin code\n      const plugin = await this.loader.load(manifest);\n\n      // Create plugin context\n      const context = await this.createPluginContext(manifest);\n      this.pluginContexts.set(pluginName, context);\n\n      // Initialize plugin\n      await plugin.initialize(context);\n\n      // Register in active plugins\n      this.activePlugins.set(pluginName, plugin);\n\n      this.eventBus.publish(\"plugin:loaded\", { pluginName, manifest });\n\n      return plugin;\n    } catch (error) {\n      this.eventBus.publish(\"plugin:load-failed\", {\n        pluginName,\n        error: String(error),\n      });\n      throw error;\n    }\n  }\n\n  async activatePlugin(pluginName: string): Promise<void> {\n    if (!this.initialized) {\n      throw new Error(\"PluginManager not initialized\");\n    }\n\n    const plugin = await this.loadPlugin(pluginName);\n\n    try {\n      // Allocate resources\n      await this.resources.allocate(pluginName);\n\n      // Create security sandbox\n      await this.security.createSandbox(pluginName);\n\n      // Activate plugin\n      await plugin.activate();\n\n      this.eventBus.publish(\"plugin:activated\", { pluginName });\n    } catch (error) {\n      this.eventBus.publish(\"plugin:activation-failed\", {\n        pluginName,\n        error: String(error),\n      });\n      throw error;\n    }\n  }\n\n  async deactivatePlugin(pluginName: string): Promise<void> {\n    const plugin = this.activePlugins.get(pluginName);\n    if (!plugin) {\n      throw new Error(`Plugin not active: ${pluginName}`);\n    }\n\n    try {\n      // Deactivate plugin\n      await plugin.deactivate();\n\n      // Release resources\n      await this.resources.release(pluginName);\n\n      // Destroy sandbox\n      await this.security.destroySandbox(pluginName);\n\n      this.eventBus.publish(\"plugin:deactivated\", { pluginName });\n    } catch (error) {\n      this.eventBus.publish(\"plugin:deactivation-failed\", {\n        pluginName,\n        error: String(error),\n      });\n      throw error;\n    }\n  }\n\n  async unloadPlugin(pluginName: string): Promise<void> {\n    const plugin = this.activePlugins.get(pluginName);\n    if (plugin) {\n      // Deactivate first if active\n      try {\n        await this.deactivatePlugin(pluginName);\n      } catch (error) {\n        console.warn(\n          `Failed to deactivate plugin ${pluginName} during unload:`,\n          error,\n        );\n      }\n\n      // Cleanup plugin\n      try {\n        await plugin.cleanup();\n      } catch (error) {\n        console.warn(`Plugin cleanup failed for ${pluginName}:`, error);\n      }\n\n      this.activePlugins.delete(pluginName);\n      this.pluginContexts.delete(pluginName);\n    }\n\n    await this.loader.unload(pluginName);\n\n    this.eventBus.publish(\"plugin:unloaded\", { pluginName });\n  }\n\n  async executePlugin(\n    pluginName: string,\n    operation: string,\n    params: any,\n  ): Promise<any> {\n    const plugin = this.activePlugins.get(pluginName);\n    if (!plugin) {\n      throw new Error(`Plugin not active: ${pluginName}`);\n    }\n\n    // Check permissions\n    await this.security.checkPermission(pluginName, operation, params);\n\n    // Monitor resource usage\n    const resourceMonitor = await this.resources.createMonitor(pluginName);\n\n    try {\n      const startTime = performance.now();\n      const result = await plugin.execute(operation, params);\n      const endTime = performance.now();\n\n      this.eventBus.publish(\"plugin:operation-completed\", {\n        pluginName,\n        operation,\n        duration: endTime - startTime,\n        success: true,\n      });\n\n      return result;\n    } catch (error) {\n      this.eventBus.publish(\"plugin:operation-failed\", {\n        pluginName,\n        operation,\n        error: String(error),\n      });\n      throw error;\n    } finally {\n      await resourceMonitor.stop();\n    }\n  }\n\n  async configurePlugin(pluginName: string, settings: any): Promise<void> {\n    const plugin = this.activePlugins.get(pluginName);\n    if (!plugin) {\n      throw new Error(`Plugin not active: ${pluginName}`);\n    }\n\n    try {\n      await plugin.configure(settings);\n      this.eventBus.publish(\"plugin:configured\", { pluginName, settings });\n    } catch (error) {\n      this.eventBus.publish(\"plugin:configuration-failed\", {\n        pluginName,\n        error: String(error),\n      });\n      throw error;\n    }\n  }\n\n  // Plugin Discovery and Management\n  async discoverPlugins(): Promise<PluginManifest[]> {\n    if (!this.initialized) {\n      throw new Error(\"PluginManager not initialized\");\n    }\n\n    try {\n      // Discover from standard locations\n      const discovered = await this.loader.discoverPlugins([\n        \"./plugins/\",\n        \"../plugins/\",\n        \"/plugins/\",\n      ]);\n\n      const manifests: PluginManifest[] = [];\n      for (const path of discovered) {\n        try {\n          const manifest = await this.loader.loadManifest(path);\n          await this.registerPlugin(manifest);\n          manifests.push(manifest);\n        } catch (error) {\n          console.warn(`Failed to load plugin from ${path}:`, error);\n        }\n      }\n\n      this.eventBus.publish(\"plugins:discovered\", {\n        count: manifests.length,\n        manifests,\n      });\n      return manifests;\n    } catch (error) {\n      this.eventBus.publish(\"plugins:discovery-failed\", {\n        error: String(error),\n      });\n      throw error;\n    }\n  }\n\n  getActivePlugins(): string[] {\n    return Array.from(this.activePlugins.keys());\n  }\n\n  getRegisteredPlugins(): string[] {\n    return this.registry.getAllManifests().map((m) => m.name);\n  }\n\n  getPluginInfo(pluginName: string): PluginInfo | null {\n    const plugin = this.activePlugins.get(pluginName);\n    const manifest = this.registry.getManifest(pluginName);\n\n    if (!plugin || !manifest) {\n      return null;\n    }\n\n    return {\n      name: plugin.getName(),\n      version: plugin.getVersion(),\n      description: plugin.getDescription(),\n      author: plugin.getAuthor(),\n      category: manifest.category,\n      capabilities: plugin.getCapabilities(),\n      status: this.getPluginStatus(pluginName),\n      resourceUsage: this.resources.getUsage(pluginName),\n      dependencies: plugin.getDependencies(),\n      permissions: manifest.permissions,\n    };\n  }\n\n  getPluginsByCategory(category: string): string[] {\n    return this.registry.getPluginsByCategory(category);\n  }\n\n  searchPlugins(query: any): any[] {\n    return this.registry.search(query);\n  }\n\n  async getSystemStatus(): Promise<PluginSystemStatus> {\n    const securityReport = await this.security.generateSecurityReport();\n    const resourceReport = await this.resources.generateReport();\n\n    return {\n      initialized: this.initialized,\n      totalRegistered: this.registry.getAllManifests().length,\n      totalActive: this.activePlugins.size,\n      categorySummary: this.getCategorySummary(),\n      resourceUsage: resourceReport.summary,\n      securityStatus: {\n        violations: securityReport.violations.length,\n        suspiciousActivity: securityReport.suspiciousActivity.length,\n        activeSandboxes: securityReport.summary.activeSandboxes,\n      },\n      eventBusMetrics: this.eventBus.getMetrics(),\n    };\n  }\n\n  async hotReloadPlugin(pluginName: string): Promise<void> {\n    if (!this.activePlugins.has(pluginName)) {\n      throw new Error(`Plugin not active: ${pluginName}`);\n    }\n\n    const manifest = this.registry.getManifest(pluginName);\n    if (!manifest) {\n      throw new Error(`Plugin manifest not found: ${pluginName}`);\n    }\n\n    try {\n      // Save current state if supported\n      const plugin = this.activePlugins.get(pluginName)!;\n      let savedState: any = null;\n\n      if (typeof (plugin as any).saveState === \"function\") {\n        savedState = await (plugin as any).saveState();\n      }\n\n      // Unload current plugin\n      await this.unloadPlugin(pluginName);\n\n      // Reload plugin\n      const newPlugin = await this.loadPlugin(pluginName);\n      await this.activatePlugin(pluginName);\n\n      // Restore state if available\n      if (savedState && typeof (newPlugin as any).restoreState === \"function\") {\n        await (newPlugin as any).restoreState(savedState);\n      }\n\n      this.eventBus.publish(\"plugin:hot-reloaded\", { pluginName });\n    } catch (error) {\n      this.eventBus.publish(\"plugin:hot-reload-failed\", {\n        pluginName,\n        error: String(error),\n      });\n      throw error;\n    }\n  }\n\n  private async loadCorePluginDefinitions(): Promise<void> {\n    // Define core system plugins that should be available\n    const corePlugins = [\n      {\n        name: \"performance-monitor\",\n        version: \"1.0.0\",\n        description: \"System performance monitoring plugin\",\n        author: \"DataPrism Team\",\n        license: \"MIT\",\n        keywords: [\"monitoring\", \"performance\", \"system\"],\n        category: \"utility\" as const,\n        entryPoint: \"./core-plugins/performance-monitor.js\",\n        dependencies: [],\n        permissions: [{ resource: \"core\", access: \"read\" as const }],\n        configuration: {},\n        compatibility: {\n          minCoreVersion: \"0.1.0\",\n          browsers: [\"chrome\", \"firefox\", \"safari\", \"edge\"],\n        },\n      },\n    ];\n\n    for (const plugin of corePlugins) {\n      try {\n        await this.registerPlugin(plugin);\n      } catch (error) {\n        console.warn(`Failed to register core plugin ${plugin.name}:`, error);\n      }\n    }\n  }\n\n  private async loadDependencies(manifest: PluginManifest): Promise<void> {\n    for (const dep of manifest.dependencies) {\n      if (!dep.optional && !this.activePlugins.has(dep.name)) {\n        await this.loadPlugin(dep.name);\n        await this.activatePlugin(dep.name);\n      }\n    }\n  }\n\n  private async createPluginContext(\n    manifest: PluginManifest,\n  ): Promise<PluginContext> {\n    const resourceQuota = this.resources.getQuota(manifest.name);\n    return {\n      pluginName: manifest.name,\n      coreVersion: \"0.1.0\", // TODO: Get from DataPrism Core\n      services: await this.createServiceProxy(manifest),\n      eventBus: this.eventBus,\n      logger: this.createPluginLogger(manifest.name),\n      config: await this.loadPluginConfig(manifest.name),\n      resources: {\n        maxMemoryMB: resourceQuota.memoryMB,\n        maxCpuPercent: resourceQuota.cpuPercent,\n        maxExecutionTime: resourceQuota.maxExecutionTimeMs,\n      },\n    };\n  }\n\n  private async createServiceProxy(manifest: PluginManifest): Promise<any> {\n    // Create a service proxy that enforces permissions\n    return {\n      call: async (serviceName: string, method: string, ...args: any[]) => {\n        const operation = `${serviceName}.${method}`;\n        await this.security.checkPermission(manifest.name, operation, args);\n\n        // TODO: Implement actual service calls to DataPrism Core\n        return { success: true, result: null };\n      },\n      hasPermission: (serviceName: string, method: string) => {\n        const requiredPermission = {\n          resource: serviceName,\n          access: \"read\" as const,\n        };\n        const permissions = manifest.permissions;\n        return permissions.some(\n          (perm) =>\n            perm.resource === requiredPermission.resource &&\n            (perm.access === requiredPermission.access ||\n              perm.access === \"execute\"),\n        );\n      },\n    };\n  }\n\n  private createPluginLogger(pluginName: string): any {\n    return {\n      debug: (message: string, ...args: any[]) =>\n        console.debug(`[${pluginName}]`, message, ...args),\n      info: (message: string, ...args: any[]) =>\n        console.info(`[${pluginName}]`, message, ...args),\n      warn: (message: string, ...args: any[]) =>\n        console.warn(`[${pluginName}]`, message, ...args),\n      error: (message: string, ...args: any[]) =>\n        console.error(`[${pluginName}]`, message, ...args),\n    };\n  }\n\n  private async loadPluginConfig(pluginName: string): Promise<any> {\n    // TODO: Implement configuration loading from storage\n    return {};\n  }\n\n  private isCompatible(manifest: PluginManifest): boolean {\n    // Check core version compatibility\n    const coreVersion = \"0.1.0\"; // TODO: Get from DataPrism Core\n\n    // Simple semver compatibility check\n    const minVersion = manifest.compatibility.minCoreVersion;\n    const maxVersion = manifest.compatibility.maxCoreVersion;\n\n    // TODO: Implement proper semver comparison\n    return true; // Simplified for now\n  }\n\n  private getPluginStatus(pluginName: string): PluginStatus {\n    if (this.activePlugins.has(pluginName)) {\n      return \"active\";\n    } else if (this.registry.getManifest(pluginName)) {\n      return \"inactive\";\n    } else {\n      return \"unknown\";\n    }\n  }\n\n  private getCategorySummary(): Record<string, number> {\n    const summary: Record<string, number> = {};\n\n    for (const manifest of this.registry.getAllManifests()) {\n      summary[manifest.category] = (summary[manifest.category] || 0) + 1;\n    }\n\n    return summary;\n  }\n\n  async destroy(): Promise<void> {\n    // Unload all active plugins\n    const activePluginNames = Array.from(this.activePlugins.keys());\n    for (const pluginName of activePluginNames) {\n      try {\n        await this.unloadPlugin(pluginName);\n      } catch (error) {\n        console.warn(\n          `Failed to unload plugin ${pluginName} during shutdown:`,\n          error,\n        );\n      }\n    }\n\n    // Cleanup managers\n    this.eventBus.destroy();\n    await this.resources.destroy();\n\n    this.initialized = false;\n  }\n}\n\nexport interface PluginInfo {\n  name: string;\n  version: string;\n  description: string;\n  author: string;\n  category: string;\n  capabilities: PluginCapability[];\n  status: PluginStatus;\n  resourceUsage: any;\n  dependencies: any[];\n  permissions: any[];\n}\n\nexport type PluginStatus = \"active\" | \"inactive\" | \"error\" | \"unknown\";\n\nexport interface PluginSystemStatus {\n  initialized: boolean;\n  totalRegistered: number;\n  totalActive: number;\n  categorySummary: Record<string, number>;\n  resourceUsage: any;\n  securityStatus: {\n    violations: number;\n    suspiciousActivity: number;\n    activeSandboxes: number;\n  };\n  eventBusMetrics: any;\n}\n","// Main plugin system exports\nexport { PluginManager } from \"./manager/plugin-manager.js\";\nimport { PluginManager } from \"./manager/plugin-manager.js\";\nimport { PluginRegistry } from \"./manager/plugin-registry.js\";\nimport {\n  IPlugin,\n  PluginManifest,\n  PluginContext,\n  PluginCapability,\n} from \"./interfaces/plugin.js\";\nimport type { ValidationResult } from \"./manager/plugin-registry.js\";\nexport { PluginRegistry } from \"./manager/plugin-registry.js\";\nexport { PluginLoader, PluginLoadError } from \"./manager/plugin-loader.js\";\nexport {\n  ResourceManager,\n  ResourceMonitor,\n  ResourceError,\n} from \"./manager/resource-manager.js\";\n\n// Security system exports\nexport {\n  SecurityManager,\n  PluginSandbox,\n  SecurityError,\n  AuditLogger,\n  SecurityPolicySet,\n} from \"./security/security-manager.js\";\n\n// Communication system exports\nexport { EventBus, EventBusFactory } from \"./communication/event-bus.js\";\n\n// Interface exports\nexport * from \"./interfaces/index.js\";\n\n// Type exports for convenience\nexport type {\n  // Plugin Manager types\n  PluginInfo,\n  PluginStatus,\n  PluginSystemStatus,\n} from \"./manager/plugin-manager.js\";\n\nexport type {\n  // Plugin Registry types\n  PluginSearchQuery,\n  PluginSearchResult,\n  PluginRegistryStatistics,\n  ValidationResult,\n} from \"./manager/plugin-registry.js\";\n\nexport type {\n  // Plugin Loader types\n  PluginValidationResult,\n  PluginModuleInfo,\n  ModuleType,\n} from \"./manager/plugin-loader.js\";\n\nexport type {\n  // Resource Manager types\n  ResourceQuota,\n  ResourceUsage,\n  ResourceAllocation,\n  ResourceViolation,\n  ResourceReport,\n  ResourceSummary,\n  GlobalResourceLimits,\n  GlobalResourceUsage,\n  OptimizationResult,\n  QuotaEnforcementResult,\n} from \"./manager/resource-manager.js\";\n\nexport type {\n  // Security types\n  SandboxConfig,\n  SecurityReport,\n  SuspiciousActivity,\n  SecurityPolicy,\n  AuditEvent,\n  EventFilter,\n} from \"./security/security-manager.js\";\n\nexport type {\n  // Event Bus types\n  EventHandler,\n  EventSubscription,\n  EventHistoryEntry,\n  EventBusMetrics,\n} from \"./communication/event-bus.js\";\n\n// Plugin System Factory\nexport class DataPrismPluginSystem {\n  private static instance: PluginManager | null = null;\n\n  static async create(config?: PluginSystemConfig): Promise<PluginManager> {\n    if (this.instance) {\n      return this.instance;\n    }\n\n    const manager = new PluginManager();\n\n    // Apply configuration if provided\n    if (config) {\n      this.applyConfiguration(manager, config);\n    }\n\n    await manager.initialize();\n    this.instance = manager;\n\n    return manager;\n  }\n\n  static getInstance(): PluginManager | null {\n    return this.instance;\n  }\n\n  static async destroy(): Promise<void> {\n    if (this.instance) {\n      await this.instance.destroy();\n      this.instance = null;\n    }\n  }\n\n  private static applyConfiguration(\n    manager: PluginManager,\n    config: PluginSystemConfig,\n  ): void {\n    // Apply configuration to manager\n    // In production, this would configure various aspects of the plugin system\n    console.debug(\"Plugin system configuration applied:\", config);\n  }\n}\n\nexport interface PluginSystemConfig {\n  maxPlugins?: number;\n  securityLevel?: \"strict\" | \"moderate\" | \"permissive\";\n  resourceLimits?: {\n    globalMemoryMB?: number;\n    globalCPUPercent?: number;\n  };\n  discoveryPaths?: string[];\n  enableHotReload?: boolean;\n  auditLogging?: boolean;\n}\n\n// Utility functions for plugin development\nexport const PluginUtils = {\n  /**\n   * Validates a plugin manifest against the schema\n   */\n  validateManifest: async (manifest: any): Promise<ValidationResult> => {\n    const registry = new PluginRegistry();\n    return registry.validateManifest(manifest);\n  },\n\n  /**\n   * Creates a basic plugin manifest template\n   */\n  createManifestTemplate: (pluginName: string, category: string): any => {\n    return {\n      name: pluginName,\n      version: \"1.0.0\",\n      description: `${pluginName} plugin for DataPrism`,\n      author: \"Plugin Developer\",\n      license: \"MIT\",\n      keywords: [category, \"dataprism\"],\n      category,\n      entryPoint: \"./index.js\",\n      dependencies: [],\n      permissions: [{ resource: \"data\", access: \"read\" }],\n      configuration: {},\n      compatibility: {\n        minCoreVersion: \"0.1.0\",\n        browsers: [\"chrome\", \"firefox\", \"safari\", \"edge\"],\n      },\n    };\n  },\n\n  /**\n   * Generates a unique plugin ID\n   */\n  generatePluginId: (): string => {\n    return `plugin-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n  },\n\n  /**\n   * Checks if a version string is valid\n   */\n  isValidVersion: (version: string): boolean => {\n    return /^\\d+\\.\\d+\\.\\d+(-[\\w\\d\\-]+)?(\\+[\\w\\d\\-]+)?$/.test(version);\n  },\n};\n\n// Plugin development helpers\nexport abstract class BasePlugin implements IPlugin {\n  protected manifest: PluginManifest;\n  protected context: PluginContext | null = null;\n  protected initialized = false;\n  protected active = false;\n\n  constructor(manifest: PluginManifest) {\n    this.manifest = manifest;\n  }\n\n  getName(): string {\n    return this.manifest.name;\n  }\n\n  getVersion(): string {\n    return this.manifest.version;\n  }\n\n  getDescription(): string {\n    return this.manifest.description;\n  }\n\n  getAuthor(): string {\n    return this.manifest.author;\n  }\n\n  getDependencies(): any[] {\n    return this.manifest.dependencies;\n  }\n\n  getManifest(): PluginManifest {\n    return this.manifest;\n  }\n\n  isCompatible(coreVersion: string): boolean {\n    // Simple compatibility check - in production, implement proper semver checking\n    return true;\n  }\n\n  abstract getCapabilities(): PluginCapability[];\n\n  async initialize(context: PluginContext): Promise<void> {\n    this.context = context;\n    this.initialized = true;\n    await this.onInitialize(context);\n  }\n\n  async activate(): Promise<void> {\n    if (!this.initialized) {\n      throw new Error(\"Plugin must be initialized before activation\");\n    }\n    this.active = true;\n    await this.onActivate();\n  }\n\n  async deactivate(): Promise<void> {\n    this.active = false;\n    await this.onDeactivate();\n  }\n\n  async cleanup(): Promise<void> {\n    await this.onCleanup();\n    this.context = null;\n    this.initialized = false;\n    this.active = false;\n  }\n\n  abstract execute(operation: string, params: any): Promise<any>;\n\n  async configure(settings: any): Promise<void> {\n    await this.onConfigure(settings);\n  }\n\n  // Hook methods for subclasses to override\n  protected async onInitialize(context: PluginContext): Promise<void> {\n    // Override in subclass\n  }\n\n  protected async onActivate(): Promise<void> {\n    // Override in subclass\n  }\n\n  protected async onDeactivate(): Promise<void> {\n    // Override in subclass\n  }\n\n  protected async onCleanup(): Promise<void> {\n    // Override in subclass\n  }\n\n  protected async onConfigure(settings: any): Promise<void> {\n    // Override in subclass\n  }\n\n  // Utility methods for plugin implementations\n  protected log(\n    level: \"debug\" | \"info\" | \"warn\" | \"error\",\n    message: string,\n    ...args: any[]\n  ): void {\n    if (this.context?.logger) {\n      this.context.logger[level](message, ...args);\n    } else {\n      console[level](`[${this.getName()}]`, message, ...args);\n    }\n  }\n\n  protected emit(event: string, data: any): void {\n    if (this.context?.eventBus) {\n      this.context.eventBus.publish(`plugin:${this.getName()}:${event}`, data);\n    }\n  }\n\n  protected async callService(\n    serviceName: string,\n    method: string,\n    ...args: any[]\n  ): Promise<any> {\n    if (!this.context?.services) {\n      throw new Error(\"Plugin context services not available\");\n    }\n    return this.context.services.call(serviceName, method, ...args);\n  }\n}\n\n// Version information\nexport const VERSION = \"1.0.0\";\nexport const BUILD_TIME = new Date().toISOString();\n\n// Plugin system metadata\nexport const PLUGIN_SYSTEM_INFO = {\n  name: \"DataPrism Plugin System\",\n  version: VERSION,\n  buildTime: BUILD_TIME,\n  supportedCategories: [\n    \"data-processing\",\n    \"visualization\",\n    \"integration\",\n    \"utility\",\n  ],\n  capabilities: [\n    \"Dynamic plugin loading\",\n    \"Security sandboxing\",\n    \"Resource management\",\n    \"Event-driven communication\",\n    \"Hot reload support\",\n    \"Dependency resolution\",\n    \"Audit logging\",\n  ],\n};\n","export { DataPrismEngine } from \"./engine.js\";\nexport { DuckDBManager } from \"./duckdb-manager.js\";\nexport { ErrorHandler } from \"./error-handler.js\";\nexport { DependencyRegistry } from \"./dependency-registry.js\";\nexport { ArrowLoader } from \"./arrow-loader.js\";\nexport { DependencyErrorHandler } from \"./dependency-error-handler.js\";\nexport { DependencyEventSystem } from \"./dependency-events.js\";\n\n// Plugin System Exports\nexport {\n  PluginManager,\n  PluginRegistry,\n  PluginLoader,\n  PluginLoadError,\n  ResourceManager,\n  ResourceMonitor,\n  ResourceError,\n  SecurityManager,\n  PluginSandbox,\n  SecurityError,\n  AuditLogger,\n  SecurityPolicySet,\n  EventBus,\n  EventBusFactory,\n  DataPrismPluginSystem,\n  BasePlugin,\n  PluginUtils,\n  VERSION as PLUGIN_VERSION,\n  PLUGIN_SYSTEM_INFO,\n} from \"../../plugins/src/index.js\";\n\nexport type {\n  DataPrismConfig,\n  QueryResult,\n  QueryMetadata,\n  DataPrismError,\n  PerformanceMetrics,\n  EngineStatus,\n  Logger,\n  LogLevel,\n} from \"./types.js\";\n\n// Plugin System Types\nexport type {\n  IPlugin,\n  PluginManifest,\n  PluginContext,\n  PluginCapability,\n  PluginInfo,\n  PluginStatus,\n  PluginSystemStatus,\n  PluginSearchQuery,\n  PluginSearchResult,\n  PluginRegistryStatistics,\n  ValidationResult,\n  PluginValidationResult,\n  PluginModuleInfo,\n  ModuleType,\n  ResourceQuota,\n  ResourceUsage,\n  ResourceAllocation,\n  ResourceViolation,\n  ResourceReport,\n  ResourceSummary,\n  GlobalResourceLimits,\n  GlobalResourceUsage,\n  OptimizationResult,\n  QuotaEnforcementResult,\n  SandboxConfig,\n  SecurityReport,\n  SuspiciousActivity,\n  SecurityPolicy,\n  AuditEvent,\n  EventFilter,\n  EventHandler,\n  EventSubscription,\n  EventHistoryEntry,\n  EventBusMetrics,\n  PluginSystemConfig,\n  // Core Plugin Interfaces (as requested in issue #18)\n  IDataProcessorPlugin,\n  IVisualizationPlugin,\n  IIntegrationPlugin,\n  IUtilityPlugin,\n  ILLMIntegrationPlugin,\n  ISecurityUtilityPlugin,\n  Dataset,\n  ProcessingOptions,\n  VisualizationType,\n  RenderConfig,\n  InteractionEvent,\n  Connection,\n  SyncResult,\n  DataSource,\n  UtilityFeature,\n  SystemStatus,\n  HealthStatus,\n  PluginCategory,\n} from \"../../plugins/src/index.js\";\n\nexport type {\n  DependencyState,\n  DependencyMetadata,\n  DependencyLoadOptions,\n  DependencyEvent,\n  DependencyEventHandler,\n} from \"./dependency-registry.js\";\n\nexport type {\n  ArrowModule,\n} from \"./arrow-loader.js\";\n\nexport type {\n  EnhancedError,\n} from \"./dependency-error-handler.js\";\n\nexport type {\n  DataPrismEventType,\n  DataPrismEvent,\n  DataPrismEventHandler,\n} from \"./dependency-events.js\";\n\n// Version information\nexport const version = \"0.1.0\";\nexport const name = \"DataPrism Core\";\n\n// Re-export classes\nimport { DataPrismEngine } from \"./engine.js\";\nimport type { DataPrismConfig } from \"./types.js\";\n\n// Utility functions\nexport function createEngine(config?: Partial<DataPrismConfig>) {\n  return new DataPrismEngine(config);\n}\n\n// Export for convenience\nexport default DataPrismEngine;\n"],"names":["_ErrorHandler","__publicField","error","source","dataPrismError","timestamp","ErrorHandler","event","q","h","Y","j","K","V","z","J","r","t","o","$","H","Ye","x","Z","X","n","ee","a","re","te","se","A","e","ne","E","u","p","b","D","c","O","l","i","d","m","oe","L","T","ae","F","f","U","C","W","R","v","M","B","He","k","y","g","S","N","ce","Qe","DuckDBCDNLoader","baseUrl","currentScript","script","url","configUrl","response","config","duckdb.getJsDelivrBundles","name","bundle","bundles","duckdb.selectBundle","worker_url","worker","logger","duckdb.ConsoleLogger","db","duckdb.AsyncDuckDB","DuckDBManager","cdnBaseUrl","sql","startTime","result","endTime","data","row","tableName","schema","columns","type","_DependencyRegistry","options","metadata","loader","loadPromise","resolve","reject","timeoutId","module","retryDelay","state","dependency","handler","timeoutMs","dependencies","targetDeps","results","_","index","preloadPromises","all","ready","loading","timeout","healthScore","DependencyRegistry","_ArrowLoader","loadStrategies","lastError","strategy","component","message","originalError","arrow","ArrowLoader","DataPrismEngine","initPromises","wasmModule","dataBytes","wasmResult","executionTime","memoryUsage","level","healthStatus","status","health","failedDeps","_DependencyErrorHandler","baseMessage","loadTime","contextMessage","errorMessage","steps","context","formatted","key","value","step","retryCount","shouldRetry","delay","maxRetries","DependencyErrorHandler","_DependencyEventSystem","dataPrismEvent","registryEventType","allDeps","readyDeps","dep","total","loaded","eventType","handlers","stage","additionalData","progress","container","indicator","progressBar","messageEl","detailsEl","progressHandler","DependencyEventSystem","PluginRegistry","manifest","existing","deps","pluginName","dependents","category","visited","visiting","order","visit","query","score","matches","keyword","categoryStats","authorStats","totalDependencies","count","authorCount","errors","warnings","validCategories","perm","validAccess","depManifest","version","required","available","cycles","path","cycleStart","cycle","PluginLoader","PluginLoadError","searchPaths","discoveredPaths","searchPath","paths","pluginPath","manifestPath","manifestModule","instance","pluginCapabilities","requiredMethods","method","modulePath","resolvedPath","wasmInstance","PluginClass","pluginPaths","mockPaths","_documentCurrentScript","manifestNames","pluginNames","SecurityManager","AuditLogger","SecurityPolicySet","permissions","SecurityError","sandbox","PluginSandbox","operation","params","requiredPermission","events","violations","suspiciousActivity","dangerousPatterns","manifestString","pattern","ext","permission","suspiciousKeywords","textToCheck","validResources","granted","allowedAPIs","sanitized","sensitiveKeys","sensitive","suspicious","now","timeWindow","recentDenials","keywordEvents","recommendations","workerCode","workerBlob","code","messageHandler","filter","filtered","policy","ResourceManager","quota","currentUsage","ResourceError","allocation","monitor","ResourceMonitor","usage","pluginUsage","allUsage","globalUsage","pluginReports","summary","report","optimizations","plugin","actions","pluginViolations","violation","action","totalMemoryMB","totalCPUPercent","totalDiskMB","totalNetworkKbps","memoryEfficiency","cpuEfficiency","reports","totalAllocatedMemory","sum","totalUsedMemory","totalViolations","inefficientPlugins","opt","EventBus","eventHandlers","onceHandler","subscription","entry","subscriptions","EventBusFactory","PluginManager","validation","resourceMonitor","settings","discovered","manifests","securityReport","resourceReport","savedState","newPlugin","corePlugins","resourceQuota","serviceName","args","activePluginNames","DataPrismPluginSystem","manager","PluginUtils","BasePlugin","coreVersion","VERSION","BUILD_TIME","PLUGIN_SYSTEM_INFO","createEngine"],"mappings":"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","x_google_ignoreList":[1]}