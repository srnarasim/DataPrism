{"version":3,"file":"dataprism.min.js","sources":["../../packages/orchestration/src/error-handler.ts","../../node_modules/@duckdb/duckdb-wasm/dist/duckdb-browser.mjs","../../packages/orchestration/src/duckdb-cdn-loader.ts","../../packages/orchestration/src/duckdb-manager.ts","../../packages/orchestration/src/dependency-registry.ts","../../packages/orchestration/src/arrow-loader.ts","../../packages/orchestration/src/engine.ts","../../packages/orchestration/src/dependency-error-handler.ts","../../packages/orchestration/src/dependency-events.ts","../../packages/plugins/src/manager/plugin-registry.ts","../../packages/plugins/src/manager/plugin-loader.ts","../../packages/plugins/src/security/security-manager.ts","../../packages/plugins/src/manager/resource-manager.ts","../../packages/plugins/src/communication/event-bus.ts","../../packages/plugins/src/manager/plugin-manager.ts","../../packages/plugins/src/index.ts","../../packages/orchestration/src/index.ts"],"sourcesContent":["import { DataPrismError } from \"./types.js\";\n\nexport class ErrorHandler {\n  private static instance: ErrorHandler;\n  private errorLog: DataPrismError[] = [];\n\n  static getInstance(): ErrorHandler {\n    if (!ErrorHandler.instance) {\n      ErrorHandler.instance = new ErrorHandler();\n    }\n    return ErrorHandler.instance;\n  }\n\n  handleError(\n    error: unknown,\n    source: \"wasm\" | \"duckdb\" | \"orchestration\",\n  ): DataPrismError {\n    const dataPrismError: DataPrismError = {\n      message: error instanceof Error ? error.message : String(error),\n      code: this.generateErrorCode(source),\n      source,\n    };\n\n    this.errorLog.push(dataPrismError);\n    console.error(`DataPrism Error [${source}]:`, dataPrismError);\n\n    return dataPrismError;\n  }\n\n  private generateErrorCode(source: string): string {\n    const timestamp = Date.now();\n    const prefix = source.toUpperCase().slice(0, 3);\n    return `${prefix}_${timestamp}`;\n  }\n\n  getErrorHistory(): DataPrismError[] {\n    return [...this.errorLog];\n  }\n\n  clearErrorHistory(): void {\n    this.errorLog = [];\n  }\n}\n\n// Global error handler for unhandled promise rejections\nif (typeof window !== \"undefined\") {\n  window.addEventListener(\"unhandledrejection\", (event) => {\n    const errorHandler = ErrorHandler.getInstance();\n    errorHandler.handleError(event.reason, \"orchestration\");\n  });\n}\n","var q=Object.create;var h=Object.defineProperty;var Y=Object.getOwnPropertyDescriptor;var j=Object.getOwnPropertyNames;var K=Object.getPrototypeOf,V=Object.prototype.hasOwnProperty;var z=(s,e)=>()=>(e||s((e={exports:{}}).exports,e),e.exports);var J=(s,e,r,t)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let o of j(e))!V.call(s,o)&&o!==r&&h(s,o,{get:()=>e[o],enumerable:!(t=Y(e,o))||t.enumerable});return s};var $=(s,e,r)=>(r=s!=null?q(K(s)):{},J(e||!s||!s.__esModule?h(r,\"default\",{value:s,enumerable:!0}):r,s));var H=z((Ye,x)=>{x.exports=Worker});var Z=(o=>(o[o.UNDEFINED=0]=\"UNDEFINED\",o[o.AUTOMATIC=1]=\"AUTOMATIC\",o[o.READ_ONLY=2]=\"READ_ONLY\",o[o.READ_WRITE=3]=\"READ_WRITE\",o))(Z||{});var X=(n=>(n[n.IDENTIFIER=0]=\"IDENTIFIER\",n[n.NUMERIC_CONSTANT=1]=\"NUMERIC_CONSTANT\",n[n.STRING_CONSTANT=2]=\"STRING_CONSTANT\",n[n.OPERATOR=3]=\"OPERATOR\",n[n.KEYWORD=4]=\"KEYWORD\",n[n.COMMENT=5]=\"COMMENT\",n))(X||{});var ee=(a=>(a[a.NONE=0]=\"NONE\",a[a.DEBUG=1]=\"DEBUG\",a[a.INFO=2]=\"INFO\",a[a.WARNING=3]=\"WARNING\",a[a.ERROR=4]=\"ERROR\",a))(ee||{}),re=(n=>(n[n.NONE=0]=\"NONE\",n[n.CONNECT=1]=\"CONNECT\",n[n.DISCONNECT=2]=\"DISCONNECT\",n[n.OPEN=3]=\"OPEN\",n[n.QUERY=4]=\"QUERY\",n[n.INSTANTIATE=5]=\"INSTANTIATE\",n))(re||{}),te=(n=>(n[n.NONE=0]=\"NONE\",n[n.OK=1]=\"OK\",n[n.ERROR=2]=\"ERROR\",n[n.START=3]=\"START\",n[n.RUN=4]=\"RUN\",n[n.CAPTURE=5]=\"CAPTURE\",n))(te||{}),se=(a=>(a[a.NONE=0]=\"NONE\",a[a.WEB_WORKER=1]=\"WEB_WORKER\",a[a.NODE_WORKER=2]=\"NODE_WORKER\",a[a.BINDINGS=3]=\"BINDINGS\",a[a.ASYNC_DUCKDB=4]=\"ASYNC_DUCKDB\",a))(se||{}),P=class{log(e){}},A=class{constructor(e=2){this.level=e}log(e){e.level>=this.level&&console.log(e)}};function pe(s){switch(s){case 0:return\"NONE\";case 1:return\"DEBUG\";case 2:return\"INFO\";case 3:return\"WARNING\";case 4:return\"ERROR\";default:return\"?\"}}function _e(s){switch(s){case 0:return\"NONE\";case 1:return\"OK\";case 2:return\"ERROR\";case 3:return\"START\";case 4:return\"RUN\";case 5:return\"CAPTURE\";default:return\"?\"}}function me(s){switch(s){case 1:return\"CONNECT\";case 2:return\"DISCONNECT\";case 5:return\"INSTANTIATE\";case 3:return\"OPEN\";case 4:return\"QUERY\";default:return\"?\"}}function Re(s){switch(s){case 0:return\"NONE\";case 1:return\"WEB WORKER\";case 2:return\"NODE WORKER\";case 3:return\"DUCKDB BINDINGS\";case 4:return\"DUCKDB\";default:return\"?\"}}var ne=(e=>(e[e.SUCCESS=0]=\"SUCCESS\",e))(ne||{});import*as u from\"apache-arrow\";var E=class{constructor(e,r){this._bindings=e,this._conn=r}get bindings(){return this._bindings}async close(){return this._bindings.disconnect(this._conn)}useUnsafe(e){return e(this._bindings,this._conn)}async query(e){this._bindings.logger.log({timestamp:new Date,level:2,origin:4,topic:4,event:4,value:e});let r=await this._bindings.runQuery(this._conn,e),t=u.RecordBatchReader.from(r);return console.assert(t.isSync(),\"Reader is not sync\"),console.assert(t.isFile(),\"Reader is not file\"),new u.Table(t)}async send(e,r=!1){this._bindings.logger.log({timestamp:new Date,level:2,origin:4,topic:4,event:4,value:e});let t=await this._bindings.startPendingQuery(this._conn,e,r);for(;t==null;)t=await this._bindings.pollPendingQuery(this._conn);let o=new p(this._bindings,this._conn,t),a=await u.RecordBatchReader.from(o);return console.assert(a.isAsync()),console.assert(a.isStream()),a}async cancelSent(){return await this._bindings.cancelPendingQuery(this._conn)}async getTableNames(e){return await this._bindings.getTableNames(this._conn,e)}async prepare(e){let r=await this._bindings.createPrepared(this._conn,e);return new b(this._bindings,this._conn,r)}async insertArrowTable(e,r){let t=u.tableToIPC(e,\"stream\");await this.insertArrowFromIPCStream(t,r)}async insertArrowFromIPCStream(e,r){await this._bindings.insertArrowFromIPCStream(this._conn,e,r)}async insertCSVFromPath(e,r){await this._bindings.insertCSVFromPath(this._conn,e,r)}async insertJSONFromPath(e,r){await this._bindings.insertJSONFromPath(this._conn,e,r)}},p=class{constructor(e,r,t){this.db=e;this.conn=r;this.header=t;this._first=!0,this._depleted=!1,this._inFlight=null}async next(){if(this._first)return this._first=!1,{done:!1,value:this.header};if(this._depleted)return{done:!0,value:null};let e;return this._inFlight!=null?(e=await this._inFlight,this._inFlight=null):e=await this.db.fetchQueryResults(this.conn),this._depleted=e.length==0,this._depleted||(this._inFlight=this.db.fetchQueryResults(this.conn)),{done:this._depleted,value:e}}[Symbol.asyncIterator](){return this}},b=class{constructor(e,r,t){this.bindings=e,this.connectionId=r,this.statementId=t}async close(){await this.bindings.closePrepared(this.connectionId,this.statementId)}async query(...e){let r=await this.bindings.runPrepared(this.connectionId,this.statementId,e),t=u.RecordBatchReader.from(r);return console.assert(t.isSync()),console.assert(t.isFile()),new u.Table(t)}async send(...e){let r=await this.bindings.sendPrepared(this.connectionId,this.statementId,e),t=new p(this.bindings,this.connectionId,r),o=await u.RecordBatchReader.from(t);return console.assert(o.isAsync()),console.assert(o.isStream()),o}};var D=(c=>(c.CANCEL_PENDING_QUERY=\"CANCEL_PENDING_QUERY\",c.CLOSE_PREPARED=\"CLOSE_PREPARED\",c.COLLECT_FILE_STATISTICS=\"COLLECT_FILE_STATISTICS\",c.REGISTER_OPFS_FILE_NAME=\"REGISTER_OPFS_FILE_NAME\",c.CONNECT=\"CONNECT\",c.COPY_FILE_TO_BUFFER=\"COPY_FILE_TO_BUFFER\",c.COPY_FILE_TO_PATH=\"COPY_FILE_TO_PATH\",c.CREATE_PREPARED=\"CREATE_PREPARED\",c.DISCONNECT=\"DISCONNECT\",c.DROP_FILE=\"DROP_FILE\",c.DROP_FILES=\"DROP_FILES\",c.EXPORT_FILE_STATISTICS=\"EXPORT_FILE_STATISTICS\",c.FETCH_QUERY_RESULTS=\"FETCH_QUERY_RESULTS\",c.FLUSH_FILES=\"FLUSH_FILES\",c.GET_FEATURE_FLAGS=\"GET_FEATURE_FLAGS\",c.GET_TABLE_NAMES=\"GET_TABLE_NAMES\",c.GET_VERSION=\"GET_VERSION\",c.GLOB_FILE_INFOS=\"GLOB_FILE_INFOS\",c.INSERT_ARROW_FROM_IPC_STREAM=\"INSERT_ARROW_FROM_IPC_STREAM\",c.INSERT_CSV_FROM_PATH=\"IMPORT_CSV_FROM_PATH\",c.INSERT_JSON_FROM_PATH=\"IMPORT_JSON_FROM_PATH\",c.INSTANTIATE=\"INSTANTIATE\",c.OPEN=\"OPEN\",c.PING=\"PING\",c.POLL_PENDING_QUERY=\"POLL_PENDING_QUERY\",c.REGISTER_FILE_BUFFER=\"REGISTER_FILE_BUFFER\",c.REGISTER_FILE_HANDLE=\"REGISTER_FILE_HANDLE\",c.REGISTER_FILE_URL=\"REGISTER_FILE_URL\",c.RESET=\"RESET\",c.RUN_PREPARED=\"RUN_PREPARED\",c.RUN_QUERY=\"RUN_QUERY\",c.SEND_PREPARED=\"SEND_PREPARED\",c.START_PENDING_QUERY=\"START_PENDING_QUERY\",c.TOKENIZE=\"TOKENIZE\",c))(D||{}),O=(l=>(l.CONNECTION_INFO=\"CONNECTION_INFO\",l.ERROR=\"ERROR\",l.FEATURE_FLAGS=\"FEATURE_FLAGS\",l.FILE_BUFFER=\"FILE_BUFFER\",l.FILE_INFOS=\"FILE_INFOS\",l.FILE_SIZE=\"FILE_SIZE\",l.FILE_STATISTICS=\"FILE_STATISTICS\",l.INSTANTIATE_PROGRESS=\"INSTANTIATE_PROGRESS\",l.LOG=\"LOG\",l.PROGRESS_UPDATE=\"PROGRESS_UPDATE\",l.OK=\"OK\",l.PREPARED_STATEMENT_ID=\"PREPARED_STATEMENT_ID\",l.QUERY_PLAN=\"QUERY_PLAN\",l.QUERY_RESULT=\"QUERY_RESULT\",l.QUERY_RESULT_CHUNK=\"QUERY_RESULT_CHUNK\",l.QUERY_RESULT_HEADER=\"QUERY_RESULT_HEADER\",l.QUERY_RESULT_HEADER_OR_NULL=\"QUERY_RESULT_HEADER_OR_NULL\",l.REGISTERED_FILE=\"REGISTERED_FILE\",l.SCRIPT_TOKENS=\"SCRIPT_TOKENS\",l.SUCCESS=\"SUCCESS\",l.TABLE_NAMES=\"TABLE_NAMES\",l.VERSION_STRING=\"VERSION_STRING\",l))(O||{}),i=class{constructor(e,r){this.promiseResolver=()=>{};this.promiseRejecter=()=>{};this.type=e,this.data=r,this.promise=new Promise((t,o)=>{this.promiseResolver=t,this.promiseRejecter=o})}};import*as d from\"apache-arrow\";function _(s){switch(s.typeId){case d.Type.Binary:return{sqlType:\"binary\"};case d.Type.Bool:return{sqlType:\"bool\"};case d.Type.Date:return{sqlType:\"date\"};case d.Type.DateDay:return{sqlType:\"date32[d]\"};case d.Type.DateMillisecond:return{sqlType:\"date64[ms]\"};case d.Type.Decimal:{let e=s;return{sqlType:\"decimal\",precision:e.precision,scale:e.scale}}case d.Type.Float:return{sqlType:\"float\"};case d.Type.Float16:return{sqlType:\"float16\"};case d.Type.Float32:return{sqlType:\"float32\"};case d.Type.Float64:return{sqlType:\"float64\"};case d.Type.Int:return{sqlType:\"int32\"};case d.Type.Int16:return{sqlType:\"int16\"};case d.Type.Int32:return{sqlType:\"int32\"};case d.Type.Int64:return{sqlType:\"int64\"};case d.Type.Uint16:return{sqlType:\"uint16\"};case d.Type.Uint32:return{sqlType:\"uint32\"};case d.Type.Uint64:return{sqlType:\"uint64\"};case d.Type.Uint8:return{sqlType:\"uint8\"};case d.Type.IntervalDayTime:return{sqlType:\"interval[dt]\"};case d.Type.IntervalYearMonth:return{sqlType:\"interval[m]\"};case d.Type.List:return{sqlType:\"list\",valueType:_(s.valueType)};case d.Type.FixedSizeBinary:return{sqlType:\"fixedsizebinary\",byteWidth:s.byteWidth};case d.Type.Null:return{sqlType:\"null\"};case d.Type.Utf8:return{sqlType:\"utf8\"};case d.Type.Struct:return{sqlType:\"struct\",fields:s.children.map(r=>m(r.name,r.type))};case d.Type.Map:{let e=s;return{sqlType:\"map\",keyType:_(e.keyType),valueType:_(e.valueType)}}case d.Type.Time:return{sqlType:\"time[s]\"};case d.Type.TimeMicrosecond:return{sqlType:\"time[us]\"};case d.Type.TimeMillisecond:return{sqlType:\"time[ms]\"};case d.Type.TimeNanosecond:return{sqlType:\"time[ns]\"};case d.Type.TimeSecond:return{sqlType:\"time[s]\"};case d.Type.Timestamp:return{sqlType:\"timestamp\",timezone:s.timezone||void 0};case d.Type.TimestampSecond:return{sqlType:\"timestamp[s]\",timezone:s.timezone||void 0};case d.Type.TimestampMicrosecond:return{sqlType:\"timestamp[us]\",timezone:s.timezone||void 0};case d.Type.TimestampNanosecond:return{sqlType:\"timestamp[ns]\",timezone:s.timezone||void 0};case d.Type.TimestampMillisecond:return{sqlType:\"timestamp[ms]\",timezone:s.timezone||void 0}}throw new Error(\"unsupported arrow type: \".concat(s.toString()))}function m(s,e){let r=_(e);return r.name=s,r}var oe=new TextEncoder,L=class{constructor(e,r=null){this._onInstantiationProgress=[];this._onExecutionProgress=[];this._worker=null;this._workerShutdownPromise=null;this._workerShutdownResolver=()=>{};this._nextMessageId=0;this._pendingRequests=new Map;this._logger=e,this._onMessageHandler=this.onMessage.bind(this),this._onErrorHandler=this.onError.bind(this),this._onCloseHandler=this.onClose.bind(this),r!=null&&this.attach(r)}get logger(){return this._logger}attach(e){this._worker=e,this._worker.addEventListener(\"message\",this._onMessageHandler),this._worker.addEventListener(\"error\",this._onErrorHandler),this._worker.addEventListener(\"close\",this._onCloseHandler),this._workerShutdownPromise=new Promise((r,t)=>{this._workerShutdownResolver=r})}detach(){this._worker&&(this._worker.removeEventListener(\"message\",this._onMessageHandler),this._worker.removeEventListener(\"error\",this._onErrorHandler),this._worker.removeEventListener(\"close\",this._onCloseHandler),this._worker=null,this._workerShutdownResolver(null),this._workerShutdownPromise=null,this._workerShutdownResolver=()=>{})}async terminate(){this._worker&&(this._worker.terminate(),this._worker=null,this._workerShutdownPromise=null,this._workerShutdownResolver=()=>{})}async postTask(e,r=[]){if(!this._worker){console.error(\"cannot send a message since the worker is not set!\");return}let t=this._nextMessageId++;return this._pendingRequests.set(t,e),this._worker.postMessage({messageId:t,type:e.type,data:e.data},r),await e.promise}onMessage(e){var o;let r=e.data;switch(r.type){case\"PROGRESS_UPDATE\":{for(let a of this._onExecutionProgress)a(r.data);return}case\"LOG\":{this._logger.log(r.data);return}case\"INSTANTIATE_PROGRESS\":{for(let a of this._onInstantiationProgress)a(r.data);return}}let t=this._pendingRequests.get(r.requestId);if(!t){console.warn(\"unassociated response: [\".concat(r.requestId,\", \").concat(r.type.toString(),\"]\"));return}if(this._pendingRequests.delete(r.requestId),r.type==\"ERROR\"){let a=new Error(r.data.message);a.name=r.data.name,(o=Object.getOwnPropertyDescriptor(a,\"stack\"))!=null&&o.writable&&(a.stack=r.data.stack),t.promiseRejecter(a);return}switch(t.type){case\"CLOSE_PREPARED\":case\"COLLECT_FILE_STATISTICS\":case\"REGISTER_OPFS_FILE_NAME\":case\"COPY_FILE_TO_PATH\":case\"DISCONNECT\":case\"DROP_FILE\":case\"DROP_FILES\":case\"FLUSH_FILES\":case\"INSERT_ARROW_FROM_IPC_STREAM\":case\"IMPORT_CSV_FROM_PATH\":case\"IMPORT_JSON_FROM_PATH\":case\"OPEN\":case\"PING\":case\"REGISTER_FILE_BUFFER\":case\"REGISTER_FILE_HANDLE\":case\"REGISTER_FILE_URL\":case\"RESET\":if(r.type==\"OK\"){t.promiseResolver(r.data);return}break;case\"INSTANTIATE\":if(this._onInstantiationProgress=[],r.type==\"OK\"){t.promiseResolver(r.data);return}break;case\"GLOB_FILE_INFOS\":if(r.type==\"FILE_INFOS\"){t.promiseResolver(r.data);return}break;case\"GET_VERSION\":if(r.type==\"VERSION_STRING\"){t.promiseResolver(r.data);return}break;case\"GET_FEATURE_FLAGS\":if(r.type==\"FEATURE_FLAGS\"){t.promiseResolver(r.data);return}break;case\"GET_TABLE_NAMES\":if(r.type==\"TABLE_NAMES\"){t.promiseResolver(r.data);return}break;case\"TOKENIZE\":if(r.type==\"SCRIPT_TOKENS\"){t.promiseResolver(r.data);return}break;case\"COPY_FILE_TO_BUFFER\":if(r.type==\"FILE_BUFFER\"){t.promiseResolver(r.data);return}break;case\"EXPORT_FILE_STATISTICS\":if(r.type==\"FILE_STATISTICS\"){t.promiseResolver(r.data);return}break;case\"CONNECT\":if(r.type==\"CONNECTION_INFO\"){t.promiseResolver(r.data);return}break;case\"RUN_PREPARED\":case\"RUN_QUERY\":if(r.type==\"QUERY_RESULT\"){t.promiseResolver(r.data);return}break;case\"SEND_PREPARED\":if(r.type==\"QUERY_RESULT_HEADER\"){t.promiseResolver(r.data);return}break;case\"START_PENDING_QUERY\":if(r.type==\"QUERY_RESULT_HEADER_OR_NULL\"){t.promiseResolver(r.data);return}break;case\"POLL_PENDING_QUERY\":if(r.type==\"QUERY_RESULT_HEADER_OR_NULL\"){t.promiseResolver(r.data);return}break;case\"CANCEL_PENDING_QUERY\":if(this._onInstantiationProgress=[],r.type==\"SUCCESS\"){t.promiseResolver(r.data);return}break;case\"FETCH_QUERY_RESULTS\":if(r.type==\"QUERY_RESULT_CHUNK\"){t.promiseResolver(r.data);return}break;case\"CREATE_PREPARED\":if(r.type==\"PREPARED_STATEMENT_ID\"){t.promiseResolver(r.data);return}break}t.promiseRejecter(new Error(\"unexpected response type: \".concat(r.type.toString())))}onError(e){console.error(e),console.error(\"error in duckdb worker: \".concat(e.message)),this._pendingRequests.clear()}onClose(){if(this._workerShutdownResolver(null),this._pendingRequests.size!=0){console.warn(\"worker terminated with \".concat(this._pendingRequests.size,\" pending requests\"));return}this._pendingRequests.clear()}async reset(){let e=new i(\"RESET\",null);return await this.postTask(e)}async ping(){let e=new i(\"PING\",null);await this.postTask(e)}async dropFile(e){let r=new i(\"DROP_FILE\",e);return await this.postTask(r)}async dropFiles(){let e=new i(\"DROP_FILES\",null);return await this.postTask(e)}async flushFiles(){let e=new i(\"FLUSH_FILES\",null);return await this.postTask(e)}async instantiate(e,r=null,t=o=>{}){this._onInstantiationProgress.push(t);let o=new i(\"INSTANTIATE\",[e,r]);return await this.postTask(o)}async getVersion(){let e=new i(\"GET_VERSION\",null);return await this.postTask(e)}async getFeatureFlags(){let e=new i(\"GET_FEATURE_FLAGS\",null);return await this.postTask(e)}async open(e){let r=new i(\"OPEN\",e);await this.postTask(r)}async tokenize(e){let r=new i(\"TOKENIZE\",e);return await this.postTask(r)}async connectInternal(){let e=new i(\"CONNECT\",null);return await this.postTask(e)}async connect(){let e=await this.connectInternal();return new E(this,e)}async disconnect(e){let r=new i(\"DISCONNECT\",e);await this.postTask(r)}async runQuery(e,r){let t=new i(\"RUN_QUERY\",[e,r]);return await this.postTask(t)}async startPendingQuery(e,r,t=!1){let o=new i(\"START_PENDING_QUERY\",[e,r,t]);return await this.postTask(o)}async pollPendingQuery(e){let r=new i(\"POLL_PENDING_QUERY\",e);return await this.postTask(r)}async cancelPendingQuery(e){let r=new i(\"CANCEL_PENDING_QUERY\",e);return await this.postTask(r)}async fetchQueryResults(e){let r=new i(\"FETCH_QUERY_RESULTS\",e);return await this.postTask(r)}async getTableNames(e,r){let t=new i(\"GET_TABLE_NAMES\",[e,r]);return await this.postTask(t)}async createPrepared(e,r){let t=new i(\"CREATE_PREPARED\",[e,r]);return await this.postTask(t)}async closePrepared(e,r){let t=new i(\"CLOSE_PREPARED\",[e,r]);await this.postTask(t)}async runPrepared(e,r,t){let o=new i(\"RUN_PREPARED\",[e,r,t]);return await this.postTask(o)}async sendPrepared(e,r,t){let o=new i(\"SEND_PREPARED\",[e,r,t]);return await this.postTask(o)}async globFiles(e){let r=new i(\"GLOB_FILE_INFOS\",e);return await this.postTask(r)}async registerFileText(e,r){let t=oe.encode(r);await this.registerFileBuffer(e,t)}async registerFileURL(e,r,t,o){r===void 0&&(r=e);let a=new i(\"REGISTER_FILE_URL\",[e,r,t,o]);await this.postTask(a)}async registerEmptyFileBuffer(e){}async registerFileBuffer(e,r){let t=new i(\"REGISTER_FILE_BUFFER\",[e,r]);await this.postTask(t,[r.buffer])}async registerFileHandle(e,r,t,o){let a=new i(\"REGISTER_FILE_HANDLE\",[e,r,t,o]);await this.postTask(a,[])}async registerOPFSFileName(e){let r=new i(\"REGISTER_OPFS_FILE_NAME\",[e]);await this.postTask(r,[])}async collectFileStatistics(e,r){let t=new i(\"COLLECT_FILE_STATISTICS\",[e,r]);await this.postTask(t,[])}async exportFileStatistics(e){let r=new i(\"EXPORT_FILE_STATISTICS\",e);return await this.postTask(r,[])}async copyFileToBuffer(e){let r=new i(\"COPY_FILE_TO_BUFFER\",e);return await this.postTask(r)}async copyFileToPath(e,r){let t=new i(\"COPY_FILE_TO_PATH\",[e,r]);await this.postTask(t)}async insertArrowFromIPCStream(e,r,t){if(r.length==0)return;let o=new i(\"INSERT_ARROW_FROM_IPC_STREAM\",[e,r,t]);await this.postTask(o,[r.buffer])}async insertCSVFromPath(e,r,t){if(t.columns!==void 0){let a=[];for(let n in t.columns){let T=t.columns[n];a.push(m(n,T))}t.columnsFlat=a,delete t.columns}let o=new i(\"IMPORT_CSV_FROM_PATH\",[e,r,t]);await this.postTask(o)}async insertJSONFromPath(e,r,t){if(t.columns!==void 0){let a=[];for(let n in t.columns){let T=t.columns[n];a.push(m(n,T))}t.columnsFlat=a,delete t.columns}let o=new i(\"IMPORT_JSON_FROM_PATH\",[e,r,t]);await this.postTask(o)}};function ae(){let s=new TextDecoder;return e=>(typeof SharedArrayBuffer<\"u\"&&e.buffer instanceof SharedArrayBuffer&&(e=new Uint8Array(e)),s.decode(e))}var Le=ae();var F=(n=>(n[n.BUFFER=0]=\"BUFFER\",n[n.NODE_FS=1]=\"NODE_FS\",n[n.BROWSER_FILEREADER=2]=\"BROWSER_FILEREADER\",n[n.BROWSER_FSACCESS=3]=\"BROWSER_FSACCESS\",n[n.HTTP=4]=\"HTTP\",n[n.S3=5]=\"S3\",n))(F||{});var w=class{constructor(){this._bindings=null;this._nextMessageId=0}log(e){this.postMessage({messageId:this._nextMessageId++,requestId:0,type:\"LOG\",data:e},[])}sendOK(e){this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:\"OK\",data:null},[])}failWith(e,r){let t={name:r.name,message:r.message,stack:r.stack||void 0};this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:\"ERROR\",data:t},[])}async onMessage(e){switch(e.type){case\"PING\":this.sendOK(e);return;case\"INSTANTIATE\":this._bindings!=null&&this.failWith(e,new Error(\"duckdb already initialized\"));try{this._bindings=await this.instantiate(e.data[0],e.data[1],r=>{this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:\"INSTANTIATE_PROGRESS\",data:r},[])}),this.sendOK(e)}catch(r){console.log(r),this._bindings=null,this.failWith(e,r)}return;default:break}if(!this._bindings)return this.failWith(e,new Error(\"duckdb is not initialized\"));try{switch(e.type){case\"GET_VERSION\":this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:\"VERSION_STRING\",data:this._bindings.getVersion()},[]);break;case\"GET_FEATURE_FLAGS\":this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:\"FEATURE_FLAGS\",data:this._bindings.getFeatureFlags()},[]);break;case\"RESET\":this._bindings.reset(),this.sendOK(e);break;case\"OPEN\":{let r=e.data.path;r!=null&&r.startsWith(\"opfs://\")&&(await this._bindings.prepareDBFileHandle(r,3),e.data.useDirectIO=!0),this._bindings.open(e.data),this.sendOK(e);break}case\"DROP_FILE\":this._bindings.dropFile(e.data),this.sendOK(e);break;case\"DROP_FILES\":this._bindings.dropFiles(),this.sendOK(e);break;case\"FLUSH_FILES\":this._bindings.flushFiles(),this.sendOK(e);break;case\"CONNECT\":{let r=this._bindings.connect();this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:\"CONNECTION_INFO\",data:r.useUnsafe((t,o)=>o)},[]);break}case\"DISCONNECT\":this._bindings.disconnect(e.data),this.sendOK(e);break;case\"CREATE_PREPARED\":{let r=this._bindings.createPrepared(e.data[0],e.data[1]);this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:\"PREPARED_STATEMENT_ID\",data:r},[]);break}case\"CLOSE_PREPARED\":{this._bindings.closePrepared(e.data[0],e.data[1]),this.sendOK(e);break}case\"RUN_PREPARED\":{let r=this._bindings.runPrepared(e.data[0],e.data[1],e.data[2]);this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:\"QUERY_RESULT\",data:r},[r.buffer]);break}case\"RUN_QUERY\":{let r=this._bindings.runQuery(e.data[0],e.data[1]);this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:\"QUERY_RESULT\",data:r},[r.buffer]);break}case\"SEND_PREPARED\":{let r=this._bindings.sendPrepared(e.data[0],e.data[1],e.data[2]);this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:\"QUERY_RESULT_HEADER\",data:r},[r.buffer]);break}case\"START_PENDING_QUERY\":{let r=this._bindings.startPendingQuery(e.data[0],e.data[1],e.data[2]),t=[];r&&t.push(r.buffer),this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:\"QUERY_RESULT_HEADER_OR_NULL\",data:r},t);break}case\"POLL_PENDING_QUERY\":{let r=this._bindings.pollPendingQuery(e.data),t=[];r&&t.push(r.buffer),this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:\"QUERY_RESULT_HEADER_OR_NULL\",data:r},t);break}case\"CANCEL_PENDING_QUERY\":{let r=this._bindings.cancelPendingQuery(e.data);this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:\"SUCCESS\",data:r},[]);break}case\"FETCH_QUERY_RESULTS\":{let r=this._bindings.fetchQueryResults(e.data);this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:\"QUERY_RESULT_CHUNK\",data:r},[r.buffer]);break}case\"GET_TABLE_NAMES\":{let r=this._bindings.getTableNames(e.data[0],e.data[1]);this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:\"TABLE_NAMES\",data:r},[]);break}case\"GLOB_FILE_INFOS\":{let r=this._bindings.globFiles(e.data);this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:\"FILE_INFOS\",data:r},[]);break}case\"REGISTER_FILE_URL\":this._bindings.registerFileURL(e.data[0],e.data[1],e.data[2],e.data[3]),this.sendOK(e);break;case\"REGISTER_FILE_BUFFER\":this._bindings.registerFileBuffer(e.data[0],e.data[1]),this.sendOK(e);break;case\"REGISTER_FILE_HANDLE\":await this._bindings.registerFileHandleAsync(e.data[0],e.data[1],e.data[2],e.data[3]),this.sendOK(e);break;case\"COPY_FILE_TO_PATH\":this._bindings.copyFileToPath(e.data[0],e.data[1]),this.sendOK(e);break;case\"COPY_FILE_TO_BUFFER\":{let r=this._bindings.copyFileToBuffer(e.data);this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:\"FILE_BUFFER\",data:r},[]);break}case\"COLLECT_FILE_STATISTICS\":this._bindings.collectFileStatistics(e.data[0],e.data[1]),this.sendOK(e);break;case\"REGISTER_OPFS_FILE_NAME\":this._bindings.registerOPFSFileName(e.data[0]),this.sendOK(e);break;case\"EXPORT_FILE_STATISTICS\":{this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:\"FILE_STATISTICS\",data:this._bindings.exportFileStatistics(e.data)},[]);break}case\"INSERT_ARROW_FROM_IPC_STREAM\":{this._bindings.insertArrowFromIPCStream(e.data[0],e.data[1],e.data[2]),this.sendOK(e);break}case\"IMPORT_CSV_FROM_PATH\":{this._bindings.insertCSVFromPath(e.data[0],e.data[1],e.data[2]),this.sendOK(e);break}case\"IMPORT_JSON_FROM_PATH\":{this._bindings.insertJSONFromPath(e.data[0],e.data[1],e.data[2]),this.sendOK(e);break}case\"TOKENIZE\":{let r=this._bindings.tokenize(e.data);this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:\"SCRIPT_TOKENS\",data:r},[]);break}}}catch(r){return console.log(r),this.failWith(e,r)}}};var f=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,3,1,0,1,10,14,1,12,0,65,0,65,0,65,0,252,10,0,0,11])),U=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,8,1,6,0,6,64,25,11,11]));var C=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11]));var W=()=>(async s=>{try{return typeof MessageChannel<\"u\"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(s)}catch(e){return!1}})(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]));var R={name:\"@duckdb/duckdb-wasm\",version:\"1.29.1-dev132.0\",description:\"DuckDB powered by WebAssembly\",license:\"MIT\",repository:{type:\"git\",url:\"https://github.com/duckdb/duckdb-wasm.git\"},keywords:[\"sql\",\"duckdb\",\"relational\",\"database\",\"data\",\"query\",\"wasm\",\"analytics\",\"olap\",\"arrow\",\"parquet\",\"json\",\"csv\"],dependencies:{\"apache-arrow\":\"^17.0.0\"},devDependencies:{\"@types/emscripten\":\"^1.39.10\",\"@types/jasmine\":\"^5.1.4\",\"@typescript-eslint/eslint-plugin\":\"^6.21.0\",\"@typescript-eslint/parser\":\"^6.21.0\",esbuild:\"^0.20.2\",eslint:\"^8.57.0\",\"eslint-plugin-jasmine\":\"^4.1.3\",\"eslint-plugin-react\":\"^7.34.0\",\"fast-glob\":\"^3.3.2\",jasmine:\"^5.1.0\",\"jasmine-core\":\"^5.1.2\",\"jasmine-spec-reporter\":\"^7.0.0\",\"js-sha256\":\"^0.11.0\",karma:\"^6.4.2\",\"karma-chrome-launcher\":\"^3.2.0\",\"karma-coverage\":\"^2.2.1\",\"karma-firefox-launcher\":\"^2.1.3\",\"karma-jasmine\":\"^5.1.0\",\"karma-jasmine-html-reporter\":\"^2.1.0\",\"karma-sourcemap-loader\":\"^0.4.0\",\"karma-spec-reporter\":\"^0.0.36\",\"make-dir\":\"^4.0.0\",nyc:\"^15.1.0\",prettier:\"^3.2.5\",puppeteer:\"^22.8.0\",rimraf:\"^5.0.5\",s3rver:\"^3.7.1\",typedoc:\"^0.25.13\",typescript:\"^5.3.3\",\"wasm-feature-detect\":\"^1.6.1\",\"web-worker\":\"^1.2.0\"},scripts:{\"build:debug\":\"node bundle.mjs debug && tsc --emitDeclarationOnly\",\"build:release\":\"node bundle.mjs release && tsc --emitDeclarationOnly\",docs:\"typedoc\",report:\"node ./coverage.mjs\",\"test:node\":\"node --enable-source-maps ../../node_modules/jasmine/bin/jasmine ./dist/tests-node.cjs\",\"test:node:debug\":\"node --inspect-brk --enable-source-maps ../../node_modules/jasmine/bin/jasmine ./dist/tests-node.cjs\",\"test:node:coverage\":\"nyc -r json --report-dir ./coverage/node node ../../node_modules/jasmine/bin/jasmine ./dist/tests-node.cjs\",\"test:firefox\":\"karma start ./karma/tests-firefox.cjs\",\"test:chrome\":\"karma start ./karma/tests-chrome.cjs\",\"test:chrome:eh\":\"karma start ./karma/tests-chrome-eh.cjs\",\"test:chrome:coverage\":\"karma start ./karma/tests-chrome-coverage.cjs\",\"test:browser\":\"karma start ./karma/tests-all.cjs\",\"test:browser:debug\":\"karma start ./karma/tests-debug.cjs\",test:\"npm run test:chrome && npm run test:node\",\"test:coverage\":\"npm run test:chrome:coverage && npm run test:node:coverage && npm run report\",lint:\"eslint src test\"},files:[\"dist\",\"!dist/tests-*\",\"!dist/duckdb-browser-mvp.worker.js.map\",\"!dist/types/test\"],main:\"dist/duckdb-browser.cjs\",module:\"dist/duckdb-browser.mjs\",types:\"dist/duckdb-browser.d.ts\",jsdelivr:\"dist/duckdb-browser.cjs\",unpkg:\"dist/duckdb-browser.mjs\",sideEffects:!1,browser:{fs:!1,path:!1,perf_hooks:!1,os:!1,worker_threads:!1},exports:{\"./dist/duckdb-mvp.wasm\":\"./dist/duckdb-mvp.wasm\",\"./dist/duckdb-eh.wasm\":\"./dist/duckdb-eh.wasm\",\"./dist/duckdb-coi.wasm\":\"./dist/duckdb-coi.wasm\",\"./dist/duckdb-browser\":\"./dist/duckdb-browser.mjs\",\"./dist/duckdb-browser.cjs\":\"./dist/duckdb-browser.cjs\",\"./dist/duckdb-browser.mjs\":\"./dist/duckdb-browser.mjs\",\"./dist/duckdb-browser-coi.pthread.worker.js\":\"./dist/duckdb-browser-coi.pthread.worker.js\",\"./dist/duckdb-browser-coi.worker.js\":\"./dist/duckdb-browser-coi.worker.js\",\"./dist/duckdb-browser-eh.worker.js\":\"./dist/duckdb-browser-eh.worker.js\",\"./dist/duckdb-browser-mvp.worker.js\":\"./dist/duckdb-browser-mvp.worker.js\",\"./dist/duckdb-node\":\"./dist/duckdb-node.cjs\",\"./dist/duckdb-node.cjs\":\"./dist/duckdb-node.cjs\",\"./dist/duckdb-node-blocking\":\"./dist/duckdb-node-blocking.cjs\",\"./dist/duckdb-node-blocking.cjs\":\"./dist/duckdb-node-blocking.cjs\",\"./dist/duckdb-node-eh.worker.cjs\":\"./dist/duckdb-node-eh.worker.cjs\",\"./dist/duckdb-node-mvp.worker.cjs\":\"./dist/duckdb-node-mvp.worker.cjs\",\"./blocking\":{node:{types:\"./dist/duckdb-node-blocking.d.ts\",require:\"./dist/duckdb-node-blocking.cjs\",import:\"./dist/duckdb-node-blocking.cjs\"},types:\"./dist/duckdb-node-blocking.d.ts\",import:\"./dist/duckdb-node-blocking.mjs\",require:\"./dist/duckdb-node-blocking.cjs\"},\".\":{browser:{types:\"./dist/duckdb-browser.d.ts\",import:\"./dist/duckdb-browser.mjs\",require:\"./dist/duckdb-browser.cjs\"},node:{types:\"./dist/duckdb-node.d.ts\",import:\"./dist/duckdb-node.cjs\",require:\"./dist/duckdb-node.cjs\"},types:\"./dist/duckdb-browser.d.ts\",import:\"./dist/duckdb-browser.mjs\",require:\"./dist/duckdb-browser.cjs\"}}};var v=R.name,M=R.version,I=R.version.split(\".\"),Ce=I[0],We=I[1],ve=I[2];var B=()=>typeof navigator>\"u\",G=()=>B()?\"node\":navigator.userAgent,Ge=()=>G().includes(\"Firefox\"),xe=()=>/^((?!chrome|android).)*safari/i.test(G());function He(){let s=\"https://cdn.jsdelivr.net/npm/\".concat(v,\"@\").concat(M,\"/dist/\");return{mvp:{mainModule:\"\".concat(s,\"duckdb-mvp.wasm\"),mainWorker:\"\".concat(s,\"duckdb-browser-mvp.worker.js\")},eh:{mainModule:\"\".concat(s,\"duckdb-eh.wasm\"),mainWorker:\"\".concat(s,\"duckdb-browser-eh.worker.js\")}}}var k=null,y=null,g=null,S=null,N=null;async function ce(){return k==null&&(k=typeof BigInt64Array<\"u\"),y==null&&(y=await U()),g==null&&(g=await W()),S==null&&(S=await C()),N==null&&(N=await f()),{bigInt64Array:k,crossOriginIsolated:B()||globalThis.crossOriginIsolated||!1,wasmExceptions:y,wasmSIMD:S,wasmThreads:g,wasmBulkMemory:N}}async function Qe(s){let e=await ce();if(e.wasmExceptions){if(e.wasmSIMD&&e.wasmThreads&&e.crossOriginIsolated&&s.coi)return{mainModule:s.coi.mainModule,mainWorker:s.coi.mainWorker,pthreadWorker:s.coi.pthreadWorker};if(s.eh)return{mainModule:s.eh.mainModule,mainWorker:s.eh.mainWorker,pthreadWorker:null}}return{mainModule:s.mvp.mainModule,mainWorker:s.mvp.mainWorker,pthreadWorker:null}}var Q=$(H());async function je(s){let e=new Request(s),r=await fetch(e),t=URL.createObjectURL(await r.blob());return new Q.default(t)}export{L as AsyncDuckDB,E as AsyncDuckDBConnection,w as AsyncDuckDBDispatcher,b as AsyncPreparedStatement,p as AsyncResultStreamIterator,A as ConsoleLogger,Z as DuckDBAccessMode,F as DuckDBDataProtocol,te as LogEvent,ee as LogLevel,se as LogOrigin,re as LogTopic,v as PACKAGE_NAME,M as PACKAGE_VERSION,Ce as PACKAGE_VERSION_MAJOR,We as PACKAGE_VERSION_MINOR,ve as PACKAGE_VERSION_PATCH,ne as StatusCode,X as TokenType,P as VoidLogger,D as WorkerRequestType,O as WorkerResponseType,i as WorkerTask,je as createWorker,He as getJsDelivrBundles,_e as getLogEventLabel,pe as getLogLevelLabel,Re as getLogOriginLabel,me as getLogTopicLabel,ce as getPlatformFeatures,Ge as isFirefox,B as isNode,xe as isSafari,Qe as selectBundle};\n//# sourceMappingURL=duckdb-browser.mjs.map\n","/**\n * DuckDB CDN Loader - Handles loading DuckDB from CDN or fallback to JSDelivr\n */\nimport * as duckdb from \"@duckdb/duckdb-wasm\";\nimport type { AsyncDuckDB } from \"@duckdb/duckdb-wasm\";\n\nexport interface DuckDBBundle {\n  mainModule: string;\n  mainWorker: string;\n  pthreadWorker?: string;\n}\n\nexport interface DuckDBConfig {\n  baseUrl: string;\n  hybrid?: boolean;\n  workers?: Record<string, string>;\n  assets?: Record<string, string>;\n  bundles?: Record<string, DuckDBBundle>;\n  fallback?: {\n    strategy: string;\n    note: string;\n  };\n}\n\nexport class DuckDBCDNLoader {\n  private config: DuckDBConfig | null = null;\n  private baseUrl: string;\n\n  constructor(baseUrl?: string) {\n    this.baseUrl = baseUrl || this.detectCDNBaseUrl();\n  }\n\n  /**\n   * Detect the CDN base URL from the current script location\n   */\n  private detectCDNBaseUrl(): string {\n    if (typeof window === 'undefined') return '';\n    \n    // Try to detect from current script tag\n    const scripts = Array.from(document.getElementsByTagName('script'));\n    const currentScript = scripts.find(script => \n      script.src && script.src.includes('dataprism')\n    );\n    \n    if (currentScript) {\n      const url = new URL(currentScript.src);\n      return `${url.protocol}//${url.host}${url.pathname.replace(/\\/[^\\/]*$/, '')}`;\n    }\n    \n    return '';\n  }\n\n  /**\n   * Load DuckDB configuration from CDN\n   */\n  private async loadConfig(): Promise<DuckDBConfig> {\n    if (this.config) return this.config;\n\n    try {\n      const configUrl = `${this.baseUrl}/duckdb-config.json`;\n      const response = await fetch(configUrl);\n      \n      if (!response.ok) {\n        throw new Error(`Failed to load DuckDB config: ${response.status}`);\n      }\n      \n      this.config = await response.json();\n      return this.config;\n    } catch (error) {\n      console.warn('Failed to load DuckDB config from CDN, using fallback');\n      throw error;\n    }\n  }\n\n  /**\n   * Get DuckDB bundles from CDN or fallback to JSDelivr\n   */\n  async getBundles(): Promise<any> {\n    try {\n      // Try to load from CDN first\n      const config = await this.loadConfig();\n      \n      if (config.hybrid) {\n        // Hybrid mode: use JSDelivr for WASM, CDN for workers (if needed)\n        console.log('Using hybrid DuckDB loading (JSDelivr WASM + CDN workers)');\n        return duckdb.getJsDelivrBundles();\n      } else if (config.bundles) {\n        // Full CDN mode: everything from CDN\n        const bundles = Object.entries(config.bundles).map(([name, bundle]) => ({\n          name,\n          mainModule: `${this.baseUrl}/${bundle.mainModule}`,\n          mainWorker: `${this.baseUrl}/${bundle.mainWorker}`,\n          pthreadWorker: bundle.pthreadWorker ? `${this.baseUrl}/${bundle.pthreadWorker}` : undefined\n        }));\n\n        return bundles;\n      } else {\n        throw new Error('Invalid CDN configuration');\n      }\n    } catch (error) {\n      // Fallback to JSDelivr\n      console.log('Using JSDelivr fallback for DuckDB');\n      \n      return duckdb.getJsDelivrBundles();\n    }\n  }\n\n  /**\n   * Select the best bundle for the current environment\n   */\n  async selectBundle(bundles: any[]): Promise<any> {\n    try {\n      // If we have CDN bundles, select based on browser capabilities\n      if (Array.isArray(bundles) && bundles.length > 0) {\n        // Check for SharedArrayBuffer support (for COI bundle)\n        if (typeof SharedArrayBuffer !== 'undefined' && bundles.find(b => b.name === 'coi')) {\n          return bundles.find(b => b.name === 'coi');\n        }\n        \n        // Check for exception handling support\n        if (bundles.find(b => b.name === 'eh')) {\n          return bundles.find(b => b.name === 'eh');\n        }\n        \n        // Fallback to MVP\n        return bundles.find(b => b.name === 'mvp') || bundles[0];\n      }\n      \n      // If using JSDelivr bundles, use their selection logic\n      return await duckdb.selectBundle(bundles);\n    } catch (error) {\n      console.error('Bundle selection failed:', error);\n      throw error;\n    }\n  }\n\n\n  /**\n   * Create DuckDB instance with proper bundle loading\n   */\n  async createDuckDB(): Promise<AsyncDuckDB> {\n    const bundles = await this.getBundles();\n    const bundle = await this.selectBundle(bundles);\n    \n    // Create worker URL\n    const worker_url = URL.createObjectURL(\n      new Blob([`importScripts(\"${bundle.mainWorker}\");`], {\n        type: \"text/javascript\",\n      })\n    );\n\n    const worker = new Worker(worker_url);\n    \n    // Create DuckDB instance\n    const logger = new duckdb.ConsoleLogger();\n    const db = new duckdb.AsyncDuckDB(logger, worker);\n\n    // Initialize with the selected bundle\n    await db.instantiate(bundle.mainModule, bundle.pthreadWorker);\n    \n    return db;\n  }\n}","import { AsyncDuckDB, AsyncDuckDBConnection } from \"@duckdb/duckdb-wasm\";\nimport { QueryMetadata, QueryResult, DataPrismError } from \"./types.js\";\nimport { ErrorHandler } from \"./error-handler.js\";\nimport { DuckDBCDNLoader } from \"./duckdb-cdn-loader.js\";\n\nexport class DuckDBManager {\n  private db: AsyncDuckDB | null = null;\n  private connection: AsyncDuckDBConnection | null = null;\n  private initialized = false;\n  private errorHandler = ErrorHandler.getInstance();\n  private cdnLoader: DuckDBCDNLoader;\n\n  constructor(cdnBaseUrl?: string) {\n    this.cdnLoader = new DuckDBCDNLoader(cdnBaseUrl);\n  }\n\n  async initialize(): Promise<void> {\n    if (this.initialized) return;\n\n    try {\n      // Use CDN loader which handles both CDN and JSDelivr fallback\n      this.db = await this.cdnLoader.createDuckDB();\n      this.connection = await this.db.connect();\n\n      this.initialized = true;\n      console.log(\"DuckDB initialized successfully\");\n    } catch (error) {\n      const dataPrismError = this.errorHandler.handleError(error, \"duckdb\");\n      throw new Error(\n        `DuckDB initialization failed: ${dataPrismError.message}`,\n      );\n    }\n  }\n\n  async query<T = any>(sql: string): Promise<QueryResult<T>> {\n    if (!this.connection) {\n      throw new Error(\"DuckDB not initialized\");\n    }\n\n    const startTime = performance.now();\n\n    try {\n      const result = await this.connection.query(sql);\n      const endTime = performance.now();\n\n      const data = result.toArray().map((row) => row.toJSON()) as T[];\n\n      return {\n        data,\n        metadata: {\n          rowCount: data.length,\n          executionTime: endTime - startTime,\n          memoryUsage: this.getMemoryUsage(),\n        },\n      };\n    } catch (error) {\n      const endTime = performance.now();\n      const dataPrismError = this.errorHandler.handleError(error, \"duckdb\");\n\n      return {\n        data: [],\n        metadata: {\n          rowCount: 0,\n          executionTime: endTime - startTime,\n          memoryUsage: this.getMemoryUsage(),\n        },\n        error: dataPrismError,\n      };\n    }\n  }\n\n  async insertData(tableName: string, data: any[]): Promise<void> {\n    if (!this.connection) {\n      throw new Error(\"DuckDB not initialized\");\n    }\n\n    try {\n      // Drop table if it exists\n      await this.connection.query(`DROP TABLE IF EXISTS ${tableName}`);\n\n      // Register data as a table\n      await this.db!.registerFileText(\n        `${tableName}.json`,\n        JSON.stringify(data),\n      );\n\n      // Create table from JSON file\n      await this.connection.query(`\n        CREATE TABLE ${tableName} AS \n        SELECT * FROM read_json_auto('${tableName}.json')\n      `);\n\n      console.log(\n        `Successfully loaded ${data.length} rows into table ${tableName}`,\n      );\n    } catch (error) {\n      this.errorHandler.handleError(error, \"duckdb\");\n      throw error;\n    }\n  }\n\n  async createTable(\n    tableName: string,\n    schema: Record<string, string>,\n  ): Promise<void> {\n    if (!this.connection) {\n      throw new Error(\"DuckDB not initialized\");\n    }\n\n    try {\n      const columns = Object.entries(schema)\n        .map(([name, type]) => `${name} ${type}`)\n        .join(\", \");\n\n      await this.connection.query(`CREATE TABLE ${tableName} (${columns})`);\n    } catch (error) {\n      this.errorHandler.handleError(error, \"duckdb\");\n      throw error;\n    }\n  }\n\n  async listTables(): Promise<string[]> {\n    if (!this.connection) {\n      throw new Error(\"DuckDB not initialized\");\n    }\n\n    try {\n      const result = await this.connection.query(\"SHOW TABLES\");\n      return result.toArray().map((row) => row.toJSON()[\"name\"] as string);\n    } catch (error) {\n      this.errorHandler.handleError(error, \"duckdb\");\n      return [];\n    }\n  }\n\n  async getTableInfo(tableName: string): Promise<any[]> {\n    if (!this.connection) {\n      throw new Error(\"DuckDB not initialized\");\n    }\n\n    try {\n      const result = await this.connection.query(`DESCRIBE ${tableName}`);\n      return result.toArray().map((row) => row.toJSON());\n    } catch (error) {\n      this.errorHandler.handleError(error, \"duckdb\");\n      return [];\n    }\n  }\n\n  private getMemoryUsage(): number {\n    // Estimate memory usage - in real implementation, this would be more sophisticated\n    return (performance as any).memory?.usedJSHeapSize || 0;\n  }\n\n  async close(): Promise<void> {\n    if (this.connection) {\n      await this.connection.close();\n      this.connection = null;\n    }\n    if (this.db) {\n      await this.db.terminate();\n      this.db = null;\n    }\n    this.initialized = false;\n  }\n\n  isInitialized(): boolean {\n    return this.initialized;\n  }\n}\n","import { DataPrismError } from \"./types.js\";\n\nexport type DependencyState = \"loading\" | \"ready\" | \"error\" | \"timeout\" | \"initializing\";\n\nexport interface DependencyMetadata {\n  name: string;\n  version?: string;\n  state: DependencyState;\n  loadStartTime: number;\n  loadEndTime?: number;\n  error?: DataPrismError;\n  retryCount: number;\n  maxRetries: number;\n  timeoutMs: number;\n  requiredFor: string[];\n  module?: any;\n}\n\nexport interface DependencyLoadOptions {\n  timeout?: number;\n  maxRetries?: number;\n  retryDelay?: number;\n  required?: boolean;\n  preload?: boolean;\n}\n\nexport interface DependencyEvent {\n  type: \"loading\" | \"ready\" | \"error\" | \"timeout\" | \"retry\";\n  dependency: string;\n  metadata: DependencyMetadata;\n  error?: DataPrismError;\n}\n\nexport type DependencyEventHandler = (event: DependencyEvent) => void;\n\nexport class DependencyRegistry {\n  private static instance: DependencyRegistry;\n  private dependencies = new Map<string, DependencyMetadata>();\n  private eventHandlers: DependencyEventHandler[] = [];\n  private loadingPromises = new Map<string, Promise<any>>();\n  private timeouts = new Map<string, NodeJS.Timeout>();\n\n  private constructor() {}\n\n  static getInstance(): DependencyRegistry {\n    if (!DependencyRegistry.instance) {\n      DependencyRegistry.instance = new DependencyRegistry();\n    }\n    return DependencyRegistry.instance;\n  }\n\n  registerDependency(\n    name: string,\n    options: DependencyLoadOptions = {}\n  ): DependencyMetadata {\n    const metadata: DependencyMetadata = {\n      name,\n      state: \"initializing\",\n      loadStartTime: Date.now(),\n      retryCount: 0,\n      maxRetries: options.maxRetries || 3,\n      timeoutMs: options.timeout || 30000,\n      requiredFor: [],\n      module: null,\n    };\n\n    this.dependencies.set(name, metadata);\n    this.emitEvent(\"loading\", name, metadata);\n\n    return metadata;\n  }\n\n  async loadDependency(\n    name: string,\n    loader: () => Promise<any>,\n    options: DependencyLoadOptions = {}\n  ): Promise<any> {\n    if (this.loadingPromises.has(name)) {\n      return this.loadingPromises.get(name);\n    }\n\n    const metadata = this.dependencies.get(name) || this.registerDependency(name, options);\n    \n    const loadPromise = this.executeLoad(name, loader, options);\n    this.loadingPromises.set(name, loadPromise);\n\n    return loadPromise;\n  }\n\n  private async executeLoad(\n    name: string,\n    loader: () => Promise<any>,\n    options: DependencyLoadOptions\n  ): Promise<any> {\n    const metadata = this.dependencies.get(name)!;\n    \n    return new Promise((resolve, reject) => {\n      const timeoutId = setTimeout(() => {\n        this.setState(name, \"timeout\");\n        const error: DataPrismError = {\n          message: `Dependency '${name}' failed to load within ${metadata.timeoutMs}ms`,\n          code: \"DEPENDENCY_TIMEOUT\",\n          source: \"orchestration\",\n        };\n        metadata.error = error;\n        this.emitEvent(\"timeout\", name, metadata, error);\n        reject(error);\n      }, metadata.timeoutMs);\n\n      this.timeouts.set(name, timeoutId);\n\n      // Execute the async loading logic\n      this.performLoad(name, loader, options, timeoutId)\n        .then((module) => {\n          clearTimeout(timeoutId);\n          this.timeouts.delete(name);\n          \n          metadata.module = module;\n          metadata.loadEndTime = Date.now();\n          metadata.version = this.extractVersion(module);\n          this.setState(name, \"ready\");\n          \n          this.emitEvent(\"ready\", name, metadata);\n          resolve(module);\n        })\n        .catch((error) => {\n          clearTimeout(timeoutId);\n          this.timeouts.delete(name);\n          \n          const dataPrismError: DataPrismError = {\n            message: `Failed to load dependency '${name}': ${error}`,\n            code: \"DEPENDENCY_LOAD_ERROR\",\n            source: \"orchestration\",\n          };\n          \n          metadata.error = dataPrismError;\n          \n          if (metadata.retryCount < metadata.maxRetries) {\n            metadata.retryCount++;\n            this.emitEvent(\"retry\", name, metadata, dataPrismError);\n            \n            const retryDelay = options.retryDelay || 1000 * metadata.retryCount;\n            setTimeout(() => {\n              this.executeLoad(name, loader, options).then(resolve).catch(reject);\n            }, retryDelay);\n          } else {\n            this.setState(name, \"error\");\n            this.emitEvent(\"error\", name, metadata, dataPrismError);\n            reject(dataPrismError);\n          }\n        });\n    });\n  }\n\n  private async performLoad(\n    name: string,\n    loader: () => Promise<any>,\n    options: DependencyLoadOptions,\n    timeoutId: NodeJS.Timeout\n  ): Promise<any> {\n    this.setState(name, \"loading\");\n    return await loader();\n  }\n\n  private extractVersion(module: any): string | undefined {\n    if (!module) return undefined;\n    \n    // Try common version extraction patterns\n    if (module.version) return module.version;\n    if (module.VERSION) return module.VERSION;\n    if (module.get_version && typeof module.get_version === 'function') {\n      try {\n        return module.get_version();\n      } catch (e) {\n        return undefined;\n      }\n    }\n    \n    // For Apache Arrow, try to extract version from build info\n    if (module.Table && module.RecordBatch) {\n      return \"17.0.0\"; // Known Arrow version from analysis\n    }\n    \n    return undefined;\n  }\n\n  private setState(name: string, state: DependencyState): void {\n    const metadata = this.dependencies.get(name);\n    if (metadata) {\n      metadata.state = state;\n      this.dependencies.set(name, metadata);\n    }\n  }\n\n  private emitEvent(\n    type: DependencyEvent[\"type\"],\n    dependency: string,\n    metadata: DependencyMetadata,\n    error?: DataPrismError\n  ): void {\n    const event: DependencyEvent = {\n      type,\n      dependency,\n      metadata: { ...metadata },\n      error,\n    };\n\n    this.eventHandlers.forEach(handler => {\n      try {\n        handler(event);\n      } catch (e) {\n        console.error(\"Error in dependency event handler:\", e);\n      }\n    });\n  }\n\n  async waitForDependency(\n    name: string,\n    timeoutMs: number = 30000\n  ): Promise<any> {\n    const metadata = this.dependencies.get(name);\n    \n    if (!metadata) {\n      throw new Error(`Dependency '${name}' not registered`);\n    }\n\n    if (metadata.state === \"ready\") {\n      return metadata.module;\n    }\n\n    if (metadata.state === \"error\") {\n      throw metadata.error || new Error(`Dependency '${name}' failed to load`);\n    }\n\n    return new Promise((resolve, reject) => {\n      const timeoutId = setTimeout(() => {\n        reject(new Error(`Timeout waiting for dependency '${name}'`));\n      }, timeoutMs);\n\n      const handler = (event: DependencyEvent) => {\n        if (event.dependency === name) {\n          if (event.type === \"ready\") {\n            clearTimeout(timeoutId);\n            resolve(event.metadata.module);\n          } else if (event.type === \"error\" || event.type === \"timeout\") {\n            clearTimeout(timeoutId);\n            reject(event.error || new Error(`Dependency '${name}' failed to load`));\n          }\n        }\n      };\n\n      this.addEventListener(handler);\n      \n      // Clean up handler after timeout\n      setTimeout(() => {\n        this.removeEventListener(handler);\n      }, timeoutMs + 1000);\n    });\n  }\n\n  async waitForReady(\n    dependencies: string[] = [],\n    timeoutMs: number = 30000\n  ): Promise<Record<string, any>> {\n    const targetDeps = dependencies.length > 0 \n      ? dependencies \n      : Array.from(this.dependencies.keys());\n\n    const results: Record<string, any> = {};\n    \n    await Promise.all(\n      targetDeps.map(async (name) => {\n        try {\n          results[name] = await this.waitForDependency(name, timeoutMs);\n        } catch (error) {\n          throw new Error(`Failed to wait for dependency '${name}': ${error}`);\n        }\n      })\n    );\n\n    return results;\n  }\n\n  isDependencyReady(name: string): boolean {\n    const metadata = this.dependencies.get(name);\n    return metadata?.state === \"ready\";\n  }\n\n  getDependencyState(name: string): DependencyState | undefined {\n    return this.dependencies.get(name)?.state;\n  }\n\n  getDependencyMetadata(name: string): DependencyMetadata | undefined {\n    const metadata = this.dependencies.get(name);\n    return metadata ? { ...metadata } : undefined;\n  }\n\n  getAllDependencies(): DependencyMetadata[] {\n    return Array.from(this.dependencies.values()).map(metadata => ({ ...metadata }));\n  }\n\n  getReadyDependencies(): string[] {\n    return Array.from(this.dependencies.entries())\n      .filter(([_, metadata]) => metadata.state === \"ready\")\n      .map(([name, _]) => name);\n  }\n\n  getFailedDependencies(): string[] {\n    return Array.from(this.dependencies.entries())\n      .filter(([_, metadata]) => metadata.state === \"error\")\n      .map(([name, _]) => name);\n  }\n\n  addEventListener(handler: DependencyEventHandler): void {\n    this.eventHandlers.push(handler);\n  }\n\n  removeEventListener(handler: DependencyEventHandler): void {\n    const index = this.eventHandlers.indexOf(handler);\n    if (index > -1) {\n      this.eventHandlers.splice(index, 1);\n    }\n  }\n\n  async preloadDependencies(dependencies: string[]): Promise<void> {\n    const preloadPromises = dependencies.map(async (name) => {\n      const metadata = this.dependencies.get(name);\n      if (!metadata || metadata.state === \"initializing\") {\n        throw new Error(`Cannot preload unregistered dependency '${name}'`);\n      }\n      \n      if (metadata.state === \"ready\") {\n        return metadata.module;\n      }\n      \n      return this.waitForDependency(name);\n    });\n\n    await Promise.all(preloadPromises);\n  }\n\n  clearDependency(name: string): void {\n    const timeoutId = this.timeouts.get(name);\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n      this.timeouts.delete(name);\n    }\n    \n    this.dependencies.delete(name);\n    this.loadingPromises.delete(name);\n  }\n\n  clearAll(): void {\n    this.timeouts.forEach((timeoutId) => clearTimeout(timeoutId));\n    this.timeouts.clear();\n    this.dependencies.clear();\n    this.loadingPromises.clear();\n    this.eventHandlers.length = 0;\n  }\n\n  getHealthStatus(): {\n    totalDependencies: number;\n    readyCount: number;\n    loadingCount: number;\n    errorCount: number;\n    timeoutCount: number;\n    healthScore: number;\n  } {\n    const all = this.getAllDependencies();\n    const ready = all.filter(d => d.state === \"ready\").length;\n    const loading = all.filter(d => d.state === \"loading\").length;\n    const error = all.filter(d => d.state === \"error\").length;\n    const timeout = all.filter(d => d.state === \"timeout\").length;\n    \n    const healthScore = all.length > 0 ? (ready / all.length) * 100 : 100;\n    \n    return {\n      totalDependencies: all.length,\n      readyCount: ready,\n      loadingCount: loading,\n      errorCount: error,\n      timeoutCount: timeout,\n      healthScore,\n    };\n  }\n}","import { DependencyRegistry } from \"./dependency-registry.js\";\nimport { DataPrismError } from \"./types.js\";\n\nexport interface ArrowModule {\n  Table: any;\n  RecordBatch: any;\n  RecordBatchReader: any;\n  Schema: any;\n  Field: any;\n  Vector: any;\n  Type: any;\n  util: any;\n  version?: string;\n}\n\nexport class ArrowLoader {\n  private static instance: ArrowLoader;\n  private registry: DependencyRegistry;\n  private arrowModule: ArrowModule | null = null;\n\n  private constructor() {\n    this.registry = DependencyRegistry.getInstance();\n  }\n\n  static getInstance(): ArrowLoader {\n    if (!ArrowLoader.instance) {\n      ArrowLoader.instance = new ArrowLoader();\n    }\n    return ArrowLoader.instance;\n  }\n\n  async loadArrow(): Promise<ArrowModule> {\n    if (this.arrowModule) {\n      return this.arrowModule;\n    }\n\n    try {\n      const module = await this.registry.loadDependency(\n        \"apache-arrow\",\n        () => this.loadArrowModule(),\n        {\n          timeout: 15000,\n          maxRetries: 3,\n          retryDelay: 2000,\n          required: true,\n        }\n      );\n\n      this.arrowModule = module;\n      return module;\n    } catch (error) {\n      const dataPrismError: DataPrismError = {\n        message: `Failed to load Apache Arrow: ${error}`,\n        code: \"ARROW_LOAD_ERROR\",\n        source: \"orchestration\",\n      };\n      throw dataPrismError;\n    }\n  }\n\n  private async loadArrowModule(): Promise<ArrowModule> {\n    // Try multiple loading strategies based on the environment\n    const loadStrategies = [\n      () => this.loadFromGlobal(),\n      () => this.loadFromImport(),\n      () => this.loadFromCDN(),\n      () => this.loadFromFallback(),\n    ];\n\n    let lastError: Error | null = null;\n\n    for (const strategy of loadStrategies) {\n      try {\n        const module = await strategy();\n        if (this.validateArrowModule(module)) {\n          return module;\n        }\n      } catch (error) {\n        lastError = error as Error;\n        continue;\n      }\n    }\n\n    throw new Error(\n      `All Arrow loading strategies failed. Last error: ${lastError?.message}`\n    );\n  }\n\n  private async loadFromGlobal(): Promise<ArrowModule> {\n    // Check if Arrow is available globally (from externalized build)\n    if (typeof window !== \"undefined\" && (window as any).Arrow) {\n      return (window as any).Arrow;\n    }\n    throw new Error(\"Arrow not found in global scope\");\n  }\n\n  private async loadFromImport(): Promise<ArrowModule> {\n    // Try dynamic import\n    try {\n      const module = await import(\"apache-arrow\");\n      return module;\n    } catch (error) {\n      throw new Error(`Dynamic import failed: ${error}`);\n    }\n  }\n\n  private async loadFromCDN(): Promise<ArrowModule> {\n    // Load from CDN as fallback\n    return new Promise((resolve, reject) => {\n      const script = document.createElement(\"script\");\n      script.src = \"https://cdn.jsdelivr.net/npm/apache-arrow@17.0.0/dist/Arrow.dom.min.js\";\n      script.onload = () => {\n        if ((window as any).Arrow) {\n          resolve((window as any).Arrow);\n        } else {\n          reject(new Error(\"Arrow not available after CDN load\"));\n        }\n      };\n      script.onerror = () => {\n        reject(new Error(\"Failed to load Arrow from CDN\"));\n      };\n      document.head.appendChild(script);\n    });\n  }\n\n  private async loadFromFallback(): Promise<ArrowModule> {\n    // Final fallback - try alternative CDN\n    return new Promise((resolve, reject) => {\n      const script = document.createElement(\"script\");\n      script.src = \"https://unpkg.com/apache-arrow@17.0.0/dist/Arrow.dom.min.js\";\n      script.onload = () => {\n        if ((window as any).Arrow) {\n          resolve((window as any).Arrow);\n        } else {\n          reject(new Error(\"Arrow not available after fallback CDN load\"));\n        }\n      };\n      script.onerror = () => {\n        reject(new Error(\"Failed to load Arrow from fallback CDN\"));\n      };\n      document.head.appendChild(script);\n    });\n  }\n\n  private validateArrowModule(module: any): boolean {\n    if (!module) return false;\n\n    // Check for essential Arrow components\n    const requiredComponents = [\n      \"Table\",\n      \"RecordBatch\", \n      \"RecordBatchReader\",\n      \"Schema\",\n      \"Field\",\n      \"Vector\",\n      \"Type\",\n    ];\n\n    return requiredComponents.every(component => \n      typeof module[component] !== \"undefined\"\n    );\n  }\n\n  async waitForArrow(timeoutMs: number = 30000): Promise<ArrowModule> {\n    try {\n      return await this.registry.waitForDependency(\"apache-arrow\", timeoutMs);\n    } catch (error) {\n      // If not already loaded, try to load it\n      return await this.loadArrow();\n    }\n  }\n\n  isArrowReady(): boolean {\n    return this.registry.isDependencyReady(\"apache-arrow\");\n  }\n\n  getArrowModule(): ArrowModule | null {\n    return this.arrowModule;\n  }\n\n  async preloadArrow(): Promise<void> {\n    if (!this.isArrowReady()) {\n      await this.loadArrow();\n    }\n  }\n\n  getArrowVersion(): string | undefined {\n    if (this.arrowModule) {\n      return this.arrowModule.version || \"17.0.0\";\n    }\n    return undefined;\n  }\n\n  createArrowError(message: string, originalError?: Error): DataPrismError {\n    return {\n      message: `Arrow Error: ${message}${originalError ? ` - ${originalError.message}` : \"\"}`,\n      code: \"ARROW_ERROR\",\n      source: \"orchestration\",\n    };\n  }\n\n  async createRecordBatchReader(data: Uint8Array): Promise<any> {\n    const arrow = await this.waitForArrow();\n    \n    try {\n      return arrow.RecordBatchReader.from(data);\n    } catch (error) {\n      throw this.createArrowError(\n        \"Failed to create RecordBatchReader\",\n        error as Error\n      );\n    }\n  }\n\n  async createTable(data: any): Promise<any> {\n    const arrow = await this.waitForArrow();\n    \n    try {\n      return arrow.Table.from(data);\n    } catch (error) {\n      throw this.createArrowError(\n        \"Failed to create Arrow Table\",\n        error as Error\n      );\n    }\n  }\n\n  async validateArrowData(data: any): Promise<boolean> {\n    try {\n      await this.waitForArrow();\n      // Basic validation - check if data can be processed by Arrow\n      if (!data) return false;\n      \n      // Check for Arrow-compatible data structures\n      if (data instanceof Uint8Array) return true;\n      if (Array.isArray(data)) return true;\n      if (data.constructor && data.constructor.name === \"Table\") return true;\n      if (data.constructor && data.constructor.name === \"RecordBatch\") return true;\n      \n      return false;\n    } catch (error) {\n      return false;\n    }\n  }\n}","import { DuckDBManager } from \"./duckdb-manager.js\";\nimport {\n  QueryResult,\n  DataPrismConfig,\n  EngineStatus,\n  PerformanceMetrics,\n} from \"./types.js\";\nimport { ErrorHandler } from \"./error-handler.js\";\nimport { DependencyRegistry } from \"./dependency-registry.js\";\nimport { ArrowLoader } from \"./arrow-loader.js\";\n\n// WASM module will be available after build\ninterface WasmModule {\n  QueryEngine: any;\n  init_panic_hook: () => void;\n  get_version: () => string;\n  get_build_info: () => any;\n}\n\nexport class DataPrismEngine {\n  private duckdb: DuckDBManager;\n  private wasmEngine: any = null;\n  private wasmModule: WasmModule | null = null;\n  private config: DataPrismConfig;\n  private initialized = false;\n  private startTime = Date.now();\n  private errorHandler = ErrorHandler.getInstance();\n  private dependencyRegistry = DependencyRegistry.getInstance();\n  private arrowLoader = ArrowLoader.getInstance();\n  private metrics: PerformanceMetrics = {\n    queryCount: 0,\n    totalExecutionTime: 0,\n    averageResponseTime: 0,\n    memoryPeakUsage: 0,\n  };\n\n  constructor(config: Partial<DataPrismConfig> = {}) {\n    this.config = {\n      enableWasmOptimizations: true,\n      maxMemoryMB: 4096,\n      queryTimeoutMs: 30000,\n      logLevel: \"info\",\n      ...config,\n    };\n    this.duckdb = new DuckDBManager();\n  }\n\n  async initialize(): Promise<void> {\n    if (this.initialized) return;\n\n    try {\n      // Initialize dependencies in parallel for better performance\n      const initPromises = [];\n\n      // Initialize DuckDB\n      initPromises.push(\n        this.dependencyRegistry.loadDependency(\n          \"duckdb\",\n          () => this.duckdb.initialize(),\n          { timeout: 30000, maxRetries: 3 }\n        )\n      );\n\n      // Initialize Arrow\n      initPromises.push(\n        this.arrowLoader.loadArrow().catch(error => {\n          this.log(\"warn\", `Arrow initialization failed: ${error.message}`);\n          return null;\n        })\n      );\n\n      // Initialize WASM module if available\n      if (this.config.enableWasmOptimizations) {\n        initPromises.push(\n          this.dependencyRegistry.loadDependency(\n            \"wasm-core\",\n            () => this.initializeWasm(),\n            { timeout: 20000, maxRetries: 2 }\n          ).catch(error => {\n            this.log(\"warn\", `WASM initialization failed: ${error.message}`);\n            this.config.enableWasmOptimizations = false;\n            return null;\n          })\n        );\n      }\n\n      // Wait for all dependencies to load\n      await Promise.allSettled(initPromises);\n\n      this.initialized = true;\n      this.log(\"info\", \"DataPrism Engine initialized successfully\");\n      \n      // Log dependency status\n      this.logDependencyStatus();\n    } catch (error) {\n      this.errorHandler.handleError(error, \"orchestration\");\n      throw error;\n    }\n  }\n\n  private async initializeWasm(): Promise<void> {\n    // Skip WASM initialization during build process\n    if (typeof window === \"undefined\") {\n      throw new Error(\"WASM not available in Node environment\");\n    }\n\n    try {\n      // Dynamic import the WASM module - construct path dynamically to avoid TS resolution\n      const corePackageName = \"@dataprism/core\";\n      const wasmModule = await import(/* @vite-ignore */ corePackageName);\n\n      // Try to initialize with public WASM file first, then fallback\n      try {\n        await wasmModule.default(\"/wasm/dataprism_core_bg.wasm\");\n      } catch (error) {\n        // Fallback to default initialization\n        await wasmModule.default();\n      }\n\n      wasmModule.init_panic_hook();\n\n      this.wasmModule = wasmModule;\n      this.wasmEngine = new wasmModule.QueryEngine();\n\n      this.log(\"info\", `WASM module version: ${wasmModule.get_version()}`);\n    } catch (error) {\n      throw new Error(`WASM initialization failed: ${error}`);\n    }\n  }\n\n  async query(sql: string): Promise<QueryResult> {\n    if (!this.initialized) {\n      throw new Error(\"Engine not initialized\");\n    }\n\n    const startTime = performance.now();\n    this.metrics.queryCount++;\n\n    try {\n      // Route query through DuckDB for analytical processing\n      const result = await this.duckdb.query(sql);\n\n      // Apply WASM optimizations if enabled and beneficial\n      if (\n        this.config.enableWasmOptimizations &&\n        this.wasmEngine &&\n        this.shouldUseWasmOptimization(result)\n      ) {\n        return await this.applyWasmOptimizations(result);\n      }\n\n      this.updateMetrics(\n        performance.now() - startTime,\n        result.metadata.memoryUsage,\n      );\n      return result;\n    } catch (error) {\n      this.errorHandler.handleError(error, \"orchestration\");\n      throw error;\n    }\n  }\n\n  async loadData(data: any[], tableName: string = \"main_table\"): Promise<void> {\n    if (!this.initialized) {\n      throw new Error(\"Engine not initialized\");\n    }\n\n    try {\n      await this.duckdb.insertData(tableName, data);\n      this.log(\"info\", `Loaded ${data.length} rows into table ${tableName}`);\n    } catch (error) {\n      this.errorHandler.handleError(error, \"orchestration\");\n      throw error;\n    }\n  }\n\n  async createTable(\n    tableName: string,\n    schema: Record<string, string>,\n  ): Promise<void> {\n    if (!this.initialized) {\n      throw new Error(\"Engine not initialized\");\n    }\n\n    await this.duckdb.createTable(tableName, schema);\n  }\n\n  async listTables(): Promise<string[]> {\n    if (!this.initialized) {\n      throw new Error(\"Engine not initialized\");\n    }\n\n    return await this.duckdb.listTables();\n  }\n\n  async getTableInfo(tableName: string): Promise<any[]> {\n    if (!this.initialized) {\n      throw new Error(\"Engine not initialized\");\n    }\n\n    return await this.duckdb.getTableInfo(tableName);\n  }\n\n  private shouldUseWasmOptimization(result: QueryResult): boolean {\n    // Determine if WASM optimizations would be beneficial\n    // For example, large result sets or complex transformations\n    return result.data.length > 1000 || result.metadata.executionTime > 1000;\n  }\n\n  private async applyWasmOptimizations(\n    result: QueryResult,\n  ): Promise<QueryResult> {\n    if (!this.wasmEngine) {\n      return result;\n    }\n\n    try {\n      // Convert data to bytes for WASM processing\n      const dataBytes = new TextEncoder().encode(JSON.stringify(result.data));\n\n      // Process through WASM engine\n      const wasmResult = await this.wasmEngine.process_data(dataBytes);\n\n      return {\n        data: JSON.parse(wasmResult.data),\n        metadata: {\n          rowCount: wasmResult.row_count,\n          executionTime:\n            result.metadata.executionTime + wasmResult.execution_time_ms,\n          memoryUsage: Math.max(\n            result.metadata.memoryUsage,\n            wasmResult.memory_used_bytes,\n          ),\n        },\n      };\n    } catch (error) {\n      this.log(\n        \"warn\",\n        `WASM optimization failed, falling back to original result: ${error}`,\n      );\n      return result;\n    }\n  }\n\n  private updateMetrics(executionTime: number, memoryUsage: number): void {\n    this.metrics.totalExecutionTime += executionTime;\n    this.metrics.averageResponseTime =\n      this.metrics.totalExecutionTime / this.metrics.queryCount;\n    this.metrics.memoryPeakUsage = Math.max(\n      this.metrics.memoryPeakUsage,\n      memoryUsage,\n    );\n  }\n\n  getMemoryUsage(): number {\n    if (this.wasmEngine) {\n      return this.wasmEngine.get_memory_usage();\n    }\n    return (performance as any).memory?.usedJSHeapSize || 0;\n  }\n\n  getMetrics(): PerformanceMetrics {\n    return { ...this.metrics };\n  }\n\n  getStatus(): EngineStatus {\n    return {\n      initialized: this.initialized,\n      wasmModuleLoaded: !!this.wasmModule,\n      duckdbConnected: this.duckdb.isInitialized(),\n      memoryUsage: this.getMemoryUsage(),\n      uptime: Date.now() - this.startTime,\n      dependencies: this.getDependencyStatus(),\n      dependencyHealth: this.getDependencyHealth(),\n    };\n  }\n\n  getVersion(): string {\n    return this.wasmModule?.get_version() || \"0.1.0\";\n  }\n\n  getBuildInfo(): any {\n    return (\n      this.wasmModule?.get_build_info() || {\n        version: \"0.1.0\",\n        source: \"typescript\",\n      }\n    );\n  }\n\n  private log(level: string, message: string): void {\n    if (\n      this.config.logLevel === \"debug\" ||\n      (this.config.logLevel === \"info\" && level !== \"debug\") ||\n      (this.config.logLevel === \"warn\" &&\n        (level === \"warn\" || level === \"error\")) ||\n      (this.config.logLevel === \"error\" && level === \"error\")\n    ) {\n      console.log(`[DataPrism:${level.toUpperCase()}] ${message}`);\n    }\n  }\n\n  async waitForReady(dependencies?: string[], timeoutMs: number = 30000): Promise<void> {\n    if (!this.initialized) {\n      await this.initialize();\n    }\n\n    try {\n      await this.dependencyRegistry.waitForReady(dependencies, timeoutMs);\n      this.log(\"info\", \"All dependencies are ready\");\n    } catch (error) {\n      const healthStatus = this.dependencyRegistry.getHealthStatus();\n      this.log(\"error\", `Dependency readiness check failed. Health: ${healthStatus.healthScore}%`);\n      throw error;\n    }\n  }\n\n  async waitForDuckDB(timeoutMs: number = 30000): Promise<void> {\n    await this.dependencyRegistry.waitForDependency(\"duckdb\", timeoutMs);\n  }\n\n  async waitForArrow(timeoutMs: number = 30000): Promise<void> {\n    await this.arrowLoader.waitForArrow(timeoutMs);\n  }\n\n  async waitForWasm(timeoutMs: number = 20000): Promise<void> {\n    if (this.config.enableWasmOptimizations) {\n      await this.dependencyRegistry.waitForDependency(\"wasm-core\", timeoutMs);\n    }\n  }\n\n  async preloadDependencies(dependencies: string[] = []): Promise<void> {\n    const targetDeps = dependencies.length > 0 ? dependencies : [\"duckdb\", \"apache-arrow\"];\n    \n    if (this.config.enableWasmOptimizations) {\n      targetDeps.push(\"wasm-core\");\n    }\n\n    try {\n      await this.dependencyRegistry.preloadDependencies(targetDeps);\n      this.log(\"info\", `Preloaded dependencies: ${targetDeps.join(\", \")}`);\n    } catch (error) {\n      this.log(\"warn\", `Failed to preload some dependencies: ${error}`);\n    }\n  }\n\n  isReady(): boolean {\n    return this.initialized && this.dependencyRegistry.isDependencyReady(\"duckdb\");\n  }\n\n  getDependencyStatus(): {\n    duckdb: boolean;\n    arrow: boolean;\n    wasm: boolean;\n    overall: boolean;\n  } {\n    return {\n      duckdb: this.dependencyRegistry.isDependencyReady(\"duckdb\"),\n      arrow: this.arrowLoader.isArrowReady(),\n      wasm: this.config.enableWasmOptimizations ? \n        this.dependencyRegistry.isDependencyReady(\"wasm-core\") : true,\n      overall: this.isReady(),\n    };\n  }\n\n  getDependencyHealth(): any {\n    return this.dependencyRegistry.getHealthStatus();\n  }\n\n  private logDependencyStatus(): void {\n    const status = this.getDependencyStatus();\n    const health = this.getDependencyHealth();\n    \n    this.log(\"info\", `Dependency Status - DuckDB: ${status.duckdb}, Arrow: ${status.arrow}, WASM: ${status.wasm}`);\n    this.log(\"info\", `Overall Health Score: ${health.healthScore}%`);\n    \n    if (health.errorCount > 0) {\n      const failedDeps = this.dependencyRegistry.getFailedDependencies();\n      this.log(\"warn\", `Failed dependencies: ${failedDeps.join(\", \")}`);\n    }\n  }\n\n  async close(): Promise<void> {\n    await this.duckdb.close();\n    this.wasmEngine = null;\n    this.wasmModule = null;\n    this.initialized = false;\n    this.dependencyRegistry.clearAll();\n    this.log(\"info\", \"DataPrism Engine closed\");\n  }\n}\n","import { DataPrismError } from \"./types.js\";\nimport { DependencyRegistry, DependencyMetadata } from \"./dependency-registry.js\";\n\nexport interface EnhancedError extends DataPrismError {\n  dependency?: string;\n  retryCount?: number;\n  troubleshooting?: string[];\n  context?: {\n    loadTime?: number;\n    browserInfo?: string;\n    networkStatus?: string;\n    cdnStatus?: string;\n  };\n}\n\nexport class DependencyErrorHandler {\n  private static instance: DependencyErrorHandler;\n  private registry: DependencyRegistry;\n\n  private constructor() {\n    this.registry = DependencyRegistry.getInstance();\n  }\n\n  static getInstance(): DependencyErrorHandler {\n    if (!DependencyErrorHandler.instance) {\n      DependencyErrorHandler.instance = new DependencyErrorHandler();\n    }\n    return DependencyErrorHandler.instance;\n  }\n\n  createDependencyError(\n    dependency: string,\n    originalError: Error,\n    metadata?: DependencyMetadata\n  ): EnhancedError {\n    const enhancedError: EnhancedError = {\n      message: this.createContextualMessage(dependency, originalError, metadata),\n      code: this.getDependencyErrorCode(dependency, originalError),\n      source: \"orchestration\",\n      dependency,\n      retryCount: metadata?.retryCount || 0,\n      troubleshooting: this.getTroubleshootingSteps(dependency, originalError),\n      context: this.gatherContext(dependency, metadata),\n    };\n\n    return enhancedError;\n  }\n\n  private createContextualMessage(\n    dependency: string,\n    originalError: Error,\n    metadata?: DependencyMetadata\n  ): string {\n    const baseMessage = `Failed to load dependency '${dependency}': ${originalError.message}`;\n    \n    if (!metadata) {\n      return baseMessage;\n    }\n\n    const loadTime = metadata.loadEndTime ? \n      metadata.loadEndTime - metadata.loadStartTime : \n      Date.now() - metadata.loadStartTime;\n\n    let contextMessage = baseMessage;\n    \n    if (metadata.retryCount > 0) {\n      contextMessage += ` (Retry ${metadata.retryCount}/${metadata.maxRetries})`;\n    }\n\n    if (loadTime > 10000) {\n      contextMessage += ` - Loading took ${Math.round(loadTime / 1000)}s`;\n    }\n\n    if (metadata.requiredFor.length > 0) {\n      contextMessage += ` - Required for: ${metadata.requiredFor.join(\", \")}`;\n    }\n\n    return contextMessage;\n  }\n\n  private getDependencyErrorCode(dependency: string, error: Error): string {\n    const errorMessage = error.message.toLowerCase();\n    \n    if (errorMessage.includes(\"timeout\")) {\n      return `${dependency.toUpperCase()}_TIMEOUT`;\n    }\n    \n    if (errorMessage.includes(\"network\") || errorMessage.includes(\"fetch\")) {\n      return `${dependency.toUpperCase()}_NETWORK_ERROR`;\n    }\n    \n    if (errorMessage.includes(\"not found\") || errorMessage.includes(\"404\")) {\n      return `${dependency.toUpperCase()}_NOT_FOUND`;\n    }\n    \n    if (errorMessage.includes(\"cors\") || errorMessage.includes(\"cross-origin\")) {\n      return `${dependency.toUpperCase()}_CORS_ERROR`;\n    }\n    \n    if (errorMessage.includes(\"import\") || errorMessage.includes(\"module\")) {\n      return `${dependency.toUpperCase()}_IMPORT_ERROR`;\n    }\n    \n    return `${dependency.toUpperCase()}_LOAD_ERROR`;\n  }\n\n  private getTroubleshootingSteps(dependency: string, error: Error): string[] {\n    const steps: string[] = [];\n    const errorMessage = error.message.toLowerCase();\n\n    // Common troubleshooting steps\n    steps.push(\"Check your internet connection\");\n    steps.push(\"Verify the dependency version is compatible\");\n\n    // Dependency-specific troubleshooting\n    switch (dependency) {\n      case \"apache-arrow\":\n        steps.push(\"Ensure Apache Arrow is available in your build configuration\");\n        steps.push(\"Check if Arrow is properly externalized in your bundler\");\n        steps.push(\"Verify CORS headers if loading from CDN\");\n        steps.push(\"Try loading from a different CDN (JSDelivr, unpkg)\");\n        \n        if (errorMessage.includes(\"recordbatchreader\")) {\n          steps.push(\"The RecordBatchReader is not available - Arrow may not be fully loaded\");\n          steps.push(\"Try calling await engine.waitForArrow() before using Arrow features\");\n        }\n        break;\n\n      case \"duckdb\":\n        steps.push(\"Check if DuckDB WASM files are accessible\");\n        steps.push(\"Verify SharedArrayBuffer is available for multi-threading\");\n        steps.push(\"Check COEP/COOP headers for cross-origin isolation\");\n        steps.push(\"Try fallback to single-threaded mode\");\n        break;\n\n      case \"wasm-core\":\n        steps.push(\"Verify WASM files are built and accessible\");\n        steps.push(\"Check if WebAssembly is supported in your browser\");\n        steps.push(\"Ensure WASM files are served with correct MIME type\");\n        break;\n    }\n\n    // Error-specific troubleshooting\n    if (errorMessage.includes(\"timeout\")) {\n      steps.push(\"Increase timeout duration in configuration\");\n      steps.push(\"Check if CDN is experiencing issues\");\n    }\n\n    if (errorMessage.includes(\"cors\")) {\n      steps.push(\"Configure CORS headers on your server\");\n      steps.push(\"Use same-origin resources when possible\");\n    }\n\n    if (errorMessage.includes(\"network\")) {\n      steps.push(\"Check firewall and proxy settings\");\n      steps.push(\"Try using a different network\");\n    }\n\n    return steps;\n  }\n\n  private gatherContext(dependency: string, metadata?: DependencyMetadata): any {\n    const context: any = {};\n\n    if (metadata) {\n      context.loadTime = metadata.loadEndTime ? \n        metadata.loadEndTime - metadata.loadStartTime : \n        Date.now() - metadata.loadStartTime;\n    }\n\n    // Browser context\n    if (typeof window !== \"undefined\") {\n      context.browserInfo = `${navigator.userAgent}`;\n      context.networkStatus = navigator.onLine ? \"online\" : \"offline\";\n      \n      // WebAssembly support\n      if (dependency === \"wasm-core\") {\n        context.wasmSupport = typeof WebAssembly !== \"undefined\";\n      }\n      \n      // SharedArrayBuffer support (for DuckDB)\n      if (dependency === \"duckdb\") {\n        context.sharedArrayBufferSupport = typeof SharedArrayBuffer !== \"undefined\";\n        context.crossOriginIsolated = window.crossOriginIsolated;\n      }\n    }\n\n    return context;\n  }\n\n  formatErrorForLogging(error: EnhancedError): string {\n    let formatted = `[${error.code}] ${error.message}`;\n\n    if (error.context) {\n      formatted += \"\\n  Context:\";\n      Object.entries(error.context).forEach(([key, value]) => {\n        formatted += `\\n    ${key}: ${value}`;\n      });\n    }\n\n    if (error.troubleshooting && error.troubleshooting.length > 0) {\n      formatted += \"\\n  Troubleshooting:\";\n      error.troubleshooting.forEach((step, index) => {\n        formatted += `\\n    ${index + 1}. ${step}`;\n      });\n    }\n\n    return formatted;\n  }\n\n  createRetryStrategy(\n    dependency: string,\n    error: Error,\n    retryCount: number\n  ): {\n    shouldRetry: boolean;\n    delay: number;\n    maxRetries: number;\n  } {\n    const errorMessage = error.message.toLowerCase();\n    \n    // Base retry configuration\n    let shouldRetry = true;\n    let delay = 1000 * Math.pow(2, retryCount); // Exponential backoff\n    let maxRetries = 3;\n\n    // Dependency-specific retry logic\n    switch (dependency) {\n      case \"apache-arrow\":\n        maxRetries = 4; // Arrow can be retried more times\n        if (errorMessage.includes(\"not found\")) {\n          shouldRetry = false; // Don't retry if Arrow is not found\n        }\n        break;\n\n      case \"duckdb\":\n        maxRetries = 3;\n        if (errorMessage.includes(\"sharedarraybuffer\")) {\n          shouldRetry = false; // Can't retry browser support issues\n        }\n        break;\n\n      case \"wasm-core\":\n        maxRetries = 2;\n        if (errorMessage.includes(\"webassembly\")) {\n          shouldRetry = false; // Can't retry browser support issues\n        }\n        break;\n    }\n\n    // Error-specific retry logic\n    if (errorMessage.includes(\"timeout\")) {\n      delay = Math.min(delay * 1.5, 10000); // Longer delays for timeouts\n    }\n\n    if (errorMessage.includes(\"cors\")) {\n      shouldRetry = false; // CORS errors won't resolve with retries\n    }\n\n    if (errorMessage.includes(\"404\") || errorMessage.includes(\"not found\")) {\n      shouldRetry = false; // Don't retry missing resources\n    }\n\n    return {\n      shouldRetry: shouldRetry && retryCount < maxRetries,\n      delay: Math.min(delay, 10000), // Cap at 10 seconds\n      maxRetries,\n    };\n  }\n\n  logDependencyError(error: EnhancedError): void {\n    const formatted = this.formatErrorForLogging(error);\n    \n    if (error.retryCount === 0) {\n      console.error(\"[DataPrism] Dependency Error:\", formatted);\n    } else {\n      console.warn(`[DataPrism] Dependency Retry ${error.retryCount}:`, formatted);\n    }\n  }\n\n  createUserFriendlyMessage(error: EnhancedError): string {\n    const dependency = error.dependency || \"unknown\";\n    \n    let message = `We're having trouble loading ${dependency}. `;\n    \n    if (error.context?.networkStatus === \"offline\") {\n      message += \"Please check your internet connection and try again.\";\n    } else if (error.code.includes(\"TIMEOUT\")) {\n      message += \"The loading process is taking longer than expected. Please try again.\";\n    } else if (error.code.includes(\"CORS\")) {\n      message += \"There's a configuration issue with cross-origin requests. Please contact support.\";\n    } else {\n      message += \"Please try refreshing the page or contact support if the problem persists.\";\n    }\n\n    return message;\n  }\n}","import { DependencyRegistry, DependencyEvent } from \"./dependency-registry.js\";\n\nexport type DataPrismEventType = \n  | \"dependencyLoading\"\n  | \"dependencyReady\" \n  | \"dependencyError\"\n  | \"dependencyTimeout\"\n  | \"dependencyRetry\"\n  | \"engineReady\"\n  | \"arrowReady\"\n  | \"duckdbReady\"\n  | \"wasmReady\"\n  | \"allDependenciesReady\"\n  | \"initializationProgress\";\n\nexport interface DataPrismEvent {\n  type: DataPrismEventType;\n  dependency?: string;\n  progress?: {\n    loaded: number;\n    total: number;\n    percentage: number;\n  };\n  error?: Error;\n  metadata?: any;\n  timestamp: number;\n}\n\nexport type DataPrismEventHandler = (event: DataPrismEvent) => void;\n\nexport class DependencyEventSystem {\n  private static instance: DependencyEventSystem;\n  private eventHandlers = new Map<DataPrismEventType, DataPrismEventHandler[]>();\n  private registry: DependencyRegistry;\n  private initializationStartTime: number = 0;\n\n  private constructor() {\n    this.registry = DependencyRegistry.getInstance();\n    this.setupRegistryEventHandlers();\n  }\n\n  static getInstance(): DependencyEventSystem {\n    if (!DependencyEventSystem.instance) {\n      DependencyEventSystem.instance = new DependencyEventSystem();\n    }\n    return DependencyEventSystem.instance;\n  }\n\n  private setupRegistryEventHandlers(): void {\n    this.registry.addEventListener((event: DependencyEvent) => {\n      this.handleRegistryEvent(event);\n    });\n  }\n\n  private handleRegistryEvent(event: DependencyEvent): void {\n    const dataPrismEvent: DataPrismEvent = {\n      type: this.mapRegistryEventType(event.type, event.dependency),\n      dependency: event.dependency,\n      error: event.error,\n      metadata: event.metadata,\n      timestamp: Date.now(),\n    };\n\n    // Add progress information\n    if (event.type === \"loading\" || event.type === \"ready\") {\n      dataPrismEvent.progress = this.calculateProgress();\n    }\n\n    // Emit the mapped event\n    this.emit(dataPrismEvent.type, dataPrismEvent);\n\n    // Check if all dependencies are ready\n    if (event.type === \"ready\") {\n      this.checkAllDependenciesReady();\n    }\n  }\n\n  private mapRegistryEventType(\n    registryEventType: DependencyEvent[\"type\"],\n    dependency: string\n  ): DataPrismEventType {\n    switch (registryEventType) {\n      case \"loading\":\n        return \"dependencyLoading\";\n      case \"ready\":\n        return this.getSpecificReadyEventType(dependency);\n      case \"error\":\n        return \"dependencyError\";\n      case \"timeout\":\n        return \"dependencyTimeout\";\n      case \"retry\":\n        return \"dependencyRetry\";\n      default:\n        return \"dependencyLoading\";\n    }\n  }\n\n  private getSpecificReadyEventType(dependency: string): DataPrismEventType {\n    switch (dependency) {\n      case \"apache-arrow\":\n        return \"arrowReady\";\n      case \"duckdb\":\n        return \"duckdbReady\";\n      case \"wasm-core\":\n        return \"wasmReady\";\n      default:\n        return \"dependencyReady\";\n    }\n  }\n\n  private calculateProgress(): { loaded: number; total: number; percentage: number } {\n    const allDeps = this.registry.getAllDependencies();\n    const readyDeps = allDeps.filter(dep => dep.state === \"ready\");\n    const total = allDeps.length;\n    const loaded = readyDeps.length;\n    \n    return {\n      loaded,\n      total,\n      percentage: total > 0 ? Math.round((loaded / total) * 100) : 0,\n    };\n  }\n\n  private checkAllDependenciesReady(): void {\n    const allDeps = this.registry.getAllDependencies();\n    const readyDeps = allDeps.filter(dep => dep.state === \"ready\");\n    \n    if (allDeps.length > 0 && readyDeps.length === allDeps.length) {\n      this.emit(\"allDependenciesReady\", {\n        type: \"allDependenciesReady\",\n        progress: this.calculateProgress(),\n        timestamp: Date.now(),\n        metadata: {\n          loadTime: Date.now() - this.initializationStartTime,\n          dependencies: allDeps.map(dep => dep.name),\n        },\n      });\n    }\n  }\n\n  addEventListener(\n    eventType: DataPrismEventType,\n    handler: DataPrismEventHandler\n  ): void {\n    if (!this.eventHandlers.has(eventType)) {\n      this.eventHandlers.set(eventType, []);\n    }\n    this.eventHandlers.get(eventType)!.push(handler);\n  }\n\n  removeEventListener(\n    eventType: DataPrismEventType,\n    handler: DataPrismEventHandler\n  ): void {\n    const handlers = this.eventHandlers.get(eventType);\n    if (handlers) {\n      const index = handlers.indexOf(handler);\n      if (index > -1) {\n        handlers.splice(index, 1);\n      }\n    }\n  }\n\n  emit(eventType: DataPrismEventType, event: DataPrismEvent): void {\n    const handlers = this.eventHandlers.get(eventType);\n    if (handlers) {\n      handlers.forEach(handler => {\n        try {\n          handler(event);\n        } catch (error) {\n          console.error(`Error in DataPrism event handler for ${eventType}:`, error);\n        }\n      });\n    }\n  }\n\n  // Convenience methods for common event subscriptions\n  onDependencyLoading(handler: DataPrismEventHandler): void {\n    this.addEventListener(\"dependencyLoading\", handler);\n  }\n\n  onDependencyReady(handler: DataPrismEventHandler): void {\n    this.addEventListener(\"dependencyReady\", handler);\n  }\n\n  onDependencyError(handler: DataPrismEventHandler): void {\n    this.addEventListener(\"dependencyError\", handler);\n  }\n\n  onArrowReady(handler: DataPrismEventHandler): void {\n    this.addEventListener(\"arrowReady\", handler);\n  }\n\n  onDuckDBReady(handler: DataPrismEventHandler): void {\n    this.addEventListener(\"duckdbReady\", handler);\n  }\n\n  onWasmReady(handler: DataPrismEventHandler): void {\n    this.addEventListener(\"wasmReady\", handler);\n  }\n\n  onAllDependenciesReady(handler: DataPrismEventHandler): void {\n    this.addEventListener(\"allDependenciesReady\", handler);\n  }\n\n  onInitializationProgress(handler: DataPrismEventHandler): void {\n    this.addEventListener(\"initializationProgress\", handler);\n  }\n\n  // Progress tracking methods\n  startInitialization(): void {\n    this.initializationStartTime = Date.now();\n    this.emit(\"initializationProgress\", {\n      type: \"initializationProgress\",\n      progress: { loaded: 0, total: 0, percentage: 0 },\n      timestamp: Date.now(),\n      metadata: { stage: \"starting\" },\n    });\n  }\n\n  updateInitializationProgress(stage: string, additionalData?: any): void {\n    const progress = this.calculateProgress();\n    this.emit(\"initializationProgress\", {\n      type: \"initializationProgress\",\n      progress,\n      timestamp: Date.now(),\n      metadata: { stage, ...additionalData },\n    });\n  }\n\n  // Utility methods for creating loading indicators\n  createLoadingPromise<T>(\n    eventType: DataPrismEventType,\n    timeoutMs: number = 30000\n  ): Promise<T> {\n    return new Promise((resolve, reject) => {\n      const timeoutId = setTimeout(() => {\n        reject(new Error(`Timeout waiting for ${eventType}`));\n      }, timeoutMs);\n\n      const handler = (event: DataPrismEvent) => {\n        clearTimeout(timeoutId);\n        if (event.error) {\n          reject(event.error);\n        } else {\n          resolve(event.metadata as T);\n        }\n      };\n\n      this.addEventListener(eventType, handler);\n    });\n  }\n\n  async waitForArrowReady(timeoutMs: number = 30000): Promise<void> {\n    return this.createLoadingPromise(\"arrowReady\", timeoutMs);\n  }\n\n  async waitForDuckDBReady(timeoutMs: number = 30000): Promise<void> {\n    return this.createLoadingPromise(\"duckdbReady\", timeoutMs);\n  }\n\n  async waitForWasmReady(timeoutMs: number = 20000): Promise<void> {\n    return this.createLoadingPromise(\"wasmReady\", timeoutMs);\n  }\n\n  async waitForAllDependenciesReady(timeoutMs: number = 30000): Promise<void> {\n    return this.createLoadingPromise(\"allDependenciesReady\", timeoutMs);\n  }\n\n  // Debug and monitoring methods\n  getEventStats(): {\n    totalEvents: number;\n    eventsByType: Record<DataPrismEventType, number>;\n    recentEvents: DataPrismEvent[];\n  } {\n    const stats = {\n      totalEvents: 0,\n      eventsByType: {} as Record<DataPrismEventType, number>,\n      recentEvents: [] as DataPrismEvent[],\n    };\n\n    // This would need to be implemented with actual event tracking\n    // For now, return empty stats\n    return stats;\n  }\n\n  clearAllEventHandlers(): void {\n    this.eventHandlers.clear();\n  }\n\n  // Helper method to create a loading indicator UI\n  createLoadingIndicator(\n    container: HTMLElement,\n    options: {\n      showProgress?: boolean;\n      showDetails?: boolean;\n      theme?: \"light\" | \"dark\";\n    } = {}\n  ): {\n    update: (progress: number, message?: string) => void;\n    destroy: () => void;\n  } {\n    const indicator = document.createElement(\"div\");\n    indicator.className = `dataprism-loading-indicator ${options.theme || \"light\"}`;\n    indicator.innerHTML = `\n      <div class=\"loading-spinner\"></div>\n      <div class=\"loading-message\">Initializing DataPrism...</div>\n      ${options.showProgress ? '<div class=\"loading-progress\"><div class=\"progress-bar\"></div></div>' : ''}\n      ${options.showDetails ? '<div class=\"loading-details\"></div>' : ''}\n    `;\n\n    container.appendChild(indicator);\n\n    const progressBar = indicator.querySelector(\".progress-bar\") as HTMLElement;\n    const messageEl = indicator.querySelector(\".loading-message\") as HTMLElement;\n    const detailsEl = indicator.querySelector(\".loading-details\") as HTMLElement;\n\n    // Set up event listeners for real-time updates\n    const progressHandler = (event: DataPrismEvent) => {\n      if (event.progress) {\n        if (progressBar) {\n          progressBar.style.width = `${event.progress.percentage}%`;\n        }\n        if (messageEl) {\n          messageEl.textContent = `Loading... ${event.progress.percentage}%`;\n        }\n        if (detailsEl && event.dependency) {\n          detailsEl.textContent = `Loading ${event.dependency}...`;\n        }\n      }\n    };\n\n    this.addEventListener(\"initializationProgress\", progressHandler);\n    this.addEventListener(\"dependencyLoading\", progressHandler);\n\n    return {\n      update: (progress: number, message?: string) => {\n        if (progressBar) {\n          progressBar.style.width = `${progress}%`;\n        }\n        if (messageEl && message) {\n          messageEl.textContent = message;\n        }\n      },\n      destroy: () => {\n        this.removeEventListener(\"initializationProgress\", progressHandler);\n        this.removeEventListener(\"dependencyLoading\", progressHandler);\n        if (indicator.parentNode) {\n          indicator.parentNode.removeChild(indicator);\n        }\n      },\n    };\n  }\n}","import { PluginManifest } from \"../interfaces/plugin.js\";\n\nexport class PluginRegistry {\n  private manifests: Map<string, PluginManifest>;\n  private dependencies: Map<string, Set<string>>;\n  private categories: Map<string, Set<string>>;\n  private loadOrder: string[] | null = null;\n\n  constructor() {\n    this.manifests = new Map();\n    this.dependencies = new Map();\n    this.categories = new Map();\n  }\n\n  async register(manifest: PluginManifest): Promise<void> {\n    const name = manifest.name;\n\n    // Check for conflicts\n    if (this.manifests.has(name)) {\n      const existing = this.manifests.get(name)!;\n      if (existing.version !== manifest.version) {\n        throw new Error(\n          `Plugin version conflict: ${name} ${existing.version} vs ${manifest.version}`,\n        );\n      }\n      // Allow re-registration of same version\n      return;\n    }\n\n    // Store manifest\n    this.manifests.set(name, manifest);\n\n    // Index dependencies\n    const deps = new Set<string>();\n    for (const dep of manifest.dependencies) {\n      if (!dep.optional) {\n        deps.add(dep.name);\n      }\n    }\n    this.dependencies.set(name, deps);\n\n    // Index by category\n    if (!this.categories.has(manifest.category)) {\n      this.categories.set(manifest.category, new Set());\n    }\n    this.categories.get(manifest.category)!.add(name);\n\n    // Invalidate load order cache\n    this.loadOrder = null;\n\n    // Validate dependency tree\n    await this.validateDependencies(name);\n  }\n\n  async unregister(pluginName: string): Promise<void> {\n    const manifest = this.manifests.get(pluginName);\n    if (!manifest) return;\n\n    // Check if other plugins depend on this one\n    const dependents = this.getDependents(pluginName);\n    if (dependents.length > 0) {\n      throw new Error(\n        `Cannot unregister ${pluginName}: required by ${dependents.join(\", \")}`,\n      );\n    }\n\n    // Remove from indexes\n    this.manifests.delete(pluginName);\n    this.dependencies.delete(pluginName);\n\n    const category = manifest.category;\n    if (this.categories.has(category)) {\n      this.categories.get(category)!.delete(pluginName);\n      if (this.categories.get(category)!.size === 0) {\n        this.categories.delete(category);\n      }\n    }\n\n    // Invalidate load order cache\n    this.loadOrder = null;\n  }\n\n  getManifest(pluginName: string): PluginManifest | null {\n    return this.manifests.get(pluginName) || null;\n  }\n\n  getAllManifests(): PluginManifest[] {\n    return Array.from(this.manifests.values());\n  }\n\n  getPluginsByCategory(category: string): string[] {\n    return Array.from(this.categories.get(category) || []);\n  }\n\n  getDependencies(pluginName: string): string[] {\n    return Array.from(this.dependencies.get(pluginName) || []);\n  }\n\n  getDependents(pluginName: string): string[] {\n    const dependents: string[] = [];\n    for (const [name, deps] of this.dependencies) {\n      if (deps.has(pluginName)) {\n        dependents.push(name);\n      }\n    }\n    return dependents;\n  }\n\n  getLoadOrder(): string[] {\n    if (this.loadOrder !== null) {\n      return [...this.loadOrder];\n    }\n\n    // Topological sort for dependency resolution\n    const visited = new Set<string>();\n    const visiting = new Set<string>();\n    const order: string[] = [];\n\n    const visit = (name: string) => {\n      if (visiting.has(name)) {\n        throw new Error(`Circular dependency detected involving ${name}`);\n      }\n      if (visited.has(name)) return;\n\n      visiting.add(name);\n\n      const deps = this.dependencies.get(name) || new Set();\n      for (const dep of deps) {\n        if (this.manifests.has(dep)) {\n          visit(dep);\n        }\n      }\n\n      visiting.delete(name);\n      visited.add(name);\n      order.push(name);\n    };\n\n    for (const name of this.manifests.keys()) {\n      visit(name);\n    }\n\n    this.loadOrder = order;\n    return [...order];\n  }\n\n  search(query: PluginSearchQuery): PluginSearchResult[] {\n    const results: PluginSearchResult[] = [];\n\n    for (const manifest of this.manifests.values()) {\n      let score = 0;\n      let matches: PluginSearchMatch[] = [];\n\n      // Name match\n      if (\n        query.name &&\n        manifest.name.toLowerCase().includes(query.name.toLowerCase())\n      ) {\n        score += 10;\n        matches.push({ field: \"name\", value: manifest.name });\n      }\n\n      // Category match\n      if (query.category && manifest.category === query.category) {\n        score += 8;\n        matches.push({ field: \"category\", value: manifest.category });\n      }\n\n      // Keywords match\n      if (query.keywords) {\n        for (const keyword of query.keywords) {\n          if (\n            manifest.keywords.some((k) =>\n              k.toLowerCase().includes(keyword.toLowerCase()),\n            )\n          ) {\n            score += 5;\n            matches.push({ field: \"keywords\", value: keyword });\n          }\n        }\n      }\n\n      // Description match\n      if (\n        query.description &&\n        manifest.description\n          .toLowerCase()\n          .includes(query.description.toLowerCase())\n      ) {\n        score += 3;\n        matches.push({ field: \"description\", value: manifest.description });\n      }\n\n      // Author match\n      if (\n        query.author &&\n        manifest.author.toLowerCase().includes(query.author.toLowerCase())\n      ) {\n        score += 2;\n        matches.push({ field: \"author\", value: manifest.author });\n      }\n\n      if (score > 0) {\n        results.push({\n          manifest,\n          score,\n          matches,\n        });\n      }\n    }\n\n    // Sort by score descending\n    results.sort((a, b) => b.score - a.score);\n\n    // Apply limit if specified\n    if (query.limit && query.limit > 0) {\n      return results.slice(0, query.limit);\n    }\n\n    return results;\n  }\n\n  getStatistics(): PluginRegistryStatistics {\n    const categoryStats = new Map<string, number>();\n    const authorStats = new Map<string, number>();\n    let totalDependencies = 0;\n\n    for (const manifest of this.manifests.values()) {\n      // Category statistics\n      const count = categoryStats.get(manifest.category) || 0;\n      categoryStats.set(manifest.category, count + 1);\n\n      // Author statistics\n      const authorCount = authorStats.get(manifest.author) || 0;\n      authorStats.set(manifest.author, authorCount + 1);\n\n      // Dependency count\n      totalDependencies += manifest.dependencies.length;\n    }\n\n    return {\n      totalPlugins: this.manifests.size,\n      categories: Object.fromEntries(categoryStats),\n      authors: Object.fromEntries(authorStats),\n      averageDependencies:\n        this.manifests.size > 0 ? totalDependencies / this.manifests.size : 0,\n      circularDependencies: this.detectCircularDependencies(),\n    };\n  }\n\n  validateManifest(manifest: PluginManifest): ValidationResult {\n    const errors: string[] = [];\n    const warnings: string[] = [];\n\n    // Required fields\n    if (!manifest.name || manifest.name.trim() === \"\") {\n      errors.push(\"Plugin name is required\");\n    }\n\n    if (!manifest.version || !this.isValidVersion(manifest.version)) {\n      errors.push(\"Valid plugin version is required (semver format)\");\n    }\n\n    if (!manifest.entryPoint || manifest.entryPoint.trim() === \"\") {\n      errors.push(\"Entry point is required\");\n    }\n\n    if (!manifest.category) {\n      errors.push(\"Plugin category is required\");\n    }\n\n    // Category validation\n    const validCategories = [\n      \"data-processing\",\n      \"visualization\",\n      \"integration\",\n      \"utility\",\n    ];\n    if (manifest.category && !validCategories.includes(manifest.category)) {\n      errors.push(\n        `Invalid category: ${manifest.category}. Must be one of: ${validCategories.join(\", \")}`,\n      );\n    }\n\n    // Dependencies validation\n    for (const dep of manifest.dependencies || []) {\n      if (!dep.name || !dep.version) {\n        errors.push(\"Dependency must have name and version\");\n      }\n      if (!this.isValidVersion(dep.version)) {\n        errors.push(`Invalid dependency version: ${dep.version}`);\n      }\n    }\n\n    // Permissions validation\n    for (const perm of manifest.permissions || []) {\n      if (!perm.resource || !perm.access) {\n        errors.push(\"Permission must have resource and access fields\");\n      }\n      const validAccess = [\"read\", \"write\", \"execute\"];\n      if (perm.access && !validAccess.includes(perm.access)) {\n        errors.push(`Invalid permission access: ${perm.access}`);\n      }\n    }\n\n    // Compatibility validation\n    if (manifest.compatibility) {\n      if (!manifest.compatibility.minCoreVersion) {\n        warnings.push(\"Minimum core version not specified\");\n      }\n      if (\n        !manifest.compatibility.browsers ||\n        manifest.compatibility.browsers.length === 0\n      ) {\n        warnings.push(\"Supported browsers not specified\");\n      }\n    }\n\n    // Best practices warnings\n    if (!manifest.description || manifest.description.length < 10) {\n      warnings.push(\"Plugin description should be at least 10 characters\");\n    }\n\n    if (!manifest.keywords || manifest.keywords.length === 0) {\n      warnings.push(\"Adding keywords improves plugin discoverability\");\n    }\n\n    return {\n      isValid: errors.length === 0,\n      errors,\n      warnings,\n    };\n  }\n\n  private async validateDependencies(pluginName: string): Promise<void> {\n    const manifest = this.manifests.get(pluginName)!;\n\n    for (const dep of manifest.dependencies) {\n      if (!dep.optional && !this.manifests.has(dep.name)) {\n        throw new Error(\n          `Missing dependency: ${pluginName} requires ${dep.name}`,\n        );\n      }\n\n      // Check version compatibility\n      const depManifest = this.manifests.get(dep.name);\n      if (\n        depManifest &&\n        !this.isVersionCompatible(dep.version, depManifest.version)\n      ) {\n        throw new Error(\n          `Version mismatch: ${pluginName} requires ${dep.name}@${dep.version}, found ${depManifest.version}`,\n        );\n      }\n    }\n  }\n\n  private isValidVersion(version: string): boolean {\n    // Simple semver validation\n    return /^\\d+\\.\\d+\\.\\d+(-[\\w\\d\\-]+)?(\\+[\\w\\d\\-]+)?$/.test(version);\n  }\n\n  private isVersionCompatible(required: string, available: string): boolean {\n    // Simple semver compatibility check\n    if (required === \"*\" || required === available) return true;\n\n    // For now, exact match required. In production, implement proper semver range checking\n    return required === available;\n  }\n\n  private detectCircularDependencies(): string[] {\n    const cycles: string[] = [];\n    const visited = new Set<string>();\n    const visiting = new Set<string>();\n\n    const visit = (name: string, path: string[]): void => {\n      if (visiting.has(name)) {\n        const cycleStart = path.indexOf(name);\n        const cycle = path.slice(cycleStart).concat(name);\n        cycles.push(cycle.join(\" -> \"));\n        return;\n      }\n      if (visited.has(name)) return;\n\n      visiting.add(name);\n      const deps = this.dependencies.get(name) || new Set();\n\n      for (const dep of deps) {\n        if (this.manifests.has(dep)) {\n          visit(dep, [...path, name]);\n        }\n      }\n\n      visiting.delete(name);\n      visited.add(name);\n    };\n\n    for (const name of this.manifests.keys()) {\n      if (!visited.has(name)) {\n        visit(name, []);\n      }\n    }\n\n    return cycles;\n  }\n}\n\nexport interface PluginSearchQuery {\n  name?: string;\n  category?: string;\n  keywords?: string[];\n  description?: string;\n  author?: string;\n  limit?: number;\n}\n\nexport interface PluginSearchResult {\n  manifest: PluginManifest;\n  score: number;\n  matches: PluginSearchMatch[];\n}\n\nexport interface PluginSearchMatch {\n  field: string;\n  value: string;\n}\n\nexport interface PluginRegistryStatistics {\n  totalPlugins: number;\n  categories: Record<string, number>;\n  authors: Record<string, number>;\n  averageDependencies: number;\n  circularDependencies: string[];\n}\n\nexport interface ValidationResult {\n  isValid: boolean;\n  errors: string[];\n  warnings: string[];\n}\n","import { IPlugin, PluginManifest } from \"../interfaces/plugin.js\";\n\nexport class PluginLoader {\n  private loadedModules: Map<string, any>;\n  private moduleCache: Map<string, Promise<any>>;\n\n  constructor() {\n    this.loadedModules = new Map();\n    this.moduleCache = new Map();\n  }\n\n  async load(manifest: PluginManifest): Promise<IPlugin> {\n    const pluginName = manifest.name;\n\n    try {\n      // Check if already loaded\n      if (this.loadedModules.has(pluginName)) {\n        return this.createPluginInstance(\n          this.loadedModules.get(pluginName),\n          manifest,\n        );\n      }\n\n      // Load the plugin module\n      const module = await this.loadModule(manifest.entryPoint);\n      this.loadedModules.set(pluginName, module);\n\n      // Create plugin instance\n      return this.createPluginInstance(module, manifest);\n    } catch (error) {\n      throw new PluginLoadError(\n        `Failed to load plugin ${pluginName}: ${error}`,\n      );\n    }\n  }\n\n  async unload(pluginName: string): Promise<void> {\n    if (this.loadedModules.has(pluginName)) {\n      const module = this.loadedModules.get(pluginName);\n\n      // Call cleanup if available\n      if (module && typeof module.cleanup === \"function\") {\n        try {\n          await module.cleanup();\n        } catch (error) {\n          console.warn(`Plugin cleanup failed for ${pluginName}:`, error);\n        }\n      }\n\n      this.loadedModules.delete(pluginName);\n    }\n\n    // Clear from cache\n    this.moduleCache.delete(pluginName);\n  }\n\n  async hotReload(manifest: PluginManifest): Promise<IPlugin> {\n    const pluginName = manifest.name;\n\n    // Clear from cache first\n    this.moduleCache.delete(pluginName);\n\n    // Force reload\n    this.loadedModules.delete(pluginName);\n\n    return this.load(manifest);\n  }\n\n  async discoverPlugins(searchPaths: string[]): Promise<string[]> {\n    const discoveredPaths: string[] = [];\n\n    for (const searchPath of searchPaths) {\n      try {\n        const paths = await this.searchForPlugins(searchPath);\n        discoveredPaths.push(...paths);\n      } catch (error) {\n        console.warn(`Failed to search for plugins in ${searchPath}:`, error);\n      }\n    }\n\n    return discoveredPaths;\n  }\n\n  async loadManifest(pluginPath: string): Promise<PluginManifest> {\n    try {\n      // Try to load manifest.json from plugin directory\n      const manifestPath = this.resolveManifestPath(pluginPath);\n      const manifestModule = await this.loadModule(manifestPath);\n\n      if (manifestModule.default) {\n        return manifestModule.default;\n      } else if (manifestModule.manifest) {\n        return manifestModule.manifest;\n      } else {\n        // Assume the entire module is the manifest\n        return manifestModule;\n      }\n    } catch (error) {\n      throw new PluginLoadError(\n        `Failed to load manifest from ${pluginPath}: ${error}`,\n      );\n    }\n  }\n\n  async preloadPlugin(manifest: PluginManifest): Promise<void> {\n    const pluginName = manifest.name;\n\n    if (!this.moduleCache.has(pluginName)) {\n      // Start loading but don't await - just cache the promise\n      this.moduleCache.set(pluginName, this.loadModule(manifest.entryPoint));\n    }\n  }\n\n  getLoadedPlugins(): string[] {\n    return Array.from(this.loadedModules.keys());\n  }\n\n  isLoaded(pluginName: string): boolean {\n    return this.loadedModules.has(pluginName);\n  }\n\n  async validatePlugin(\n    manifest: PluginManifest,\n  ): Promise<PluginValidationResult> {\n    const result: PluginValidationResult = {\n      isValid: true,\n      errors: [],\n      warnings: [],\n    };\n\n    try {\n      // Try to load and validate the plugin module\n      const module = await this.loadModule(manifest.entryPoint);\n\n      // Check for required exports\n      if (!this.hasValidPluginClass(module)) {\n        result.errors.push(\n          \"Plugin must export a valid plugin class or factory function\",\n        );\n        result.isValid = false;\n      }\n\n      // Validate plugin metadata\n      const instance = this.createPluginInstance(module, manifest);\n      const pluginCapabilities = instance.getCapabilities();\n\n      if (!pluginCapabilities || pluginCapabilities.length === 0) {\n        result.warnings.push(\"Plugin does not declare any capabilities\");\n      }\n\n      // Check for required methods\n      const requiredMethods = [\n        \"initialize\",\n        \"activate\",\n        \"execute\",\n        \"deactivate\",\n        \"cleanup\",\n      ];\n      for (const method of requiredMethods) {\n        if (typeof (instance as any)[method] !== \"function\") {\n          result.errors.push(`Plugin missing required method: ${method}`);\n          result.isValid = false;\n        }\n      }\n    } catch (error) {\n      result.errors.push(`Plugin validation failed: ${error}`);\n      result.isValid = false;\n    }\n\n    return result;\n  }\n\n  private async loadModule(modulePath: string): Promise<any> {\n    try {\n      // Handle different module loading strategies\n      if (this.isESModule(modulePath)) {\n        return await this.loadESModule(modulePath);\n      } else if (this.isWebAssembly(modulePath)) {\n        return await this.loadWebAssembly(modulePath);\n      } else {\n        return await this.loadCommonJSModule(modulePath);\n      }\n    } catch (error) {\n      throw new PluginLoadError(\n        `Module loading failed for ${modulePath}: ${error}`,\n      );\n    }\n  }\n\n  private async loadESModule(modulePath: string): Promise<any> {\n    // Dynamic import for ES modules\n    const resolvedPath = this.resolvePath(modulePath);\n    return await import(resolvedPath);\n  }\n\n  private async loadWebAssembly(modulePath: string): Promise<any> {\n    // Load WebAssembly module\n    const resolvedPath = this.resolvePath(modulePath);\n    const wasmModule = await WebAssembly.compileStreaming(fetch(resolvedPath));\n    const wasmInstance = await WebAssembly.instantiate(wasmModule);\n\n    return {\n      module: wasmModule,\n      instance: wasmInstance,\n      exports: wasmInstance.exports,\n    };\n  }\n\n  private async loadCommonJSModule(modulePath: string): Promise<any> {\n    // For CommonJS modules, we'll need to handle differently in browser vs Node\n    const resolvedPath = this.resolvePath(modulePath);\n\n    if (typeof require !== \"undefined\") {\n      // Node.js environment\n      delete require.cache[require.resolve(resolvedPath)];\n      return require(resolvedPath);\n    } else {\n      // Browser environment - treat as ES module\n      return await import(resolvedPath);\n    }\n  }\n\n  private createPluginInstance(module: any, manifest: PluginManifest): IPlugin {\n    let PluginClass: any;\n\n    // Determine the plugin class from the module\n    if (module.default && typeof module.default === \"function\") {\n      PluginClass = module.default;\n    } else if (\n      module[manifest.name] &&\n      typeof module[manifest.name] === \"function\"\n    ) {\n      PluginClass = module[manifest.name];\n    } else if (module.Plugin && typeof module.Plugin === \"function\") {\n      PluginClass = module.Plugin;\n    } else if (typeof module === \"function\") {\n      PluginClass = module;\n    } else {\n      throw new PluginLoadError(\"No valid plugin class found in module\");\n    }\n\n    // Create instance\n    try {\n      const instance = new PluginClass(manifest);\n\n      // Validate that instance implements IPlugin interface\n      if (!this.implementsIPlugin(instance)) {\n        throw new PluginLoadError(\n          \"Plugin instance does not implement IPlugin interface\",\n        );\n      }\n\n      return instance;\n    } catch (error) {\n      throw new PluginLoadError(`Failed to create plugin instance: ${error}`);\n    }\n  }\n\n  private implementsIPlugin(instance: any): boolean {\n    const requiredMethods = [\n      \"getName\",\n      \"getVersion\",\n      \"getDescription\",\n      \"getAuthor\",\n      \"getCapabilities\",\n      \"getDependencies\",\n      \"initialize\",\n      \"activate\",\n      \"execute\",\n      \"deactivate\",\n      \"cleanup\",\n      \"configure\",\n    ];\n\n    return requiredMethods.every(\n      (method) => typeof instance[method] === \"function\",\n    );\n  }\n\n  private hasValidPluginClass(module: any): boolean {\n    return (\n      (module.default && typeof module.default === \"function\") ||\n      (module.Plugin && typeof module.Plugin === \"function\") ||\n      typeof module === \"function\"\n    );\n  }\n\n  private async searchForPlugins(searchPath: string): Promise<string[]> {\n    const pluginPaths: string[] = [];\n\n    try {\n      // In a real implementation, this would scan the filesystem\n      // For now, we'll provide a mock implementation\n      const mockPaths = [\n        `${searchPath}/data-processor-csv`,\n        `${searchPath}/visualization-charts`,\n        `${searchPath}/integration-api`,\n        `${searchPath}/utility-performance`,\n      ];\n\n      // Validate each path has a manifest\n      for (const path of mockPaths) {\n        try {\n          const manifestPath = this.resolveManifestPath(path);\n          // In real implementation, check if file exists\n          pluginPaths.push(path);\n        } catch (error) {\n          // Skip invalid plugins\n          continue;\n        }\n      }\n    } catch (error) {\n      throw new PluginLoadError(`Plugin discovery failed: ${error}`);\n    }\n\n    return pluginPaths;\n  }\n\n  private resolvePath(modulePath: string): string {\n    // Handle relative and absolute paths\n    if (modulePath.startsWith(\"./\") || modulePath.startsWith(\"../\")) {\n      // Relative path - resolve relative to current location\n      return new URL(modulePath, import.meta.url).href;\n    } else if (modulePath.startsWith(\"/\")) {\n      // Absolute path\n      return modulePath;\n    } else if (\n      modulePath.startsWith(\"http://\") ||\n      modulePath.startsWith(\"https://\")\n    ) {\n      // URL\n      return modulePath;\n    } else {\n      // Package name or relative path\n      return `./${modulePath}`;\n    }\n  }\n\n  private resolveManifestPath(pluginPath: string): string {\n    // Try different manifest file names\n    const manifestNames = [\"manifest.json\", \"plugin.json\", \"package.json\"];\n\n    for (const name of manifestNames) {\n      const manifestPath = `${pluginPath}/${name}`;\n      // In real implementation, check if file exists\n      return manifestPath;\n    }\n\n    throw new PluginLoadError(`No manifest found in ${pluginPath}`);\n  }\n\n  private isESModule(modulePath: string): boolean {\n    return (\n      modulePath.endsWith(\".js\") ||\n      modulePath.endsWith(\".mjs\") ||\n      modulePath.endsWith(\".ts\")\n    );\n  }\n\n  private isWebAssembly(modulePath: string): boolean {\n    return modulePath.endsWith(\".wasm\");\n  }\n\n  async getModuleInfo(pluginName: string): Promise<PluginModuleInfo | null> {\n    const module = this.loadedModules.get(pluginName);\n    if (!module) return null;\n\n    return {\n      pluginName,\n      modulePath: module.path || \"unknown\",\n      loadTime: module.loadTime || Date.now(),\n      size: module.size || 0,\n      type: this.getModuleType(module),\n      exports: Object.keys(module).filter((key) => key !== \"default\"),\n    };\n  }\n\n  private getModuleType(module: any): ModuleType {\n    if (module.instance && module.exports) {\n      return \"webassembly\";\n    } else if (module.__esModule || module.default) {\n      return \"esmodule\";\n    } else {\n      return \"commonjs\";\n    }\n  }\n\n  async destroy(): Promise<void> {\n    // Unload all plugins\n    const pluginNames = Array.from(this.loadedModules.keys());\n    for (const pluginName of pluginNames) {\n      try {\n        await this.unload(pluginName);\n      } catch (error) {\n        console.warn(`Failed to unload plugin ${pluginName}:`, error);\n      }\n    }\n\n    this.loadedModules.clear();\n    this.moduleCache.clear();\n  }\n}\n\nexport class PluginLoadError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = \"PluginLoadError\";\n  }\n}\n\nexport interface PluginValidationResult {\n  isValid: boolean;\n  errors: string[];\n  warnings: string[];\n}\n\nexport interface PluginModuleInfo {\n  pluginName: string;\n  modulePath: string;\n  loadTime: number;\n  size: number;\n  type: ModuleType;\n  exports: string[];\n}\n\nexport type ModuleType = \"esmodule\" | \"commonjs\" | \"webassembly\";\n","import { PluginManifest, PluginPermission } from \"../interfaces/plugin.js\";\n\nexport class SecurityManager {\n  private permissions: Map<string, Set<PluginPermission>>;\n  private sandboxes: Map<string, PluginSandbox>;\n  private auditLogger: AuditLogger;\n  private securityPolicies: SecurityPolicySet;\n  private initialized = false;\n\n  constructor() {\n    this.permissions = new Map();\n    this.sandboxes = new Map();\n    this.auditLogger = new AuditLogger();\n    this.securityPolicies = new SecurityPolicySet();\n  }\n\n  async initialize(): Promise<void> {\n    if (this.initialized) return;\n\n    await this.auditLogger.initialize();\n    await this.securityPolicies.loadDefault();\n    this.initialized = true;\n  }\n\n  async validatePlugin(manifest: PluginManifest): Promise<void> {\n    if (!this.initialized) {\n      throw new Error(\"SecurityManager not initialized\");\n    }\n\n    // Static security analysis\n    await this.performStaticAnalysis(manifest);\n\n    // Validate permissions\n    await this.validatePermissions(manifest.permissions);\n\n    // Check for suspicious patterns\n    await this.checkSuspiciousPatterns(manifest);\n\n    // Store permissions for later use\n    this.permissions.set(manifest.name, new Set(manifest.permissions));\n\n    this.auditLogger.log(\"security\", \"plugin_validated\", {\n      pluginName: manifest.name,\n      version: manifest.version,\n      permissions: manifest.permissions,\n      timestamp: Date.now(),\n    });\n  }\n\n  async createSandbox(pluginName: string): Promise<PluginSandbox> {\n    if (!this.initialized) {\n      throw new Error(\"SecurityManager not initialized\");\n    }\n\n    const permissions = this.permissions.get(pluginName);\n    if (!permissions) {\n      throw new SecurityError(`No permissions found for plugin: ${pluginName}`);\n    }\n\n    const sandbox = new PluginSandbox(pluginName, {\n      allowedAPIs: this.getAllowedAPIs(pluginName),\n      memoryLimit: this.getMemoryLimit(pluginName),\n      timeoutLimit: this.getTimeoutLimit(pluginName),\n      networkAccess: this.hasNetworkPermission(pluginName),\n      permissions: Array.from(permissions),\n    });\n\n    await sandbox.initialize();\n    this.sandboxes.set(pluginName, sandbox);\n\n    this.auditLogger.log(\"security\", \"sandbox_created\", {\n      pluginName,\n      config: sandbox.getConfig(),\n      timestamp: Date.now(),\n    });\n\n    return sandbox;\n  }\n\n  async checkPermission(\n    pluginName: string,\n    operation: string,\n    params: any,\n  ): Promise<void> {\n    if (!this.initialized) {\n      throw new Error(\"SecurityManager not initialized\");\n    }\n\n    const permissions = this.permissions.get(pluginName);\n    if (!permissions) {\n      throw new SecurityError(`No permissions found for plugin: ${pluginName}`);\n    }\n\n    const requiredPermission = this.getRequiredPermission(operation, params);\n    const hasPermission = Array.from(permissions).some((perm) =>\n      this.permissionMatches(perm, requiredPermission),\n    );\n\n    if (!hasPermission) {\n      this.auditLogger.log(\"security\", \"permission_denied\", {\n        pluginName,\n        operation,\n        params: this.sanitizeParams(params),\n        requiredPermission,\n        timestamp: Date.now(),\n      });\n      throw new SecurityError(\n        `Permission denied: ${pluginName} cannot perform ${operation}`,\n      );\n    }\n\n    this.auditLogger.log(\"security\", \"permission_granted\", {\n      pluginName,\n      operation,\n      timestamp: Date.now(),\n    });\n  }\n\n  async destroySandbox(pluginName: string): Promise<void> {\n    const sandbox = this.sandboxes.get(pluginName);\n    if (sandbox) {\n      await sandbox.destroy();\n      this.sandboxes.delete(pluginName);\n\n      this.auditLogger.log(\"security\", \"sandbox_destroyed\", {\n        pluginName,\n        timestamp: Date.now(),\n      });\n    }\n  }\n\n  async generateSecurityReport(): Promise<SecurityReport> {\n    const events = await this.auditLogger.getEvents();\n    const violations = events.filter((e) => e.type === \"permission_denied\");\n    const suspiciousActivity = await this.detectSuspiciousActivity(events);\n\n    return {\n      timestamp: new Date().toISOString(),\n      summary: {\n        totalPlugins: this.permissions.size,\n        activeSandboxes: this.sandboxes.size,\n        securityEvents: events.length,\n        violations: violations.length,\n        suspiciousActivity: suspiciousActivity.length,\n      },\n      violations: violations.slice(-10), // Last 10 violations\n      suspiciousActivity,\n      recommendations: this.generateSecurityRecommendations(events),\n    };\n  }\n\n  private async performStaticAnalysis(manifest: PluginManifest): Promise<void> {\n    // Check for dangerous patterns in manifest\n    const dangerousPatterns = [\n      /eval\\s*\\(/,\n      /Function\\s*\\(/,\n      /document\\.write/,\n      /innerHTML\\s*=/,\n      /execCommand/,\n      /new\\s+Function/,\n      /setTimeout\\s*\\(\\s*[\"'`]/,\n      /setInterval\\s*\\(\\s*[\"'`]/,\n    ];\n\n    const manifestString = JSON.stringify(manifest);\n    for (const pattern of dangerousPatterns) {\n      if (pattern.test(manifestString)) {\n        throw new SecurityError(\n          `Dangerous pattern detected in manifest: ${pattern}`,\n        );\n      }\n    }\n\n    // Check entry point for suspicious extensions\n    const suspiciousExtensions = [\".exe\", \".bat\", \".cmd\", \".sh\", \".ps1\"];\n    if (\n      suspiciousExtensions.some((ext) =>\n        manifest.entryPoint.toLowerCase().endsWith(ext),\n      )\n    ) {\n      throw new SecurityError(\n        `Suspicious entry point file extension: ${manifest.entryPoint}`,\n      );\n    }\n  }\n\n  private async validatePermissions(\n    permissions: PluginPermission[],\n  ): Promise<void> {\n    for (const permission of permissions) {\n      if (!this.isValidPermission(permission)) {\n        throw new SecurityError(\n          `Invalid permission: ${JSON.stringify(permission)}`,\n        );\n      }\n\n      // Check against security policies\n      if (!this.securityPolicies.isPermissionAllowed(permission)) {\n        throw new SecurityError(\n          `Permission not allowed by security policy: ${permission.resource}.${permission.access}`,\n        );\n      }\n    }\n  }\n\n  private async checkSuspiciousPatterns(\n    manifest: PluginManifest,\n  ): Promise<void> {\n    // Check for suspicious keywords\n    const suspiciousKeywords = [\n      \"crypto\",\n      \"bitcoin\",\n      \"mining\",\n      \"keylogger\",\n      \"password\",\n      \"backdoor\",\n      \"rootkit\",\n      \"virus\",\n      \"malware\",\n      \"trojan\",\n    ];\n\n    const textToCheck = [\n      manifest.name,\n      manifest.description,\n      ...manifest.keywords,\n    ]\n      .join(\" \")\n      .toLowerCase();\n\n    for (const keyword of suspiciousKeywords) {\n      if (textToCheck.includes(keyword)) {\n        // Log but don't block - might be legitimate\n        this.auditLogger.log(\"security\", \"suspicious_keyword\", {\n          pluginName: manifest.name,\n          keyword,\n          timestamp: Date.now(),\n        });\n      }\n    }\n  }\n\n  private isValidPermission(permission: PluginPermission): boolean {\n    const validResources = [\n      \"data\",\n      \"storage\",\n      \"network\",\n      \"ui\",\n      \"core\",\n      \"filesystem\",\n    ];\n    const validAccess = [\"read\", \"write\", \"execute\"];\n\n    return (\n      validResources.includes(permission.resource) &&\n      validAccess.includes(permission.access)\n    );\n  }\n\n  private getRequiredPermission(\n    operation: string,\n    params: any,\n  ): PluginPermission {\n    // Map operations to required permissions\n    const operationMap: Record<string, PluginPermission> = {\n      \"data.read\": { resource: \"data\", access: \"read\" },\n      \"data.write\": { resource: \"data\", access: \"write\" },\n      \"data.query\": { resource: \"data\", access: \"read\" },\n      \"storage.get\": { resource: \"storage\", access: \"read\" },\n      \"storage.set\": { resource: \"storage\", access: \"write\" },\n      \"network.fetch\": { resource: \"network\", access: \"read\" },\n      \"network.post\": { resource: \"network\", access: \"write\" },\n      \"ui.render\": { resource: \"ui\", access: \"write\" },\n      \"ui.update\": { resource: \"ui\", access: \"write\" },\n      \"core.metrics\": { resource: \"core\", access: \"read\" },\n      \"filesystem.read\": { resource: \"filesystem\", access: \"read\" },\n      \"filesystem.write\": { resource: \"filesystem\", access: \"write\" },\n    };\n\n    return operationMap[operation] || { resource: \"core\", access: \"execute\" };\n  }\n\n  private permissionMatches(\n    granted: PluginPermission,\n    required: PluginPermission,\n  ): boolean {\n    if (granted.resource !== required.resource) return false;\n\n    // Execute permission includes read and write\n    if (granted.access === \"execute\") return true;\n\n    // Write permission includes read for the same resource\n    if (granted.access === \"write\" && required.access === \"read\") return true;\n\n    return granted.access === required.access;\n  }\n\n  private getAllowedAPIs(pluginName: string): string[] {\n    const permissions = this.permissions.get(pluginName);\n    if (!permissions) return [];\n\n    const allowedAPIs: string[] = [];\n\n    for (const perm of permissions) {\n      switch (perm.resource) {\n        case \"data\":\n          allowedAPIs.push(\"data.query\", \"data.read\");\n          if (perm.access === \"write\" || perm.access === \"execute\") {\n            allowedAPIs.push(\"data.write\", \"data.update\");\n          }\n          break;\n        case \"storage\":\n          allowedAPIs.push(\"storage.get\");\n          if (perm.access === \"write\" || perm.access === \"execute\") {\n            allowedAPIs.push(\"storage.set\", \"storage.remove\");\n          }\n          break;\n        case \"network\":\n          if (perm.access === \"read\" || perm.access === \"execute\") {\n            allowedAPIs.push(\"network.fetch\");\n          }\n          if (perm.access === \"write\" || perm.access === \"execute\") {\n            allowedAPIs.push(\"network.post\", \"network.put\");\n          }\n          break;\n        case \"ui\":\n          if (perm.access === \"write\" || perm.access === \"execute\") {\n            allowedAPIs.push(\"ui.render\", \"ui.update\", \"ui.notify\");\n          }\n          break;\n      }\n    }\n\n    return allowedAPIs;\n  }\n\n  private getMemoryLimit(pluginName: string): number {\n    // Default: 50MB per plugin\n    return 50 * 1024 * 1024;\n  }\n\n  private getTimeoutLimit(pluginName: string): number {\n    // Default: 30 seconds\n    return 30000;\n  }\n\n  private hasNetworkPermission(pluginName: string): boolean {\n    const permissions = this.permissions.get(pluginName);\n    if (!permissions) return false;\n\n    return Array.from(permissions).some((perm) => perm.resource === \"network\");\n  }\n\n  private sanitizeParams(params: any): any {\n    // Remove sensitive data from audit logs\n    if (typeof params !== \"object\" || params === null) return params;\n\n    const sanitized = { ...params };\n    const sensitiveKeys = [\"password\", \"token\", \"key\", \"secret\", \"credential\"];\n\n    for (const key of Object.keys(sanitized)) {\n      if (\n        sensitiveKeys.some((sensitive) => key.toLowerCase().includes(sensitive))\n      ) {\n        sanitized[key] = \"[REDACTED]\";\n      }\n    }\n\n    return sanitized;\n  }\n\n  private async detectSuspiciousActivity(\n    events: AuditEvent[],\n  ): Promise<SuspiciousActivity[]> {\n    const suspicious: SuspiciousActivity[] = [];\n    const now = Date.now();\n    const timeWindow = 60000; // 1 minute\n\n    // Detect rapid permission denials\n    const recentDenials = events.filter(\n      (e) => e.type === \"permission_denied\" && now - e.timestamp < timeWindow,\n    );\n\n    if (recentDenials.length > 10) {\n      suspicious.push({\n        type: \"rapid_permission_denials\",\n        description: `${recentDenials.length} permission denials in the last minute`,\n        severity: \"high\",\n        events: recentDenials.slice(-5).map((e) => e.id),\n      });\n    }\n\n    // Detect suspicious keyword usage\n    const keywordEvents = events.filter((e) => e.type === \"suspicious_keyword\");\n    if (keywordEvents.length > 0) {\n      suspicious.push({\n        type: \"suspicious_keywords\",\n        description: `Plugins using suspicious keywords detected`,\n        severity: \"medium\",\n        events: keywordEvents.map((e) => e.id),\n      });\n    }\n\n    return suspicious;\n  }\n\n  private generateSecurityRecommendations(events: AuditEvent[]): string[] {\n    const recommendations: string[] = [];\n\n    const violations = events.filter((e) => e.type === \"permission_denied\");\n    if (violations.length > 100) {\n      recommendations.push(\n        \"High number of permission violations detected. Review plugin permissions.\",\n      );\n    }\n\n    const suspiciousEvents = events.filter(\n      (e) => e.type === \"suspicious_keyword\",\n    );\n    if (suspiciousEvents.length > 0) {\n      recommendations.push(\n        \"Plugins with suspicious keywords detected. Review manually.\",\n      );\n    }\n\n    if (this.sandboxes.size > 20) {\n      recommendations.push(\n        \"Large number of active sandboxes. Consider resource optimization.\",\n      );\n    }\n\n    if (recommendations.length === 0) {\n      recommendations.push(\"No security issues detected. Continue monitoring.\");\n    }\n\n    return recommendations;\n  }\n}\n\nexport class PluginSandbox {\n  private pluginName: string;\n  private config: SandboxConfig;\n  private worker: Worker | null = null;\n  private messageChannel: MessageChannel | null = null;\n  private initialized = false;\n\n  constructor(pluginName: string, config: SandboxConfig) {\n    this.pluginName = pluginName;\n    this.config = config;\n  }\n\n  async initialize(): Promise<void> {\n    if (this.initialized) return;\n\n    try {\n      // Create dedicated worker for plugin execution\n      const workerCode = this.generateWorkerCode();\n      const workerBlob = new Blob([workerCode], {\n        type: \"application/javascript\",\n      });\n      this.worker = new Worker(URL.createObjectURL(workerBlob));\n\n      this.messageChannel = new MessageChannel();\n\n      // Set up secure communication channel\n      this.worker.postMessage(\n        {\n          type: \"initialize\",\n          config: this.config,\n          port: this.messageChannel.port1,\n        },\n        [this.messageChannel.port1],\n      );\n\n      // Wait for initialization confirmation\n      await this.waitForInitialization();\n      this.initialized = true;\n    } catch (error) {\n      throw new SecurityError(\n        `Failed to initialize sandbox for ${this.pluginName}: ${error}`,\n      );\n    }\n  }\n\n  async execute(code: string, context: any): Promise<any> {\n    if (!this.initialized || !this.worker || !this.messageChannel) {\n      throw new SecurityError(\"Sandbox not initialized\");\n    }\n\n    return new Promise((resolve, reject) => {\n      const timeout = setTimeout(() => {\n        reject(new SecurityError(\"Plugin execution timeout\"));\n      }, this.config.timeoutLimit);\n\n      const messageHandler = (event: MessageEvent) => {\n        clearTimeout(timeout);\n        this.messageChannel!.port2.removeEventListener(\n          \"message\",\n          messageHandler,\n        );\n\n        if (event.data.error) {\n          reject(new SecurityError(event.data.error));\n        } else {\n          resolve(event.data.result);\n        }\n      };\n\n      this.messageChannel?.port2.addEventListener(\"message\", messageHandler);\n      this.messageChannel?.port2.start();\n\n      this.messageChannel?.port2.postMessage({\n        type: \"execute\",\n        code,\n        context,\n      });\n    });\n  }\n\n  getConfig(): SandboxConfig {\n    return { ...this.config };\n  }\n\n  async destroy(): Promise<void> {\n    if (this.worker) {\n      this.worker.terminate();\n      this.worker = null;\n    }\n    if (this.messageChannel) {\n      this.messageChannel.port1.close();\n      this.messageChannel.port2.close();\n      this.messageChannel = null;\n    }\n    this.initialized = false;\n  }\n\n  private generateWorkerCode(): string {\n    return `\n      let port = null;\n      let config = null;\n      \n      self.onmessage = function(event) {\n        if (event.data.type === 'initialize') {\n          config = event.data.config;\n          port = event.data.port;\n          port.onmessage = handleMessage;\n          port.postMessage({ type: 'initialized' });\n        }\n      };\n      \n      function handleMessage(event) {\n        if (event.data.type === 'execute') {\n          try {\n            // Create restricted execution environment\n            const restrictedGlobals = createRestrictedEnvironment();\n            const result = executeInSandbox(event.data.code, event.data.context, restrictedGlobals);\n            port.postMessage({ result });\n          } catch (error) {\n            port.postMessage({ error: error.message });\n          }\n        }\n      }\n      \n      function createRestrictedEnvironment() {\n        // Create a restricted global environment\n        const restricted = {};\n        \n        // Allow only safe APIs based on permissions\n        if (config.allowedAPIs.includes('data.read')) {\n          restricted.console = { log: console.log };\n        }\n        \n        // Add other allowed APIs based on permissions\n        return restricted;\n      }\n      \n      function executeInSandbox(code, context, globals) {\n        // Simple sandbox execution - in production, use a more robust solution\n        const func = new Function('context', 'globals', \\`\n          with (globals) {\n            \\${code}\n          }\n        \\`);\n        return func(context, globals);\n      }\n    `;\n  }\n\n  private async waitForInitialization(): Promise<void> {\n    if (!this.messageChannel) {\n      throw new SecurityError(\"Message channel not available\");\n    }\n\n    return new Promise((resolve, reject) => {\n      const timeout = setTimeout(() => {\n        reject(new SecurityError(\"Sandbox initialization timeout\"));\n      }, 5000);\n\n      const messageHandler = (event: MessageEvent) => {\n        if (event.data.type === \"initialized\") {\n          clearTimeout(timeout);\n          this.messageChannel?.port2.removeEventListener(\n            \"message\",\n            messageHandler,\n          );\n          resolve();\n        }\n      };\n\n      this.messageChannel?.port2.addEventListener(\"message\", messageHandler);\n      this.messageChannel?.port2.start();\n    });\n  }\n}\n\nexport interface SandboxConfig {\n  allowedAPIs: string[];\n  memoryLimit: number;\n  timeoutLimit: number;\n  networkAccess: boolean;\n  permissions: PluginPermission[];\n}\n\nexport class SecurityError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = \"SecurityError\";\n  }\n}\n\nexport class AuditLogger {\n  private events: AuditEvent[] = [];\n  private maxEvents = 10000;\n\n  async initialize(): Promise<void> {\n    // Initialize audit logging\n  }\n\n  log(category: string, type: string, data: any): void {\n    const event: AuditEvent = {\n      id: this.generateEventId(),\n      category,\n      type,\n      data,\n      timestamp: Date.now(),\n    };\n\n    this.events.push(event);\n\n    // Maintain size limit\n    if (this.events.length > this.maxEvents) {\n      this.events.shift();\n    }\n  }\n\n  async getEvents(filter?: EventFilter): Promise<AuditEvent[]> {\n    let filtered = [...this.events];\n\n    if (filter) {\n      if (filter.category) {\n        filtered = filtered.filter((e) => e.category === filter.category);\n      }\n      if (filter.type) {\n        filtered = filtered.filter((e) => e.type === filter.type);\n      }\n      if (filter.since) {\n        filtered = filtered.filter((e) => e.timestamp >= filter.since!);\n      }\n      if (filter.limit) {\n        filtered = filtered.slice(-filter.limit);\n      }\n    }\n\n    return filtered;\n  }\n\n  private generateEventId(): string {\n    return `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n  }\n}\n\nexport interface AuditEvent {\n  id: string;\n  category: string;\n  type: string;\n  data: any;\n  timestamp: number;\n}\n\nexport interface EventFilter {\n  category?: string;\n  type?: string;\n  since?: number;\n  limit?: number;\n}\n\nexport interface SecurityReport {\n  timestamp: string;\n  summary: {\n    totalPlugins: number;\n    activeSandboxes: number;\n    securityEvents: number;\n    violations: number;\n    suspiciousActivity: number;\n  };\n  violations: AuditEvent[];\n  suspiciousActivity: SuspiciousActivity[];\n  recommendations: string[];\n}\n\nexport interface SuspiciousActivity {\n  type: string;\n  description: string;\n  severity: \"low\" | \"medium\" | \"high\";\n  events: string[];\n}\n\nexport class SecurityPolicySet {\n  private policies: SecurityPolicy[] = [];\n\n  async loadDefault(): Promise<void> {\n    this.policies = [\n      {\n        name: \"default\",\n        allowedResources: [\"data\", \"storage\", \"ui\", \"core\"],\n        blockedResources: [\"filesystem\"],\n        maxMemoryMB: 50,\n        maxExecutionTimeMs: 30000,\n      },\n    ];\n  }\n\n  isPermissionAllowed(permission: PluginPermission): boolean {\n    return this.policies.some(\n      (policy) =>\n        policy.allowedResources.includes(permission.resource) &&\n        !policy.blockedResources.includes(permission.resource),\n    );\n  }\n}\n\nexport interface SecurityPolicy {\n  name: string;\n  allowedResources: string[];\n  blockedResources: string[];\n  maxMemoryMB: number;\n  maxExecutionTimeMs: number;\n}\n","export class ResourceManager {\n  private resourceQuotas: Map<string, ResourceQuota>;\n  private activeMonitors: Map<string, ResourceMonitor>;\n  private globalLimits: GlobalResourceLimits;\n  private initialized = false;\n\n  constructor() {\n    this.resourceQuotas = new Map();\n    this.activeMonitors = new Map();\n    this.globalLimits = {\n      maxTotalMemoryMB: 1024, // 1GB total for all plugins\n      maxTotalCPUPercent: 80,\n      maxConcurrentPlugins: 20,\n      maxExecutionTimeMs: 300000, // 5 minutes\n    };\n  }\n\n  async initialize(): Promise<void> {\n    if (this.initialized) return;\n\n    // Set up global resource monitoring\n    await this.setupGlobalMonitoring();\n    this.initialized = true;\n  }\n\n  async allocate(pluginName: string): Promise<ResourceAllocation> {\n    if (!this.initialized) {\n      throw new Error(\"ResourceManager not initialized\");\n    }\n\n    const quota = this.getQuota(pluginName);\n    const currentUsage = await this.getCurrentGlobalUsage();\n\n    // Check if allocation would exceed global limits\n    if (!this.canAllocate(quota, currentUsage)) {\n      throw new ResourceError(\n        `Resource allocation would exceed global limits for plugin: ${pluginName}`,\n      );\n    }\n\n    const allocation: ResourceAllocation = {\n      pluginName,\n      memoryMB: quota.memoryMB,\n      cpuPercent: quota.cpuPercent,\n      diskMB: quota.diskMB,\n      networkBandwidthKbps: quota.networkBandwidthKbps,\n      allocatedAt: Date.now(),\n      status: \"allocated\",\n    };\n\n    // Track allocation\n    this.trackAllocation(allocation);\n\n    return allocation;\n  }\n\n  async release(pluginName: string): Promise<void> {\n    // Stop monitoring\n    const monitor = this.activeMonitors.get(pluginName);\n    if (monitor) {\n      await monitor.stop();\n      this.activeMonitors.delete(pluginName);\n    }\n\n    // Clean up allocation tracking\n    this.cleanupAllocation(pluginName);\n  }\n\n  async createMonitor(pluginName: string): Promise<ResourceMonitor> {\n    const quota = this.getQuota(pluginName);\n    const monitor = new ResourceMonitor(pluginName, quota);\n\n    await monitor.start();\n    this.activeMonitors.set(pluginName, monitor);\n\n    return monitor;\n  }\n\n  getQuota(pluginName: string): ResourceQuota {\n    if (this.resourceQuotas.has(pluginName)) {\n      return this.resourceQuotas.get(pluginName)!;\n    }\n\n    // Return default quota\n    return {\n      memoryMB: 50,\n      cpuPercent: 10,\n      diskMB: 100,\n      networkBandwidthKbps: 1000,\n      maxExecutionTimeMs: 30000,\n    };\n  }\n\n  setQuota(pluginName: string, quota: ResourceQuota): void {\n    this.resourceQuotas.set(pluginName, quota);\n  }\n\n  async getUsage(pluginName: string): Promise<ResourceUsage | null> {\n    const monitor = this.activeMonitors.get(pluginName);\n    if (!monitor) return null;\n\n    return monitor.getCurrentUsage();\n  }\n\n  async getAllUsage(): Promise<Map<string, ResourceUsage>> {\n    const usage = new Map<string, ResourceUsage>();\n\n    for (const [pluginName, monitor] of this.activeMonitors) {\n      try {\n        const pluginUsage = await monitor.getCurrentUsage();\n        usage.set(pluginName, pluginUsage);\n      } catch (error) {\n        console.warn(`Failed to get usage for plugin ${pluginName}:`, error);\n      }\n    }\n\n    return usage;\n  }\n\n  async generateReport(): Promise<ResourceReport> {\n    const allUsage = await this.getAllUsage();\n    const globalUsage = await this.getCurrentGlobalUsage();\n\n    const pluginReports: PluginResourceReport[] = [];\n    for (const [pluginName, usage] of allUsage) {\n      const quota = this.getQuota(pluginName);\n      const violations = this.detectViolations(usage, quota);\n\n      pluginReports.push({\n        pluginName,\n        usage,\n        quota,\n        violations,\n        efficiency: this.calculateEfficiency(usage, quota),\n      });\n    }\n\n    // Calculate aggregated statistics\n    const summary = this.calculateSummary(pluginReports, globalUsage);\n\n    return {\n      timestamp: new Date().toISOString(),\n      summary,\n      plugins: pluginReports,\n      globalLimits: this.globalLimits,\n      recommendations: this.generateRecommendations(pluginReports, summary),\n    };\n  }\n\n  async optimizeResources(): Promise<OptimizationResult> {\n    const report = await this.generateReport();\n    const optimizations: ResourceOptimization[] = [];\n\n    // Identify over-allocated plugins\n    for (const plugin of report.plugins) {\n      if (plugin.efficiency < 0.3) {\n        // Using less than 30% of allocated resources\n        optimizations.push({\n          pluginName: plugin.pluginName,\n          type: \"reduce_allocation\",\n          description: `Reduce allocation for underutilized plugin`,\n          estimatedSavings: {\n            memoryMB: plugin.quota.memoryMB * 0.5,\n            cpuPercent: plugin.quota.cpuPercent * 0.5,\n          },\n        });\n      }\n\n      // Identify plugins exceeding quotas\n      if (plugin.violations.length > 0) {\n        optimizations.push({\n          pluginName: plugin.pluginName,\n          type: \"increase_allocation\",\n          description: `Increase allocation for over-utilized plugin`,\n          estimatedSavings: {\n            memoryMB: -plugin.quota.memoryMB * 0.2,\n            cpuPercent: -plugin.quota.cpuPercent * 0.2,\n          },\n        });\n      }\n    }\n\n    return {\n      totalOptimizations: optimizations.length,\n      optimizations,\n      estimatedTotalSavings: this.calculateTotalSavings(optimizations),\n    };\n  }\n\n  async enforceQuotas(): Promise<QuotaEnforcementResult> {\n    const violations: QuotaViolation[] = [];\n    const actions: EnforcementAction[] = [];\n\n    for (const [pluginName, monitor] of this.activeMonitors) {\n      try {\n        const usage = await monitor.getCurrentUsage();\n        const quota = this.getQuota(pluginName);\n        const pluginViolations = this.detectViolations(usage, quota);\n\n        if (pluginViolations.length > 0) {\n          violations.push(\n            ...pluginViolations.map((v) => ({ ...v, pluginName })),\n          );\n\n          // Take enforcement actions\n          for (const violation of pluginViolations) {\n            const action = await this.takeEnforcementAction(\n              pluginName,\n              violation,\n            );\n            actions.push(action);\n          }\n        }\n      } catch (error) {\n        console.warn(\n          `Failed to enforce quotas for plugin ${pluginName}:`,\n          error,\n        );\n      }\n    }\n\n    return {\n      timestamp: Date.now(),\n      violations,\n      actions,\n      summary: {\n        totalViolations: violations.length,\n        actionsSuccessful: actions.filter((a) => a.success).length,\n        actionsFailed: actions.filter((a) => !a.success).length,\n      },\n    };\n  }\n\n  private async setupGlobalMonitoring(): Promise<void> {\n    // Set up periodic global resource monitoring\n    setInterval(async () => {\n      try {\n        await this.checkGlobalLimits();\n      } catch (error) {\n        console.warn(\"Global resource monitoring failed:\", error);\n      }\n    }, 5000); // Check every 5 seconds\n  }\n\n  private async getCurrentGlobalUsage(): Promise<GlobalResourceUsage> {\n    const allUsage = await this.getAllUsage();\n\n    let totalMemoryMB = 0;\n    let totalCPUPercent = 0;\n    let totalDiskMB = 0;\n    let totalNetworkKbps = 0;\n\n    for (const usage of allUsage.values()) {\n      totalMemoryMB += usage.memoryMB;\n      totalCPUPercent += usage.cpuPercent;\n      totalDiskMB += usage.diskMB;\n      totalNetworkKbps += usage.networkKbps;\n    }\n\n    return {\n      totalMemoryMB,\n      totalCPUPercent,\n      totalDiskMB,\n      totalNetworkKbps,\n      activePlugins: allUsage.size,\n      timestamp: Date.now(),\n    };\n  }\n\n  private canAllocate(\n    quota: ResourceQuota,\n    currentUsage: GlobalResourceUsage,\n  ): boolean {\n    return (\n      currentUsage.totalMemoryMB + quota.memoryMB <=\n        this.globalLimits.maxTotalMemoryMB &&\n      currentUsage.totalCPUPercent + quota.cpuPercent <=\n        this.globalLimits.maxTotalCPUPercent &&\n      currentUsage.activePlugins < this.globalLimits.maxConcurrentPlugins\n    );\n  }\n\n  private trackAllocation(allocation: ResourceAllocation): void {\n    // In production, this would persist allocation data\n    console.debug(\"Resource allocated:\", allocation);\n  }\n\n  private cleanupAllocation(pluginName: string): void {\n    // Clean up allocation tracking\n    console.debug(\"Resource allocation cleaned up:\", pluginName);\n  }\n\n  private detectViolations(\n    usage: ResourceUsage,\n    quota: ResourceQuota,\n  ): ResourceViolation[] {\n    const violations: ResourceViolation[] = [];\n\n    if (usage.memoryMB > quota.memoryMB) {\n      violations.push({\n        type: \"memory_exceeded\",\n        severity: \"high\",\n        current: usage.memoryMB,\n        limit: quota.memoryMB,\n        description: `Memory usage (${usage.memoryMB}MB) exceeds quota (${quota.memoryMB}MB)`,\n      });\n    }\n\n    if (usage.cpuPercent > quota.cpuPercent) {\n      violations.push({\n        type: \"cpu_exceeded\",\n        severity: \"medium\",\n        current: usage.cpuPercent,\n        limit: quota.cpuPercent,\n        description: `CPU usage (${usage.cpuPercent}%) exceeds quota (${quota.cpuPercent}%)`,\n      });\n    }\n\n    if (usage.diskMB > quota.diskMB) {\n      violations.push({\n        type: \"disk_exceeded\",\n        severity: \"low\",\n        current: usage.diskMB,\n        limit: quota.diskMB,\n        description: `Disk usage (${usage.diskMB}MB) exceeds quota (${quota.diskMB}MB)`,\n      });\n    }\n\n    return violations;\n  }\n\n  private calculateEfficiency(\n    usage: ResourceUsage,\n    quota: ResourceQuota,\n  ): number {\n    // Calculate resource utilization efficiency (0-1)\n    const memoryEfficiency = Math.min(usage.memoryMB / quota.memoryMB, 1);\n    const cpuEfficiency = Math.min(usage.cpuPercent / quota.cpuPercent, 1);\n\n    return (memoryEfficiency + cpuEfficiency) / 2;\n  }\n\n  private calculateSummary(\n    reports: PluginResourceReport[],\n    globalUsage: GlobalResourceUsage,\n  ): ResourceSummary {\n    const totalAllocatedMemory = reports.reduce(\n      (sum, r) => sum + r.quota.memoryMB,\n      0,\n    );\n    const totalUsedMemory = reports.reduce(\n      (sum, r) => sum + r.usage.memoryMB,\n      0,\n    );\n    const totalViolations = reports.reduce(\n      (sum, r) => sum + r.violations.length,\n      0,\n    );\n\n    return {\n      totalPlugins: reports.length,\n      totalAllocatedMemoryMB: totalAllocatedMemory,\n      totalUsedMemoryMB: totalUsedMemory,\n      memoryUtilization:\n        totalAllocatedMemory > 0 ? totalUsedMemory / totalAllocatedMemory : 0,\n      totalViolations,\n      globalUsage,\n    };\n  }\n\n  private generateRecommendations(\n    reports: PluginResourceReport[],\n    summary: ResourceSummary,\n  ): string[] {\n    const recommendations: string[] = [];\n\n    if (summary.memoryUtilization < 0.3) {\n      recommendations.push(\n        \"Consider reducing memory allocations - overall utilization is low\",\n      );\n    }\n\n    if (summary.totalViolations > 0) {\n      recommendations.push(\n        `${summary.totalViolations} quota violations detected - review plugin resource requirements`,\n      );\n    }\n\n    const inefficientPlugins = reports.filter((r) => r.efficiency < 0.2).length;\n    if (inefficientPlugins > 0) {\n      recommendations.push(\n        `${inefficientPlugins} plugins are underutilizing resources - consider optimization`,\n      );\n    }\n\n    if (\n      summary.globalUsage.totalMemoryMB >\n      this.globalLimits.maxTotalMemoryMB * 0.9\n    ) {\n      recommendations.push(\n        \"Approaching global memory limit - consider optimization or limit increases\",\n      );\n    }\n\n    return recommendations;\n  }\n\n  private calculateTotalSavings(\n    optimizations: ResourceOptimization[],\n  ): ResourceSavings {\n    let totalMemoryMB = 0;\n    let totalCPUPercent = 0;\n\n    for (const opt of optimizations) {\n      if (opt.estimatedSavings) {\n        totalMemoryMB += opt.estimatedSavings.memoryMB || 0;\n        totalCPUPercent += opt.estimatedSavings.cpuPercent || 0;\n      }\n    }\n\n    return { memoryMB: totalMemoryMB, cpuPercent: totalCPUPercent };\n  }\n\n  private async takeEnforcementAction(\n    pluginName: string,\n    violation: ResourceViolation,\n  ): Promise<EnforcementAction> {\n    try {\n      switch (violation.type) {\n        case \"memory_exceeded\":\n          // In production, this might trigger memory cleanup or plugin throttling\n          console.warn(\n            `Memory violation for plugin ${pluginName} - implementing throttling`,\n          );\n          break;\n        case \"cpu_exceeded\":\n          // Implement CPU throttling\n          console.warn(\n            `CPU violation for plugin ${pluginName} - implementing throttling`,\n          );\n          break;\n        case \"disk_exceeded\":\n          // Clean up temporary files\n          console.warn(\n            `Disk violation for plugin ${pluginName} - cleaning up resources`,\n          );\n          break;\n      }\n\n      return {\n        pluginName,\n        violationType: violation.type,\n        action: \"throttle\",\n        success: true,\n        timestamp: Date.now(),\n      };\n    } catch (error) {\n      return {\n        pluginName,\n        violationType: violation.type,\n        action: \"throttle\",\n        success: false,\n        error: String(error),\n        timestamp: Date.now(),\n      };\n    }\n  }\n\n  private async checkGlobalLimits(): Promise<void> {\n    const globalUsage = await this.getCurrentGlobalUsage();\n\n    if (globalUsage.totalMemoryMB > this.globalLimits.maxTotalMemoryMB) {\n      console.warn(\n        \"Global memory limit exceeded:\",\n        globalUsage.totalMemoryMB,\n        \"MB\",\n      );\n      // Trigger global resource cleanup\n    }\n\n    if (globalUsage.totalCPUPercent > this.globalLimits.maxTotalCPUPercent) {\n      console.warn(\n        \"Global CPU limit exceeded:\",\n        globalUsage.totalCPUPercent,\n        \"%\",\n      );\n      // Trigger CPU throttling\n    }\n  }\n\n  async destroy(): Promise<void> {\n    // Stop all monitors\n    for (const monitor of this.activeMonitors.values()) {\n      try {\n        await monitor.stop();\n      } catch (error) {\n        console.warn(\"Failed to stop resource monitor:\", error);\n      }\n    }\n\n    this.activeMonitors.clear();\n    this.resourceQuotas.clear();\n    this.initialized = false;\n  }\n}\n\nexport class ResourceMonitor {\n  private pluginName: string;\n  private quota: ResourceQuota;\n  private monitoring = false;\n  private monitoringInterval: any = null;\n  private currentUsage: ResourceUsage;\n\n  constructor(pluginName: string, quota: ResourceQuota) {\n    this.pluginName = pluginName;\n    this.quota = quota;\n    this.currentUsage = {\n      memoryMB: 0,\n      cpuPercent: 0,\n      diskMB: 0,\n      networkKbps: 0,\n      timestamp: Date.now(),\n    };\n  }\n\n  async start(): Promise<void> {\n    if (this.monitoring) return;\n\n    this.monitoring = true;\n    this.monitoringInterval = setInterval(async () => {\n      try {\n        await this.updateUsage();\n      } catch (error) {\n        console.warn(\n          `Resource monitoring failed for ${this.pluginName}:`,\n          error,\n        );\n      }\n    }, 1000); // Update every second\n  }\n\n  async stop(): Promise<void> {\n    if (!this.monitoring) return;\n\n    this.monitoring = false;\n    if (this.monitoringInterval) {\n      clearInterval(this.monitoringInterval);\n      this.monitoringInterval = null;\n    }\n  }\n\n  async getCurrentUsage(): Promise<ResourceUsage> {\n    return { ...this.currentUsage };\n  }\n\n  private async updateUsage(): Promise<void> {\n    // In production, this would use actual system monitoring APIs\n    // For now, we'll simulate resource usage\n    this.currentUsage = {\n      memoryMB: Math.random() * this.quota.memoryMB * 0.8, // Random usage up to 80% of quota\n      cpuPercent: Math.random() * this.quota.cpuPercent * 0.7,\n      diskMB: Math.random() * this.quota.diskMB * 0.5,\n      networkKbps: Math.random() * this.quota.networkBandwidthKbps * 0.3,\n      timestamp: Date.now(),\n    };\n  }\n}\n\nexport class ResourceError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = \"ResourceError\";\n  }\n}\n\n// Interface definitions\nexport interface ResourceQuota {\n  memoryMB: number;\n  cpuPercent: number;\n  diskMB: number;\n  networkBandwidthKbps: number;\n  maxExecutionTimeMs: number;\n}\n\nexport interface ResourceUsage {\n  memoryMB: number;\n  cpuPercent: number;\n  diskMB: number;\n  networkKbps: number;\n  timestamp: number;\n}\n\nexport interface ResourceAllocation {\n  pluginName: string;\n  memoryMB: number;\n  cpuPercent: number;\n  diskMB: number;\n  networkBandwidthKbps: number;\n  allocatedAt: number;\n  status: \"allocated\" | \"released\";\n}\n\nexport interface ResourceViolation {\n  type:\n    | \"memory_exceeded\"\n    | \"cpu_exceeded\"\n    | \"disk_exceeded\"\n    | \"network_exceeded\";\n  severity: \"low\" | \"medium\" | \"high\";\n  current: number;\n  limit: number;\n  description: string;\n}\n\nexport interface QuotaViolation extends ResourceViolation {\n  pluginName: string;\n}\n\nexport interface PluginResourceReport {\n  pluginName: string;\n  usage: ResourceUsage;\n  quota: ResourceQuota;\n  violations: ResourceViolation[];\n  efficiency: number;\n}\n\nexport interface ResourceReport {\n  timestamp: string;\n  summary: ResourceSummary;\n  plugins: PluginResourceReport[];\n  globalLimits: GlobalResourceLimits;\n  recommendations: string[];\n}\n\nexport interface ResourceSummary {\n  totalPlugins: number;\n  totalAllocatedMemoryMB: number;\n  totalUsedMemoryMB: number;\n  memoryUtilization: number;\n  totalViolations: number;\n  globalUsage: GlobalResourceUsage;\n}\n\nexport interface GlobalResourceLimits {\n  maxTotalMemoryMB: number;\n  maxTotalCPUPercent: number;\n  maxConcurrentPlugins: number;\n  maxExecutionTimeMs: number;\n}\n\nexport interface GlobalResourceUsage {\n  totalMemoryMB: number;\n  totalCPUPercent: number;\n  totalDiskMB: number;\n  totalNetworkKbps: number;\n  activePlugins: number;\n  timestamp: number;\n}\n\nexport interface ResourceOptimization {\n  pluginName: string;\n  type:\n    | \"reduce_allocation\"\n    | \"increase_allocation\"\n    | \"merge_resources\"\n    | \"schedule_differently\";\n  description: string;\n  estimatedSavings?: ResourceSavings;\n}\n\nexport interface ResourceSavings {\n  memoryMB?: number;\n  cpuPercent?: number;\n}\n\nexport interface OptimizationResult {\n  totalOptimizations: number;\n  optimizations: ResourceOptimization[];\n  estimatedTotalSavings: ResourceSavings;\n}\n\nexport interface EnforcementAction {\n  pluginName: string;\n  violationType: string;\n  action: \"throttle\" | \"suspend\" | \"terminate\" | \"cleanup\";\n  success: boolean;\n  error?: string;\n  timestamp: number;\n}\n\nexport interface QuotaEnforcementResult {\n  timestamp: number;\n  violations: QuotaViolation[];\n  actions: EnforcementAction[];\n  summary: {\n    totalViolations: number;\n    actionsSuccessful: number;\n    actionsFailed: number;\n  };\n}\n","export interface EventHandler<T = any> {\n  (data: T): void | Promise<void>;\n}\n\nexport interface EventSubscription {\n  unsubscribe(): void;\n}\n\nexport interface EventHistoryEntry {\n  event: string;\n  data: any;\n  timestamp: number;\n}\n\nexport class EventBus {\n  private handlers: Map<string, Set<EventHandler>>;\n  private wildcardHandlers: Set<EventHandler>;\n  private eventHistory: EventHistoryEntry[];\n  private maxHistorySize: number = 1000;\n  private isInitialized = false;\n\n  constructor() {\n    this.handlers = new Map();\n    this.wildcardHandlers = new Set();\n    this.eventHistory = [];\n  }\n\n  async initialize(): Promise<void> {\n    if (this.isInitialized) return;\n\n    // Set up global error handling for async event handlers\n    this.setupErrorHandling();\n    this.isInitialized = true;\n  }\n\n  publish<T>(event: string, data: T): void {\n    if (!this.isInitialized) {\n      console.warn(\"EventBus not initialized, call initialize() first\");\n      return;\n    }\n\n    // Add to history\n    this.addToHistory(event, data);\n\n    // Handle specific event listeners\n    const eventHandlers = this.handlers.get(event);\n    if (eventHandlers) {\n      for (const handler of eventHandlers) {\n        this.executeHandler(handler, data, event);\n      }\n    }\n\n    // Handle wildcard listeners\n    for (const handler of this.wildcardHandlers) {\n      this.executeHandler(handler, { event, data }, event);\n    }\n  }\n\n  subscribe<T>(event: string, handler: EventHandler<T>): EventSubscription {\n    if (!this.isInitialized) {\n      console.warn(\"EventBus not initialized, call initialize() first\");\n    }\n\n    if (event === \"*\") {\n      this.wildcardHandlers.add(handler as EventHandler);\n      return {\n        unsubscribe: () =>\n          this.wildcardHandlers.delete(handler as EventHandler),\n      };\n    }\n\n    if (!this.handlers.has(event)) {\n      this.handlers.set(event, new Set());\n    }\n\n    this.handlers.get(event)!.add(handler as EventHandler);\n\n    return {\n      unsubscribe: () => {\n        const handlers = this.handlers.get(event);\n        if (handlers) {\n          handlers.delete(handler as EventHandler);\n          if (handlers.size === 0) {\n            this.handlers.delete(event);\n          }\n        }\n      },\n    };\n  }\n\n  unsubscribe(event: string, handler: EventHandler): void {\n    if (event === \"*\") {\n      this.wildcardHandlers.delete(handler);\n      return;\n    }\n\n    const handlers = this.handlers.get(event);\n    if (handlers) {\n      handlers.delete(handler);\n      if (handlers.size === 0) {\n        this.handlers.delete(event);\n      }\n    }\n  }\n\n  once<T>(event: string, handler: EventHandler<T>): EventSubscription {\n    const onceHandler = (data: T) => {\n      handler(data);\n      subscription.unsubscribe();\n    };\n\n    const subscription = this.subscribe(event, onceHandler);\n    return subscription;\n  }\n\n  getEventHistory(event?: string): EventHistoryEntry[] {\n    if (event) {\n      return this.eventHistory.filter((entry) => entry.event === event);\n    }\n    return [...this.eventHistory];\n  }\n\n  clearEventHistory(): void {\n    this.eventHistory = [];\n  }\n\n  getActiveSubscriptions(): Map<string, number> {\n    const subscriptions = new Map<string, number>();\n\n    for (const [event, handlers] of this.handlers) {\n      subscriptions.set(event, handlers.size);\n    }\n\n    if (this.wildcardHandlers.size > 0) {\n      subscriptions.set(\"*\", this.wildcardHandlers.size);\n    }\n\n    return subscriptions;\n  }\n\n  async waitForEvent<T>(event: string, timeout = 30000): Promise<T> {\n    return new Promise((resolve, reject) => {\n      const timeoutId = setTimeout(() => {\n        subscription.unsubscribe();\n        reject(new Error(`Timeout waiting for event: ${event}`));\n      }, timeout);\n\n      const subscription = this.once<T>(event, (data: T) => {\n        clearTimeout(timeoutId);\n        resolve(data);\n      });\n    });\n  }\n\n  getMetrics(): EventBusMetrics {\n    return {\n      totalEvents: this.eventHistory.length,\n      uniqueEvents: new Set(this.eventHistory.map((e) => e.event)).size,\n      activeSubscriptions:\n        Array.from(this.handlers.entries()).reduce(\n          (sum, [, handlers]) => sum + handlers.size,\n          0,\n        ) + this.wildcardHandlers.size,\n      wildcardSubscriptions: this.wildcardHandlers.size,\n      historySize: this.eventHistory.length,\n      maxHistorySize: this.maxHistorySize,\n    };\n  }\n\n  destroy(): void {\n    this.handlers.clear();\n    this.wildcardHandlers.clear();\n    this.eventHistory = [];\n    this.isInitialized = false;\n  }\n\n  private executeHandler(\n    handler: EventHandler,\n    data: any,\n    event: string,\n  ): void {\n    try {\n      const result = handler(data);\n\n      // Handle async handlers\n      if (result instanceof Promise) {\n        result.catch((error) => {\n          console.error(`Error in async event handler for ${event}:`, error);\n          this.publish(\"eventbus:error\", {\n            event,\n            error,\n            handler: handler.toString(),\n          });\n        });\n      }\n    } catch (error) {\n      console.error(`Error in event handler for ${event}:`, error);\n      this.publish(\"eventbus:error\", {\n        event,\n        error,\n        handler: handler.toString(),\n      });\n    }\n  }\n\n  private addToHistory(event: string, data: any): void {\n    this.eventHistory.push({\n      event,\n      data,\n      timestamp: Date.now(),\n    });\n\n    // Maintain history size limit\n    if (this.eventHistory.length > this.maxHistorySize) {\n      this.eventHistory.shift();\n    }\n  }\n\n  private setupErrorHandling(): void {\n    // Handle uncaught promise rejections from event handlers\n    if (typeof window !== \"undefined\") {\n      window.addEventListener(\"unhandledrejection\", (event) => {\n        this.publish(\"eventbus:unhandled-rejection\", {\n          reason: event.reason,\n          timestamp: Date.now(),\n        });\n      });\n    }\n  }\n}\n\nexport interface EventBusMetrics {\n  totalEvents: number;\n  uniqueEvents: number;\n  activeSubscriptions: number;\n  wildcardSubscriptions: number;\n  historySize: number;\n  maxHistorySize: number;\n}\n\n// Event Bus Factory for creating isolated instances\nexport class EventBusFactory {\n  private static instances: Map<string, EventBus> = new Map();\n\n  static create(name: string): EventBus {\n    if (!this.instances.has(name)) {\n      this.instances.set(name, new EventBus());\n    }\n    return this.instances.get(name)!;\n  }\n\n  static destroy(name: string): void {\n    const instance = this.instances.get(name);\n    if (instance) {\n      instance.destroy();\n      this.instances.delete(name);\n    }\n  }\n\n  static getAll(): Map<string, EventBus> {\n    return new Map(this.instances);\n  }\n}\n","import {\n  IPlugin,\n  PluginManifest,\n  PluginContext,\n  PluginCapability,\n} from \"../interfaces/plugin.js\";\nimport { PluginRegistry } from \"./plugin-registry.js\";\nimport { PluginLoader } from \"./plugin-loader.js\";\nimport { SecurityManager } from \"../security/security-manager.js\";\nimport { ResourceManager } from \"./resource-manager.js\";\nimport { EventBus } from \"../communication/event-bus.js\";\n\nexport class PluginManager {\n  private registry: PluginRegistry;\n  private loader: PluginLoader;\n  private security: SecurityManager;\n  private resources: ResourceManager;\n  private eventBus: EventBus;\n  private activePlugins: Map<string, IPlugin>;\n  private pluginContexts: Map<string, PluginContext>;\n  private initialized = false;\n\n  constructor() {\n    this.registry = new PluginRegistry();\n    this.loader = new PluginLoader();\n    this.security = new SecurityManager();\n    this.resources = new ResourceManager();\n    this.eventBus = new EventBus();\n    this.activePlugins = new Map();\n    this.pluginContexts = new Map();\n  }\n\n  async initialize(): Promise<void> {\n    if (this.initialized) return;\n\n    try {\n      await this.eventBus.initialize();\n      await this.security.initialize();\n      await this.resources.initialize();\n\n      this.initialized = true;\n\n      // Load core plugin definitions\n      await this.loadCorePluginDefinitions();\n\n      // Auto-discover plugins (skip in test environment)\n      if (typeof process === \"undefined\" || process.env.NODE_ENV !== \"test\") {\n        try {\n          await this.discoverPlugins();\n        } catch (error) {\n          console.warn(\n            \"Plugin discovery failed (this is normal in test environments):\",\n            String(error),\n          );\n        }\n      }\n\n      this.eventBus.publish(\"plugin-manager:initialized\", {\n        timestamp: Date.now(),\n      });\n    } catch (error) {\n      throw new Error(`Failed to initialize PluginManager: ${error}`);\n    }\n  }\n\n  async registerPlugin(manifest: PluginManifest): Promise<void> {\n    if (!this.initialized) {\n      throw new Error(\"PluginManager not initialized\");\n    }\n\n    // Validate manifest\n    const validation = this.registry.validateManifest(manifest);\n    if (!validation.isValid) {\n      throw new Error(\n        `Invalid plugin manifest: ${validation.errors.join(\", \")}`,\n      );\n    }\n\n    // Security validation\n    await this.security.validatePlugin(manifest);\n\n    // Version compatibility check\n    if (!this.isCompatible(manifest)) {\n      throw new Error(\n        `Plugin ${manifest.name} is not compatible with this version`,\n      );\n    }\n\n    // Register in registry\n    await this.registry.register(manifest);\n\n    this.eventBus.publish(\"plugin:registered\", { manifest });\n  }\n\n  async loadPlugin(pluginName: string): Promise<IPlugin> {\n    if (!this.initialized) {\n      throw new Error(\"PluginManager not initialized\");\n    }\n\n    const manifest = this.registry.getManifest(pluginName);\n    if (!manifest) {\n      throw new Error(`Plugin not found: ${pluginName}`);\n    }\n\n    // Check if already loaded\n    if (this.activePlugins.has(pluginName)) {\n      return this.activePlugins.get(pluginName)!;\n    }\n\n    try {\n      // Load plugin dependencies first\n      await this.loadDependencies(manifest);\n\n      // Load plugin code\n      const plugin = await this.loader.load(manifest);\n\n      // Create plugin context\n      const context = await this.createPluginContext(manifest);\n      this.pluginContexts.set(pluginName, context);\n\n      // Initialize plugin\n      await plugin.initialize(context);\n\n      // Register in active plugins\n      this.activePlugins.set(pluginName, plugin);\n\n      this.eventBus.publish(\"plugin:loaded\", { pluginName, manifest });\n\n      return plugin;\n    } catch (error) {\n      this.eventBus.publish(\"plugin:load-failed\", {\n        pluginName,\n        error: String(error),\n      });\n      throw error;\n    }\n  }\n\n  async activatePlugin(pluginName: string): Promise<void> {\n    if (!this.initialized) {\n      throw new Error(\"PluginManager not initialized\");\n    }\n\n    const plugin = await this.loadPlugin(pluginName);\n\n    try {\n      // Allocate resources\n      await this.resources.allocate(pluginName);\n\n      // Create security sandbox\n      await this.security.createSandbox(pluginName);\n\n      // Activate plugin\n      await plugin.activate();\n\n      this.eventBus.publish(\"plugin:activated\", { pluginName });\n    } catch (error) {\n      this.eventBus.publish(\"plugin:activation-failed\", {\n        pluginName,\n        error: String(error),\n      });\n      throw error;\n    }\n  }\n\n  async deactivatePlugin(pluginName: string): Promise<void> {\n    const plugin = this.activePlugins.get(pluginName);\n    if (!plugin) {\n      throw new Error(`Plugin not active: ${pluginName}`);\n    }\n\n    try {\n      // Deactivate plugin\n      await plugin.deactivate();\n\n      // Release resources\n      await this.resources.release(pluginName);\n\n      // Destroy sandbox\n      await this.security.destroySandbox(pluginName);\n\n      this.eventBus.publish(\"plugin:deactivated\", { pluginName });\n    } catch (error) {\n      this.eventBus.publish(\"plugin:deactivation-failed\", {\n        pluginName,\n        error: String(error),\n      });\n      throw error;\n    }\n  }\n\n  async unloadPlugin(pluginName: string): Promise<void> {\n    const plugin = this.activePlugins.get(pluginName);\n    if (plugin) {\n      // Deactivate first if active\n      try {\n        await this.deactivatePlugin(pluginName);\n      } catch (error) {\n        console.warn(\n          `Failed to deactivate plugin ${pluginName} during unload:`,\n          error,\n        );\n      }\n\n      // Cleanup plugin\n      try {\n        await plugin.cleanup();\n      } catch (error) {\n        console.warn(`Plugin cleanup failed for ${pluginName}:`, error);\n      }\n\n      this.activePlugins.delete(pluginName);\n      this.pluginContexts.delete(pluginName);\n    }\n\n    await this.loader.unload(pluginName);\n\n    this.eventBus.publish(\"plugin:unloaded\", { pluginName });\n  }\n\n  async executePlugin(\n    pluginName: string,\n    operation: string,\n    params: any,\n  ): Promise<any> {\n    const plugin = this.activePlugins.get(pluginName);\n    if (!plugin) {\n      throw new Error(`Plugin not active: ${pluginName}`);\n    }\n\n    // Check permissions\n    await this.security.checkPermission(pluginName, operation, params);\n\n    // Monitor resource usage\n    const resourceMonitor = await this.resources.createMonitor(pluginName);\n\n    try {\n      const startTime = performance.now();\n      const result = await plugin.execute(operation, params);\n      const endTime = performance.now();\n\n      this.eventBus.publish(\"plugin:operation-completed\", {\n        pluginName,\n        operation,\n        duration: endTime - startTime,\n        success: true,\n      });\n\n      return result;\n    } catch (error) {\n      this.eventBus.publish(\"plugin:operation-failed\", {\n        pluginName,\n        operation,\n        error: String(error),\n      });\n      throw error;\n    } finally {\n      await resourceMonitor.stop();\n    }\n  }\n\n  async configurePlugin(pluginName: string, settings: any): Promise<void> {\n    const plugin = this.activePlugins.get(pluginName);\n    if (!plugin) {\n      throw new Error(`Plugin not active: ${pluginName}`);\n    }\n\n    try {\n      await plugin.configure(settings);\n      this.eventBus.publish(\"plugin:configured\", { pluginName, settings });\n    } catch (error) {\n      this.eventBus.publish(\"plugin:configuration-failed\", {\n        pluginName,\n        error: String(error),\n      });\n      throw error;\n    }\n  }\n\n  // Plugin Discovery and Management\n  async discoverPlugins(): Promise<PluginManifest[]> {\n    if (!this.initialized) {\n      throw new Error(\"PluginManager not initialized\");\n    }\n\n    try {\n      // Discover from standard locations\n      const discovered = await this.loader.discoverPlugins([\n        \"./plugins/\",\n        \"../plugins/\",\n        \"/plugins/\",\n      ]);\n\n      const manifests: PluginManifest[] = [];\n      for (const path of discovered) {\n        try {\n          const manifest = await this.loader.loadManifest(path);\n          await this.registerPlugin(manifest);\n          manifests.push(manifest);\n        } catch (error) {\n          console.warn(`Failed to load plugin from ${path}:`, error);\n        }\n      }\n\n      this.eventBus.publish(\"plugins:discovered\", {\n        count: manifests.length,\n        manifests,\n      });\n      return manifests;\n    } catch (error) {\n      this.eventBus.publish(\"plugins:discovery-failed\", {\n        error: String(error),\n      });\n      throw error;\n    }\n  }\n\n  getActivePlugins(): string[] {\n    return Array.from(this.activePlugins.keys());\n  }\n\n  getRegisteredPlugins(): string[] {\n    return this.registry.getAllManifests().map((m) => m.name);\n  }\n\n  getPluginInfo(pluginName: string): PluginInfo | null {\n    const plugin = this.activePlugins.get(pluginName);\n    const manifest = this.registry.getManifest(pluginName);\n\n    if (!plugin || !manifest) {\n      return null;\n    }\n\n    return {\n      name: plugin.getName(),\n      version: plugin.getVersion(),\n      description: plugin.getDescription(),\n      author: plugin.getAuthor(),\n      category: manifest.category,\n      capabilities: plugin.getCapabilities(),\n      status: this.getPluginStatus(pluginName),\n      resourceUsage: this.resources.getUsage(pluginName),\n      dependencies: plugin.getDependencies(),\n      permissions: manifest.permissions,\n    };\n  }\n\n  getPluginsByCategory(category: string): string[] {\n    return this.registry.getPluginsByCategory(category);\n  }\n\n  searchPlugins(query: any): any[] {\n    return this.registry.search(query);\n  }\n\n  async getSystemStatus(): Promise<PluginSystemStatus> {\n    const securityReport = await this.security.generateSecurityReport();\n    const resourceReport = await this.resources.generateReport();\n\n    return {\n      initialized: this.initialized,\n      totalRegistered: this.registry.getAllManifests().length,\n      totalActive: this.activePlugins.size,\n      categorySummary: this.getCategorySummary(),\n      resourceUsage: resourceReport.summary,\n      securityStatus: {\n        violations: securityReport.violations.length,\n        suspiciousActivity: securityReport.suspiciousActivity.length,\n        activeSandboxes: securityReport.summary.activeSandboxes,\n      },\n      eventBusMetrics: this.eventBus.getMetrics(),\n    };\n  }\n\n  async hotReloadPlugin(pluginName: string): Promise<void> {\n    if (!this.activePlugins.has(pluginName)) {\n      throw new Error(`Plugin not active: ${pluginName}`);\n    }\n\n    const manifest = this.registry.getManifest(pluginName);\n    if (!manifest) {\n      throw new Error(`Plugin manifest not found: ${pluginName}`);\n    }\n\n    try {\n      // Save current state if supported\n      const plugin = this.activePlugins.get(pluginName)!;\n      let savedState: any = null;\n\n      if (typeof (plugin as any).saveState === \"function\") {\n        savedState = await (plugin as any).saveState();\n      }\n\n      // Unload current plugin\n      await this.unloadPlugin(pluginName);\n\n      // Reload plugin\n      const newPlugin = await this.loadPlugin(pluginName);\n      await this.activatePlugin(pluginName);\n\n      // Restore state if available\n      if (savedState && typeof (newPlugin as any).restoreState === \"function\") {\n        await (newPlugin as any).restoreState(savedState);\n      }\n\n      this.eventBus.publish(\"plugin:hot-reloaded\", { pluginName });\n    } catch (error) {\n      this.eventBus.publish(\"plugin:hot-reload-failed\", {\n        pluginName,\n        error: String(error),\n      });\n      throw error;\n    }\n  }\n\n  private async loadCorePluginDefinitions(): Promise<void> {\n    // Define core system plugins that should be available\n    const corePlugins = [\n      {\n        name: \"performance-monitor\",\n        version: \"1.0.0\",\n        description: \"System performance monitoring plugin\",\n        author: \"DataPrism Team\",\n        license: \"MIT\",\n        keywords: [\"monitoring\", \"performance\", \"system\"],\n        category: \"utility\" as const,\n        entryPoint: \"./core-plugins/performance-monitor.js\",\n        dependencies: [],\n        permissions: [{ resource: \"core\", access: \"read\" as const }],\n        configuration: {},\n        compatibility: {\n          minCoreVersion: \"0.1.0\",\n          browsers: [\"chrome\", \"firefox\", \"safari\", \"edge\"],\n        },\n      },\n    ];\n\n    for (const plugin of corePlugins) {\n      try {\n        await this.registerPlugin(plugin);\n      } catch (error) {\n        console.warn(`Failed to register core plugin ${plugin.name}:`, error);\n      }\n    }\n  }\n\n  private async loadDependencies(manifest: PluginManifest): Promise<void> {\n    for (const dep of manifest.dependencies) {\n      if (!dep.optional && !this.activePlugins.has(dep.name)) {\n        await this.loadPlugin(dep.name);\n        await this.activatePlugin(dep.name);\n      }\n    }\n  }\n\n  private async createPluginContext(\n    manifest: PluginManifest,\n  ): Promise<PluginContext> {\n    const resourceQuota = this.resources.getQuota(manifest.name);\n    return {\n      pluginName: manifest.name,\n      coreVersion: \"0.1.0\", // TODO: Get from DataPrism Core\n      services: await this.createServiceProxy(manifest),\n      eventBus: this.eventBus,\n      logger: this.createPluginLogger(manifest.name),\n      config: await this.loadPluginConfig(manifest.name),\n      resources: {\n        maxMemoryMB: resourceQuota.memoryMB,\n        maxCpuPercent: resourceQuota.cpuPercent,\n        maxExecutionTime: resourceQuota.maxExecutionTimeMs,\n      },\n    };\n  }\n\n  private async createServiceProxy(manifest: PluginManifest): Promise<any> {\n    // Create a service proxy that enforces permissions\n    return {\n      call: async (serviceName: string, method: string, ...args: any[]) => {\n        const operation = `${serviceName}.${method}`;\n        await this.security.checkPermission(manifest.name, operation, args);\n\n        // TODO: Implement actual service calls to DataPrism Core\n        return { success: true, result: null };\n      },\n      hasPermission: (serviceName: string, method: string) => {\n        const requiredPermission = {\n          resource: serviceName,\n          access: \"read\" as const,\n        };\n        const permissions = manifest.permissions;\n        return permissions.some(\n          (perm) =>\n            perm.resource === requiredPermission.resource &&\n            (perm.access === requiredPermission.access ||\n              perm.access === \"execute\"),\n        );\n      },\n    };\n  }\n\n  private createPluginLogger(pluginName: string): any {\n    return {\n      debug: (message: string, ...args: any[]) =>\n        console.debug(`[${pluginName}]`, message, ...args),\n      info: (message: string, ...args: any[]) =>\n        console.info(`[${pluginName}]`, message, ...args),\n      warn: (message: string, ...args: any[]) =>\n        console.warn(`[${pluginName}]`, message, ...args),\n      error: (message: string, ...args: any[]) =>\n        console.error(`[${pluginName}]`, message, ...args),\n    };\n  }\n\n  private async loadPluginConfig(pluginName: string): Promise<any> {\n    // TODO: Implement configuration loading from storage\n    return {};\n  }\n\n  private isCompatible(manifest: PluginManifest): boolean {\n    // Check core version compatibility\n    const coreVersion = \"0.1.0\"; // TODO: Get from DataPrism Core\n\n    // Simple semver compatibility check\n    const minVersion = manifest.compatibility.minCoreVersion;\n    const maxVersion = manifest.compatibility.maxCoreVersion;\n\n    // TODO: Implement proper semver comparison\n    return true; // Simplified for now\n  }\n\n  private getPluginStatus(pluginName: string): PluginStatus {\n    if (this.activePlugins.has(pluginName)) {\n      return \"active\";\n    } else if (this.registry.getManifest(pluginName)) {\n      return \"inactive\";\n    } else {\n      return \"unknown\";\n    }\n  }\n\n  private getCategorySummary(): Record<string, number> {\n    const summary: Record<string, number> = {};\n\n    for (const manifest of this.registry.getAllManifests()) {\n      summary[manifest.category] = (summary[manifest.category] || 0) + 1;\n    }\n\n    return summary;\n  }\n\n  async destroy(): Promise<void> {\n    // Unload all active plugins\n    const activePluginNames = Array.from(this.activePlugins.keys());\n    for (const pluginName of activePluginNames) {\n      try {\n        await this.unloadPlugin(pluginName);\n      } catch (error) {\n        console.warn(\n          `Failed to unload plugin ${pluginName} during shutdown:`,\n          error,\n        );\n      }\n    }\n\n    // Cleanup managers\n    this.eventBus.destroy();\n    await this.resources.destroy();\n\n    this.initialized = false;\n  }\n}\n\nexport interface PluginInfo {\n  name: string;\n  version: string;\n  description: string;\n  author: string;\n  category: string;\n  capabilities: PluginCapability[];\n  status: PluginStatus;\n  resourceUsage: any;\n  dependencies: any[];\n  permissions: any[];\n}\n\nexport type PluginStatus = \"active\" | \"inactive\" | \"error\" | \"unknown\";\n\nexport interface PluginSystemStatus {\n  initialized: boolean;\n  totalRegistered: number;\n  totalActive: number;\n  categorySummary: Record<string, number>;\n  resourceUsage: any;\n  securityStatus: {\n    violations: number;\n    suspiciousActivity: number;\n    activeSandboxes: number;\n  };\n  eventBusMetrics: any;\n}\n","// Main plugin system exports\nexport { PluginManager } from \"./manager/plugin-manager.js\";\nimport { PluginManager } from \"./manager/plugin-manager.js\";\nimport { PluginRegistry } from \"./manager/plugin-registry.js\";\nimport {\n  IPlugin,\n  PluginManifest,\n  PluginContext,\n  PluginCapability,\n} from \"./interfaces/plugin.js\";\nimport type { ValidationResult } from \"./manager/plugin-registry.js\";\nexport { PluginRegistry } from \"./manager/plugin-registry.js\";\nexport { PluginLoader, PluginLoadError } from \"./manager/plugin-loader.js\";\nexport {\n  ResourceManager,\n  ResourceMonitor,\n  ResourceError,\n} from \"./manager/resource-manager.js\";\n\n// Security system exports\nexport {\n  SecurityManager,\n  PluginSandbox,\n  SecurityError,\n  AuditLogger,\n  SecurityPolicySet,\n} from \"./security/security-manager.js\";\n\n// Communication system exports\nexport { EventBus, EventBusFactory } from \"./communication/event-bus.js\";\n\n// Interface exports\nexport * from \"./interfaces/index.js\";\n\n// Type exports for convenience\nexport type {\n  // Plugin Manager types\n  PluginInfo,\n  PluginStatus,\n  PluginSystemStatus,\n} from \"./manager/plugin-manager.js\";\n\nexport type {\n  // Plugin Registry types\n  PluginSearchQuery,\n  PluginSearchResult,\n  PluginRegistryStatistics,\n  ValidationResult,\n} from \"./manager/plugin-registry.js\";\n\nexport type {\n  // Plugin Loader types\n  PluginValidationResult,\n  PluginModuleInfo,\n  ModuleType,\n} from \"./manager/plugin-loader.js\";\n\nexport type {\n  // Resource Manager types\n  ResourceQuota,\n  ResourceUsage,\n  ResourceAllocation,\n  ResourceViolation,\n  ResourceReport,\n  ResourceSummary,\n  GlobalResourceLimits,\n  GlobalResourceUsage,\n  OptimizationResult,\n  QuotaEnforcementResult,\n} from \"./manager/resource-manager.js\";\n\nexport type {\n  // Security types\n  SandboxConfig,\n  SecurityReport,\n  SuspiciousActivity,\n  SecurityPolicy,\n  AuditEvent,\n  EventFilter,\n} from \"./security/security-manager.js\";\n\nexport type {\n  // Event Bus types\n  EventHandler,\n  EventSubscription,\n  EventHistoryEntry,\n  EventBusMetrics,\n} from \"./communication/event-bus.js\";\n\n// Plugin System Factory\nexport class DataPrismPluginSystem {\n  private static instance: PluginManager | null = null;\n\n  static async create(config?: PluginSystemConfig): Promise<PluginManager> {\n    if (this.instance) {\n      return this.instance;\n    }\n\n    const manager = new PluginManager();\n\n    // Apply configuration if provided\n    if (config) {\n      this.applyConfiguration(manager, config);\n    }\n\n    await manager.initialize();\n    this.instance = manager;\n\n    return manager;\n  }\n\n  static getInstance(): PluginManager | null {\n    return this.instance;\n  }\n\n  static async destroy(): Promise<void> {\n    if (this.instance) {\n      await this.instance.destroy();\n      this.instance = null;\n    }\n  }\n\n  private static applyConfiguration(\n    manager: PluginManager,\n    config: PluginSystemConfig,\n  ): void {\n    // Apply configuration to manager\n    // In production, this would configure various aspects of the plugin system\n    console.debug(\"Plugin system configuration applied:\", config);\n  }\n}\n\nexport interface PluginSystemConfig {\n  maxPlugins?: number;\n  securityLevel?: \"strict\" | \"moderate\" | \"permissive\";\n  resourceLimits?: {\n    globalMemoryMB?: number;\n    globalCPUPercent?: number;\n  };\n  discoveryPaths?: string[];\n  enableHotReload?: boolean;\n  auditLogging?: boolean;\n}\n\n// Utility functions for plugin development\nexport const PluginUtils = {\n  /**\n   * Validates a plugin manifest against the schema\n   */\n  validateManifest: async (manifest: any): Promise<ValidationResult> => {\n    const registry = new PluginRegistry();\n    return registry.validateManifest(manifest);\n  },\n\n  /**\n   * Creates a basic plugin manifest template\n   */\n  createManifestTemplate: (pluginName: string, category: string): any => {\n    return {\n      name: pluginName,\n      version: \"1.0.0\",\n      description: `${pluginName} plugin for DataPrism`,\n      author: \"Plugin Developer\",\n      license: \"MIT\",\n      keywords: [category, \"dataprism\"],\n      category,\n      entryPoint: \"./index.js\",\n      dependencies: [],\n      permissions: [{ resource: \"data\", access: \"read\" }],\n      configuration: {},\n      compatibility: {\n        minCoreVersion: \"0.1.0\",\n        browsers: [\"chrome\", \"firefox\", \"safari\", \"edge\"],\n      },\n    };\n  },\n\n  /**\n   * Generates a unique plugin ID\n   */\n  generatePluginId: (): string => {\n    return `plugin-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n  },\n\n  /**\n   * Checks if a version string is valid\n   */\n  isValidVersion: (version: string): boolean => {\n    return /^\\d+\\.\\d+\\.\\d+(-[\\w\\d\\-]+)?(\\+[\\w\\d\\-]+)?$/.test(version);\n  },\n};\n\n// Plugin development helpers\nexport abstract class BasePlugin implements IPlugin {\n  protected manifest: PluginManifest;\n  protected context: PluginContext | null = null;\n  protected initialized = false;\n  protected active = false;\n\n  constructor(manifest: PluginManifest) {\n    this.manifest = manifest;\n  }\n\n  getName(): string {\n    return this.manifest.name;\n  }\n\n  getVersion(): string {\n    return this.manifest.version;\n  }\n\n  getDescription(): string {\n    return this.manifest.description;\n  }\n\n  getAuthor(): string {\n    return this.manifest.author;\n  }\n\n  getDependencies(): any[] {\n    return this.manifest.dependencies;\n  }\n\n  getManifest(): PluginManifest {\n    return this.manifest;\n  }\n\n  isCompatible(coreVersion: string): boolean {\n    // Simple compatibility check - in production, implement proper semver checking\n    return true;\n  }\n\n  abstract getCapabilities(): PluginCapability[];\n\n  async initialize(context: PluginContext): Promise<void> {\n    this.context = context;\n    this.initialized = true;\n    await this.onInitialize(context);\n  }\n\n  async activate(): Promise<void> {\n    if (!this.initialized) {\n      throw new Error(\"Plugin must be initialized before activation\");\n    }\n    this.active = true;\n    await this.onActivate();\n  }\n\n  async deactivate(): Promise<void> {\n    this.active = false;\n    await this.onDeactivate();\n  }\n\n  async cleanup(): Promise<void> {\n    await this.onCleanup();\n    this.context = null;\n    this.initialized = false;\n    this.active = false;\n  }\n\n  abstract execute(operation: string, params: any): Promise<any>;\n\n  async configure(settings: any): Promise<void> {\n    await this.onConfigure(settings);\n  }\n\n  // Hook methods for subclasses to override\n  protected async onInitialize(context: PluginContext): Promise<void> {\n    // Override in subclass\n  }\n\n  protected async onActivate(): Promise<void> {\n    // Override in subclass\n  }\n\n  protected async onDeactivate(): Promise<void> {\n    // Override in subclass\n  }\n\n  protected async onCleanup(): Promise<void> {\n    // Override in subclass\n  }\n\n  protected async onConfigure(settings: any): Promise<void> {\n    // Override in subclass\n  }\n\n  // Utility methods for plugin implementations\n  protected log(\n    level: \"debug\" | \"info\" | \"warn\" | \"error\",\n    message: string,\n    ...args: any[]\n  ): void {\n    if (this.context?.logger) {\n      this.context.logger[level](message, ...args);\n    } else {\n      console[level](`[${this.getName()}]`, message, ...args);\n    }\n  }\n\n  protected emit(event: string, data: any): void {\n    if (this.context?.eventBus) {\n      this.context.eventBus.publish(`plugin:${this.getName()}:${event}`, data);\n    }\n  }\n\n  protected async callService(\n    serviceName: string,\n    method: string,\n    ...args: any[]\n  ): Promise<any> {\n    if (!this.context?.services) {\n      throw new Error(\"Plugin context services not available\");\n    }\n    return this.context.services.call(serviceName, method, ...args);\n  }\n}\n\n// Version information\nexport const VERSION = \"1.0.0\";\nexport const BUILD_TIME = new Date().toISOString();\n\n// Plugin system metadata\nexport const PLUGIN_SYSTEM_INFO = {\n  name: \"DataPrism Plugin System\",\n  version: VERSION,\n  buildTime: BUILD_TIME,\n  supportedCategories: [\n    \"data-processing\",\n    \"visualization\",\n    \"integration\",\n    \"utility\",\n  ],\n  capabilities: [\n    \"Dynamic plugin loading\",\n    \"Security sandboxing\",\n    \"Resource management\",\n    \"Event-driven communication\",\n    \"Hot reload support\",\n    \"Dependency resolution\",\n    \"Audit logging\",\n  ],\n};\n","export { DataPrismEngine } from \"./engine.js\";\nexport { DuckDBManager } from \"./duckdb-manager.js\";\nexport { ErrorHandler } from \"./error-handler.js\";\nexport { DependencyRegistry } from \"./dependency-registry.js\";\nexport { ArrowLoader } from \"./arrow-loader.js\";\nexport { DependencyErrorHandler } from \"./dependency-error-handler.js\";\nexport { DependencyEventSystem } from \"./dependency-events.js\";\n\n// Plugin System Exports\nexport {\n  PluginManager,\n  PluginRegistry,\n  PluginLoader,\n  PluginLoadError,\n  ResourceManager,\n  ResourceMonitor,\n  ResourceError,\n  SecurityManager,\n  PluginSandbox,\n  SecurityError,\n  AuditLogger,\n  SecurityPolicySet,\n  EventBus,\n  EventBusFactory,\n  DataPrismPluginSystem,\n  BasePlugin,\n  PluginUtils,\n  VERSION as PLUGIN_VERSION,\n  PLUGIN_SYSTEM_INFO,\n} from \"../../plugins/src/index.js\";\n\nexport type {\n  DataPrismConfig,\n  QueryResult,\n  QueryMetadata,\n  DataPrismError,\n  PerformanceMetrics,\n  EngineStatus,\n  Logger,\n  LogLevel,\n} from \"./types.js\";\n\n// Plugin System Types\nexport type {\n  IPlugin,\n  PluginManifest,\n  PluginContext,\n  PluginCapability,\n  PluginInfo,\n  PluginStatus,\n  PluginSystemStatus,\n  PluginSearchQuery,\n  PluginSearchResult,\n  PluginRegistryStatistics,\n  ValidationResult,\n  PluginValidationResult,\n  PluginModuleInfo,\n  ModuleType,\n  ResourceQuota,\n  ResourceUsage,\n  ResourceAllocation,\n  ResourceViolation,\n  ResourceReport,\n  ResourceSummary,\n  GlobalResourceLimits,\n  GlobalResourceUsage,\n  OptimizationResult,\n  QuotaEnforcementResult,\n  SandboxConfig,\n  SecurityReport,\n  SuspiciousActivity,\n  SecurityPolicy,\n  AuditEvent,\n  EventFilter,\n  EventHandler,\n  EventSubscription,\n  EventHistoryEntry,\n  EventBusMetrics,\n  PluginSystemConfig,\n  // Core Plugin Interfaces (as requested in issue #18)\n  IDataProcessorPlugin,\n  IVisualizationPlugin,\n  IIntegrationPlugin,\n  IUtilityPlugin,\n  ILLMIntegrationPlugin,\n  ISecurityUtilityPlugin,\n  Dataset,\n  ProcessingOptions,\n  VisualizationType,\n  RenderConfig,\n  InteractionEvent,\n  Connection,\n  SyncResult,\n  DataSource,\n  UtilityFeature,\n  SystemStatus,\n  HealthStatus,\n  PluginCategory,\n} from \"../../plugins/src/index.js\";\n\nexport type {\n  DependencyState,\n  DependencyMetadata,\n  DependencyLoadOptions,\n  DependencyEvent,\n  DependencyEventHandler,\n} from \"./dependency-registry.js\";\n\nexport type {\n  ArrowModule,\n} from \"./arrow-loader.js\";\n\nexport type {\n  EnhancedError,\n} from \"./dependency-error-handler.js\";\n\nexport type {\n  DataPrismEventType,\n  DataPrismEvent,\n  DataPrismEventHandler,\n} from \"./dependency-events.js\";\n\n// Version information\nexport const version = \"0.1.0\";\nexport const name = \"DataPrism Core\";\n\n// Re-export classes\nimport { DataPrismEngine } from \"./engine.js\";\nimport type { DataPrismConfig } from \"./types.js\";\n\n// Utility functions\nexport function createEngine(config?: Partial<DataPrismConfig>) {\n  return new DataPrismEngine(config);\n}\n\n// Export for convenience\nexport default DataPrismEngine;\n"],"names":["_ErrorHandler","__publicField","error","source","dataPrismError","timestamp","ErrorHandler","event","q","h","Y","j","K","V","z","J","r","t","o","$","H","Ye","x","Z","X","n","ee","a","re","te","se","A","e","ne","E","u","p","b","D","c","O","l","i","_","d","m","oe","L","T","ae","F","f","U","C","W","R","v","M","B","He","k","y","g","S","N","ce","Qe","DuckDBCDNLoader","baseUrl","currentScript","script","url","configUrl","response","config","duckdb.getJsDelivrBundles","name","bundle","bundles","duckdb.selectBundle","worker_url","worker","logger","duckdb.ConsoleLogger","db","duckdb.AsyncDuckDB","DuckDBManager","cdnBaseUrl","sql","startTime","result","endTime","data","row","tableName","schema","columns","type","_DependencyRegistry","options","metadata","loader","loadPromise","resolve","reject","timeoutId","module","retryDelay","state","dependency","handler","timeoutMs","dependencies","targetDeps","results","index","preloadPromises","all","ready","loading","timeout","healthScore","DependencyRegistry","_ArrowLoader","loadStrategies","lastError","strategy","component","message","originalError","arrow","ArrowLoader","DataPrismEngine","initPromises","wasmModule","dataBytes","wasmResult","executionTime","memoryUsage","level","healthStatus","status","health","failedDeps","_DependencyErrorHandler","baseMessage","loadTime","contextMessage","errorMessage","steps","context","formatted","key","value","step","retryCount","shouldRetry","delay","maxRetries","DependencyErrorHandler","_DependencyEventSystem","dataPrismEvent","registryEventType","allDeps","readyDeps","dep","total","loaded","eventType","handlers","stage","additionalData","progress","container","indicator","progressBar","messageEl","detailsEl","progressHandler","DependencyEventSystem","PluginRegistry","manifest","existing","deps","pluginName","dependents","category","visited","visiting","order","visit","query","score","matches","keyword","categoryStats","authorStats","totalDependencies","count","authorCount","errors","warnings","validCategories","perm","validAccess","depManifest","version","required","available","cycles","path","cycleStart","cycle","PluginLoader","PluginLoadError","searchPaths","discoveredPaths","searchPath","paths","pluginPath","manifestPath","manifestModule","instance","pluginCapabilities","requiredMethods","method","modulePath","resolvedPath","wasmInstance","PluginClass","pluginPaths","mockPaths","manifestNames","pluginNames","SecurityManager","AuditLogger","SecurityPolicySet","permissions","SecurityError","sandbox","PluginSandbox","operation","params","requiredPermission","events","violations","suspiciousActivity","dangerousPatterns","manifestString","pattern","ext","permission","suspiciousKeywords","textToCheck","validResources","granted","allowedAPIs","sanitized","sensitiveKeys","sensitive","suspicious","now","timeWindow","recentDenials","keywordEvents","recommendations","workerCode","workerBlob","code","messageHandler","filter","filtered","policy","ResourceManager","quota","currentUsage","ResourceError","allocation","monitor","ResourceMonitor","usage","pluginUsage","allUsage","globalUsage","pluginReports","summary","report","optimizations","plugin","actions","pluginViolations","violation","action","totalMemoryMB","totalCPUPercent","totalDiskMB","totalNetworkKbps","memoryEfficiency","cpuEfficiency","reports","totalAllocatedMemory","sum","totalUsedMemory","totalViolations","inefficientPlugins","opt","EventBus","eventHandlers","onceHandler","subscription","entry","subscriptions","EventBusFactory","PluginManager","validation","resourceMonitor","settings","discovered","manifests","securityReport","resourceReport","savedState","newPlugin","corePlugins","resourceQuota","serviceName","args","activePluginNames","DataPrismPluginSystem","manager","PluginUtils","BasePlugin","coreVersion","VERSION","BUILD_TIME","PLUGIN_SYSTEM_INFO","createEngine"],"mappings":"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","x_google_ignoreList":[1]}